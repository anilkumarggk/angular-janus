var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Devices.html",[0,0.584,1,0.584]],["body/interfaces/Devices.html",[0,1.005,1,0.751,2,1.051,3,0.686,4,0.545,5,0.686,6,1.051,7,1.084,8,1.642,9,1.792,10,0.421,11,1.792,12,1.788,13,2.212,14,1.788,15,1.445,16,1.084,17,0.085,18,1.792,19,1.078,20,1.449,21,1.792,22,0.545,23,1.449,24,1.065,25,1.521,26,1.572,27,1.084,28,2.212,29,1.449,30,1.788,31,1.792,32,1.788,33,2.212,34,2.212,35,1.792,36,1.175,37,2.052,38,1.939,39,1.345,40,1.45,41,1.3,42,1.345,43,2.212,44,1.3,45,1.051,46,1.659,47,2.32,48,0.686,49,1.051,50,1.323,51,1.051,52,1.3,53,1.3,54,0.686,55,0.852,56,1.175,57,1.051,58,1.051,59,1.051,60,0.927,61,1.345,62,1.175,63,1.3,64,1.084,65,0.947,66,1.449,67,0.852,68,0.852,69,0.852,70,1.051,71,1.051,72,1.449,73,1.051,74,1.051,75,1.876,76,1.051,77,1.3,78,0.796,79,1.3,80,1.3,81,1.3,82,1.792,83,0.686,84,1.051,85,0.751,86,1.051,87,1.3,88,1.3,89,1.3,90,1.792,91,1.3,92,0.852,93,1.792,94,1.3,95,1.051,96,1.3,97,0.852,98,1.3,99,1.792,100,1.792,101,0.852,102,1.792,103,1.3,104,0.852,105,1.792,106,1.051,107,1.051,108,1.175,109,1.792,110,1.051,111,1.175,112,1.051,113,1.3,114,1.3,115,1.3,116,1.3,117,0.927,118,1.051,119,1.051,120,1.3,121,0.852,122,0.686,123,0.545,124,0.545,125,1.3,126,1.3,127,0.852,128,1.3,129,1.3,130,1.051,131,1.051,132,0.852,133,1.449,134,1.449,135,1.449,136,1.175,137,1.3,138,1.449,139,0.947,140,1.051,141,0.852,142,0.852,143,1.051,144,1.051,145,0.852,146,0.852,147,1.051,148,1.3,149,0.039,150,0.054,151,0.039]],["title/interfaces/IceServer.html",[0,0.584,139,0.736]],["body/interfaces/IceServer.html",[0,1.006,1,0.545,2,1.052,3,0.687,4,0.545,5,0.687,6,1.052,7,1.084,8,1.45,9,1.301,10,0.421,11,1.793,12,1.052,13,1.301,14,1.052,15,1.445,16,1.084,17,0.085,18,1.301,19,1.031,20,1.052,21,1.301,22,0.545,23,1.45,24,1.066,25,1.521,26,1.573,27,1.084,28,2.212,29,1.45,30,1.789,31,1.793,32,1.789,33,2.212,34,2.212,35,1.793,36,1.176,37,2.053,38,1.94,39,1.346,40,1.45,41,1.301,42,1.346,43,2.212,44,1.301,45,1.052,46,1.659,47,2.321,48,0.687,49,1.052,50,1.323,51,1.052,52,1.301,53,1.301,54,0.687,55,0.853,56,1.176,57,1.052,58,1.052,59,1.052,60,0.927,61,1.346,62,1.176,63,1.301,64,1.084,65,0.947,66,1.45,67,0.853,68,0.853,69,0.853,70,1.052,71,1.052,72,1.45,73,1.052,74,1.052,75,1.876,76,1.052,77,1.301,78,0.796,79,1.301,80,1.301,81,1.301,82,1.793,83,0.687,84,1.052,85,0.752,86,1.052,87,1.301,88,1.301,89,1.301,90,1.793,91,1.301,92,0.853,93,1.793,94,1.301,95,1.052,96,1.301,97,0.853,98,1.301,99,1.793,100,1.793,101,0.853,102,1.793,103,1.301,104,0.853,105,1.793,106,1.052,107,1.052,108,1.176,109,1.793,110,1.052,111,1.346,112,1.052,113,1.301,114,1.301,115,1.301,116,1.301,117,0.927,118,1.052,119,1.052,120,1.301,121,0.853,122,0.687,123,0.545,124,0.545,125,1.301,126,1.301,127,0.853,128,1.301,129,1.301,130,1.052,131,1.052,132,0.853,133,1.45,134,1.45,135,1.45,136,1.176,137,1.301,138,1.45,139,1.169,140,1.45,141,1.176,142,0.853,143,1.052,144,1.052,145,1.176,146,1.45,147,1.789,148,2.212,149,0.039,150,0.054,151,0.039,152,1.634,153,2.212]],["title/modules/JanusModule.html",[154,1.127,155,0.914]],["body/modules/JanusModule.html",[3,0.99,4,0.786,5,0.99,17,0.084,22,1.123,24,0.786,149,0.056,150,0.068,151,0.056,154,1.516,155,1.757,156,1.875,157,1.516,158,1.875,159,2.446,160,2.355,161,1.875,162,3.074,163,2.355,164,2.355,165,2.355,166,1.459,167,2.856,168,2.355,169,2.355,170,3.085,171,2.856,172,1.229,173,3.741,174,2.355,175,3.085,176,2.355,177,3.085,178,2.856,179,3.085,180,3.085,181,3.741,182,2.856,183,3.085,184,1.49,185,3.085,186,3.085,187,2.856,188,3.085,189,3.085,190,3.085,191,2.856,192,3.085,193,3.085,194,2.355,195,1.516]],["title/components/JanusVideoroomComponent.html",[166,0.736,196,1.127]],["body/components/JanusVideoroomComponent.html",[0,0.737,1,0.963,3,0.427,4,0.339,5,0.427,7,0.427,10,0.262,15,1.351,16,1.302,17,0.085,19,0.847,22,0.916,23,1.022,24,0.339,25,1.432,27,1.068,29,0.654,36,0.828,39,0.828,40,0.828,42,0.53,45,1.022,48,1.068,50,1.068,54,0.821,56,1.506,60,0.847,61,1.325,64,0.427,65,0.929,66,0.654,67,1.152,78,0.654,83,0.667,85,1.101,97,0.828,101,1.432,106,1.022,107,0.654,108,1.325,111,1.152,117,0.963,119,1.257,121,1.019,122,0.667,123,0.885,124,0.799,127,1.25,132,1.019,133,1.542,135,1.022,136,1.559,139,0.821,141,0.828,142,0.828,143,0.654,144,0.654,145,1.152,146,0.828,147,1.542,149,0.024,150,0.038,151,0.024,152,1.016,153,1.264,158,0.809,161,1.264,166,0.929,172,0.53,176,3.097,184,0.828,195,0.654,196,1.816,197,1.588,198,1.016,199,1.331,200,1.331,201,1.331,202,4.056,203,1.331,204,2.41,205,1.588,206,2.079,207,1.588,208,1.588,209,2.079,210,1.588,211,2.079,212,1.588,213,2.893,214,1.588,215,1.588,216,2.745,217,2.079,218,2.893,219,2.079,220,1.555,221,2.487,222,1.588,223,2.559,224,2.559,225,1.331,226,2.079,227,2.079,228,3.596,229,1.954,230,1.588,231,2.559,232,2.079,233,2.079,234,3.475,235,1.954,236,3.138,237,2.378,238,2.021,239,2.396,240,2.653,241,2.079,242,2.559,243,2.079,244,1.588,245,1.331,246,3.065,247,1.331,248,1.588,249,1.331,250,2.079,251,2.208,252,1.907,253,1.331,254,1.758,255,2.079,256,2.396,257,2.079,258,1.555,259,2.079,260,1.331,261,2.208,262,1.588,263,2.079,264,2.079,265,2.079,266,2.079,267,2.079,268,1.264,269,2.079,270,2.079,271,1.264,272,2.079,273,2.079,274,1.588,275,2.079,276,1.588,277,2.079,278,2.079,279,2.559,280,1.331,281,2.079,282,2.079,283,1.331,284,1.588,285,2.893,286,2.079,287,2.079,288,1.588,289,1.331,290,2.079,291,2.893,292,1.331,293,2.079,294,1.588,295,2.079,296,1.331,297,1.331,298,1.588,299,1.588,300,3.138,301,1.331,302,2.893,303,2.208,304,2.079,305,2.079,306,1.331,307,2.208,308,2.079,309,1.264,310,1.331,311,1.016,312,2.822,313,1.331,314,1.331,315,2.94,316,1.555,317,1.331,318,2.079,319,1.331,320,1.331,321,1.331,322,1.016,323,2.208,324,2.079,325,1.331,326,1.016,327,1.016,328,2.079,329,1.331,330,1.331,331,1.331,332,1.016,333,1.016,334,1.331,335,1.331,336,2.559,337,1.331,338,0.809,339,1.555,340,1.954,341,2.208,342,0.809,343,1.016,344,1.331,345,1.331,346,1.331,347,1.016,348,0.654,349,1.331,350,1.331,351,2.559,352,2.079,353,2.559,354,1.331,355,1.331,356,2.079,357,1.331,358,1.331,359,2.112,360,2.079,361,0.809,362,1.331,363,1.331,364,1.331,365,2.079,366,1.331,367,1.331,368,1.331,369,1.331,370,1.331,371,1.331,372,1.331,373,1.331,374,1.331,375,1.331,376,2.079,377,1.331,378,1.331,379,1.331,380,0.809,381,1.331,382,1.016,383,1.331,384,1.016,385,1.331,386,1.331,387,1.016,388,2.893,389,1.331,390,1.331,391,1.331,392,1.331,393,1.331,394,1.331,395,1.331,396,1.331,397,1.331,398,1.331,399,1.331,400,1.331,401,2.079,402,1.331,403,1.331,404,1.331,405,1.331,406,2.079,407,1.331,408,1.331,409,1.331,410,1.331,411,1.331,412,1.331,413,2.079,414,1.331,415,1.331,416,1.331,417,1.331,418,1.331,419,1.331,420,1.331,421,1.016,422,1.331,423,1.331,424,1.331,425,1.954,426,1.016,427,1.331,428,2.079,429,1.588,430,1.016,431,2.893,432,1.331,433,1.331,434,1.331]],["title/interfaces/Publisher.html",[0,0.584,78,0.451]],["body/interfaces/Publisher.html",[0,1.01,1,0.507,2,0.978,3,0.639,4,0.507,5,0.639,6,0.978,7,1.132,8,1.405,9,1.21,10,0.392,11,1.705,12,0.978,13,1.21,14,0.978,15,1.426,16,1.132,17,0.085,18,1.21,19,1.075,20,0.978,21,1.21,22,0.507,23,1.378,24,1.049,25,1.482,26,1.537,27,1.132,28,2.144,29,1.378,30,1.733,31,1.705,32,1.733,33,2.144,34,2.144,35,1.705,36,1.118,37,1.974,38,1.896,39,1.405,40,1.405,41,1.21,42,1.294,43,2.144,44,1.21,45,0.978,46,1.596,47,2.501,48,0.639,49,0.978,50,1.339,51,0.978,52,1.21,53,1.21,54,0.639,55,0.793,56,1.294,57,0.978,58,0.978,59,0.978,60,1.031,61,1.482,62,1.118,63,1.21,64,1.132,65,0.901,66,1.378,67,0.793,68,0.793,69,0.793,70,0.978,71,0.978,72,1.827,73,0.978,74,0.978,75,2.073,76,0.978,77,1.21,78,0.838,79,1.705,80,1.705,81,1.705,82,2.144,83,0.901,84,1.378,85,0.899,86,1.378,87,1.705,88,1.705,89,1.705,90,2.144,91,1.705,92,1.118,93,2.144,94,1.705,95,1.378,96,1.705,97,1.118,98,1.705,99,2.144,100,2.144,101,1.118,102,2.144,103,1.705,104,1.118,105,2.144,106,1.378,107,1.378,108,1.405,109,2.144,110,1.378,111,1.294,112,1.378,113,1.705,114,1.705,115,1.705,116,1.705,117,0.947,118,1.378,119,1.378,120,1.705,121,1.118,122,0.901,123,0.715,124,0.715,125,1.705,126,1.705,127,1.118,128,1.705,129,1.705,130,1.378,131,0.978,132,0.793,133,1.378,134,1.378,135,1.378,136,1.118,137,1.21,138,1.378,139,0.901,140,0.978,141,0.793,142,0.793,143,0.978,144,0.978,145,0.793,146,0.793,147,0.978,148,1.21,149,0.036,150,0.051,151,0.036]],["title/injectables/WebrtcService.html",[435,1.394,436,1.751]],["body/injectables/WebrtcService.html",[1,0.755,3,0.33,4,0.262,5,0.33,7,0.543,8,1.544,10,0.202,12,1.756,14,1.793,15,1.325,16,0.33,17,0.086,19,0.755,20,1.226,22,0.798,24,0.431,25,0.41,26,0.41,27,1.12,30,0.505,32,0.505,38,0.831,39,0.674,40,0.858,46,0.831,48,0.691,50,1.05,54,1.229,55,0.41,60,0.755,61,1.181,64,0.801,65,1.172,67,0.994,68,1.098,69,0.674,78,0.202,83,0.33,85,0.702,86,0.505,92,0.674,95,0.505,104,0.41,108,0.41,117,0.549,118,0.505,121,0.41,122,0.33,123,0.431,124,0.889,127,1.424,130,0.505,134,0.505,139,0.543,146,0.41,149,0.019,150,0.031,151,0.019,153,0.625,172,0.41,184,1.454,195,0.831,204,0.625,205,0.786,220,1.028,221,1.028,235,1.644,237,1.516,238,1.028,239,1.291,244,1.905,246,2.263,248,0.786,252,1.028,254,0.625,268,0.625,271,1.028,303,0.786,309,0.625,311,2.391,312,3.333,316,0.625,322,0.786,323,2.587,326,0.786,327,0.786,332,0.786,333,0.786,338,2.258,339,1.903,341,2.787,342,2.12,343,0.786,347,0.786,348,0.505,359,2.642,361,2.355,380,1.028,384,0.786,387,1.644,425,1.291,426,2.73,429,1.644,435,1.309,436,1.905,437,1.029,438,1.029,439,1.692,440,1.692,441,2.154,442,1.692,443,1.692,444,2.154,445,2.495,446,2.757,447,2.154,448,2.495,449,2.154,450,1.029,451,1.029,452,1.905,453,2.964,454,1.692,455,1.029,456,2.495,457,2.105,458,1.692,459,1.291,460,2.495,461,1.291,462,1.029,463,1.692,464,1.644,465,1.029,466,1.029,467,1.029,468,1.029,469,2.154,470,1.029,471,0.786,472,1.291,473,1.692,474,1.029,475,1.029,476,1.029,477,1.029,478,1.029,479,1.029,480,1.644,481,1.029,482,0.786,483,0.786,484,1.029,485,1.029,486,1.692,487,1.029,488,1.029,489,0.786,490,1.029,491,1.692,492,1.291,493,1.029,494,1.029,495,1.028,496,1.692,497,1.029,498,1.692,499,1.029,500,1.029,501,1.692,502,1.029,503,1.029,504,1.029,505,1.029,506,1.029,507,2.154,508,2.154,509,1.029,510,1.029,511,1.029,512,1.029,513,1.029,514,1.029,515,1.029,516,1.029,517,1.692,518,2.154,519,1.029,520,2.757,521,1.905,522,1.029,523,1.029,524,3.575,525,1.029,526,1.029,527,1.029,528,1.029,529,2.154,530,1.692,531,1.029,532,0.786,533,1.029,534,1.029,535,1.029,536,3.272,537,1.029,538,1.029,539,1.029,540,1.029,541,1.291,542,1.029,543,1.029,544,3.775,545,1.692,546,2.154,547,2.391,548,2.154,549,1.692,550,1.692,551,1.029,552,1.029,553,0.786,554,1.029,555,1.692,556,1.029,557,1.029,558,1.029,559,1.692,560,1.692,561,2.154,562,1.692,563,1.029,564,1.029,565,1.029,566,1.029,567,1.029,568,1.029,569,1.029,570,1.692,571,1.692,572,1.029,573,2.263,574,1.029,575,1.692,576,1.029,577,1.692,578,1.029,579,1.692,580,1.029,581,2.757,582,2.495,583,1.029,584,1.029,585,1.029,586,1.029,587,1.692,588,1.692,589,1.029,590,1.029,591,1.029,592,1.692,593,1.029,594,1.029,595,1.692,596,1.692,597,3.575,598,1.029,599,2.154,600,1.029,601,1.692,602,1.692,603,1.692,604,2.391,605,1.029,606,1.029,607,1.692,608,1.692,609,1.029,610,1.029,611,1.692,612,1.029,613,1.029,614,2.154,615,1.029,616,1.029,617,0.786,618,1.029,619,1.029,620,1.029,621,1.029,622,1.692,623,1.692,624,1.692,625,1.029,626,1.029,627,1.029,628,1.029,629,1.029,630,1.692,631,1.692,632,1.692,633,1.029,634,1.029,635,1.692,636,1.692,637,1.029,638,1.029,639,1.029,640,1.029,641,1.029,642,1.029,643,2.263,644,1.029,645,1.692,646,2.495,647,1.692,648,1.692,649,2.154,650,1.029,651,2.964,652,1.029,653,1.029,654,1.029,655,1.029,656,1.029,657,1.029,658,1.029,659,1.029,660,1.029,661,1.692,662,1.029,663,0.786,664,0.786,665,1.029,666,1.029,667,1.029,668,1.692,669,1.692,670,1.029,671,0.786,672,1.029,673,1.692,674,1.029,675,1.029,676,1.692,677,1.692,678,1.291,679,1.692,680,1.029,681,1.029,682,1.029,683,1.029,684,1.675,685,1.029,686,1.029,687,1.029,688,1.029,689,1.029,690,1.029,691,2.495,692,2.495,693,2.495,694,1.029,695,1.029,696,1.029,697,0.786,698,1.029,699,1.029,700,1.029,701,1.029,702,1.029,703,1.029,704,1.029,705,1.029,706,1.029,707,0.786,708,1.029,709,2.757,710,1.692,711,1.029,712,1.029,713,1.029,714,2.495,715,1.029,716,1.029,717,1.029,718,1.029,719,1.029,720,1.029,721,1.029,722,1.692,723,1.029,724,1.029,725,1.692,726,1.029,727,1.029,728,1.029,729,1.029,730,1.029,731,1.029,732,1.692,733,1.029,734,0.786,735,1.029,736,1.692,737,1.029,738,1.029,739,1.029,740,2.757,741,1.029,742,1.029,743,2.757,744,1.029,745,1.692,746,1.029,747,1.029,748,1.029,749,1.029,750,1.029,751,1.029,752,1.029,753,1.692,754,1.029,755,1.029,756,2.495,757,1.029,758,1.029,759,1.029,760,1.029,761,1.029,762,1.029,763,1.029,764,1.029,765,1.692,766,1.029,767,1.029,768,1.029,769,1.029,770,1.029,771,1.029,772,0.786,773,1.029,774,1.029,775,1.029,776,1.029,777,0.786,778,1.029,779,1.029,780,1.029,781,1.029,782,0.786,783,0.786,784,1.029,785,1.029,786,1.029,787,1.029,788,1.029,789,0.786,790,1.029,791,1.029,792,1.029,793,1.029,794,1.029,795,1.029,796,1.029,797,1.029,798,1.029,799,1.029,800,1.029,801,1.692,802,1.029,803,1.029,804,1.291,805,1.029,806,1.029,807,1.029,808,1.029,809,1.029,810,1.029,811,1.029,812,1.029,813,1.029,814,1.029,815,1.029,816,1.029,817,1.029,818,1.029,819,1.029,820,1.029,821,2.757,822,1.692,823,1.692,824,1.029,825,1.029,826,1.029]],["title/dependencies.html",[157,1.35,827,1.933]],["body/dependencies.html",[17,0.081,149,0.064,150,0.074,151,0.064,157,1.996,172,1.414,174,2.71,828,3.549,829,3.549,830,3.549,831,4.063]],["title/miscellaneous/enumerations.html",[832,0.95,833,2.098]],["body/miscellaneous/enumerations.html",[6,1.727,10,0.692,17,0.079,62,1.4,78,0.795,117,0.895,131,1.727,132,1.61,138,1.985,149,0.064,150,0.073,151,0.064,258,2.455,832,1.727,833,2.684,834,3.515]],["title/index.html",[10,0.38,214,1.476,835,1.933]],["body/index.html",[1,0.761,4,0.555,8,1.19,17,0.082,19,0.761,22,0.761,24,0.761,27,1.177,36,0.868,55,0.868,56,1.461,60,0.555,62,0.868,65,1.094,78,0.588,83,0.699,84,1.468,85,1.116,92,0.868,97,1.19,101,0.868,104,0.868,110,1.07,111,0.868,112,1.07,117,0.555,122,0.959,123,0.555,124,0.761,136,1.358,140,1.07,141,1.19,145,1.19,149,0.04,150,0.054,151,0.04,154,1.468,155,1.358,159,1.324,166,0.959,171,1.663,172,0.868,184,1.19,194,2.281,195,1.468,196,2.125,198,1.663,204,2.662,207,1.663,208,2.281,210,2.281,212,1.663,215,1.663,216,1.663,221,1.324,222,1.663,229,2.281,230,1.663,237,1.324,238,1.815,240,1.663,251,1.663,254,2.229,256,1.663,261,1.663,262,2.281,268,1.324,271,1.324,274,1.663,276,1.663,284,2.8,288,1.663,294,1.663,298,2.603,299,1.663,307,1.663,309,2.072,315,2.281,316,1.324,421,1.663,430,2.603,452,1.663,457,1.663,459,2.8,461,1.663,464,2.603,472,2.281,482,2.281,483,1.663,492,1.663,495,1.324,521,2.281,532,1.663,541,1.663,553,1.663,573,1.663,664,1.663,671,2.8,678,1.663,684,2.229,697,1.663,772,2.281,777,1.663,782,2.281,836,3.668,837,3.409,838,3.409,839,3.409,840,2.179,841,2.179,842,2.179,843,2.179,844,2.179,845,2.179,846,2.179,847,2.179,848,2.179,849,2.179,850,2.179,851,2.179,852,2.179,853,2.179,854,2.179,855,2.987,856,2.179,857,2.179,858,2.987,859,2.179,860,2.179,861,2.987,862,2.179,863,3.409,864,2.179,865,2.179,866,2.179,867,2.179,868,2.987,869,2.179,870,2.179,871,2.179,872,2.179,873,4.065,874,2.179,875,2.179,876,2.987,877,2.179,878,2.179,879,2.179,880,2.179,881,2.179,882,3.668,883,3.409,884,2.987,885,3.409,886,2.179,887,2.179,888,2.179,889,2.179,890,2.179,891,2.179,892,2.179,893,2.179,894,2.179,895,2.179,896,2.179,897,2.179,898,2.987,899,1.663,900,2.179,901,2.179,902,2.179,903,2.179,904,2.179,905,2.179,906,2.987,907,2.987,908,2.179,909,2.179,910,1.663,911,2.179,912,2.179,913,2.987,914,2.179,915,2.179,916,2.179,917,2.179,918,2.179,919,2.179,920,2.987,921,2.179,922,2.179,923,2.179,924,2.179,925,2.179,926,2.179,927,2.179,928,2.179,929,2.179,930,2.179,931,2.179,932,2.179,933,2.179,934,2.179,935,2.179,936,2.179,937,2.179,938,2.987,939,2.987,940,2.179,941,2.179,942,2.987,943,2.179,944,2.179,945,2.179,946,2.987,947,2.987,948,2.179,949,2.179,950,2.179,951,2.179,952,2.179,953,2.179,954,2.179,955,2.179,956,2.179,957,2.179,958,2.179,959,2.179,960,2.179,961,2.179,962,2.179,963,2.179,964,2.179,965,2.179,966,2.179,967,2.179,968,2.179,969,2.179,970,2.179,971,2.179,972,2.179,973,2.179,974,2.179,975,2.179,976,2.179,977,2.179,978,2.179,979,2.179,980,2.179,981,2.179]],["title/modules.html",[156,1.88]],["body/modules.html",[17,0.074,149,0.065,150,0.074,151,0.065,155,1.427,156,2.178,480,2.736,982,3.584,983,3.584,984,3.584]],["title/overview.html",[985,2.362]],["body/overview.html",[2,1.676,17,0.079,149,0.062,150,0.072,151,0.062,154,1.951,155,1.755,157,1.676,158,2.074,159,2.074,160,2.605,161,2.074,162,2.605,163,2.605,164,2.605,165,2.605,166,1.444,167,3.032,168,2.605,169,2.605,196,1.676,435,2.074,707,2.605,789,3.208,985,2.605]],["title/miscellaneous/variables.html",[348,1.35,832,0.95]],["body/miscellaneous/variables.html",[7,1.074,10,0.414,15,1.435,16,1.446,17,0.085,19,0.853,26,1.564,42,1.162,48,0.675,49,1.433,50,0.675,51,1.433,54,0.936,57,1.433,58,1.433,59,1.433,60,0.853,64,1.318,68,0.838,69,0.838,70,1.034,71,1.034,72,1.034,73,1.034,74,1.034,75,1.034,76,1.034,85,0.743,123,0.536,124,0.536,142,1.162,149,0.038,150,0.053,151,0.038,166,0.675,178,1.606,182,1.606,184,0.838,187,1.606,191,1.606,197,2.759,220,1.279,252,2.754,258,2.754,338,1.279,339,1.279,340,1.606,342,2.034,348,1.034,359,1.772,361,2.495,380,1.279,382,1.606,471,1.606,489,2.227,495,1.772,547,1.606,604,2.998,617,2.227,643,2.556,663,1.606,684,1.279,734,1.606,783,1.606,804,1.606,832,1.034,899,1.606,910,1.606,986,2.917,987,4.441,988,4.456,989,2.917,990,2.917,991,3.347,992,2.917,993,2.104,994,2.917,995,2.917,996,2.917,997,2.917,998,2.917,999,2.917,1000,2.917,1001,2.917,1002,2.917,1003,2.917,1004,2.917,1005,2.104,1006,2.917,1007,2.917,1008,2.917,1009,2.917,1010,2.917,1011,2.917,1012,2.917,1013,2.917,1014,2.917,1015,2.917,1016,2.104,1017,2.104,1018,2.104,1019,2.917,1020,2.917,1021,2.104,1022,2.917,1023,2.104,1024,2.104,1025,2.104,1026,2.104,1027,2.917,1028,2.917,1029,2.104,1030,2.104,1031,2.917,1032,2.104,1033,2.104,1034,2.104,1035,2.104,1036,2.104,1037,2.104,1038,3.347,1039,2.104,1040,2.104,1041,2.917,1042,4.22,1043,4.105,1044,2.104,1045,2.104,1046,2.104]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":643,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["000",{"_index":654,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1",{"_index":789,"title":{},"body":{"injectables/WebrtcService.html":{},"overview.html":{}}}],["10.1.1",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":418,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["1000",{"_index":677,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1080",{"_index":502,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1234",{"_index":955,"title":{},"body":{"index.html":{}}}],["127",{"_index":109,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["128000",{"_index":771,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["13",{"_index":515,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["15",{"_index":571,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1920",{"_index":500,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["2",{"_index":646,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["2.0.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":738,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["256000",{"_index":770,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["3",{"_index":707,"title":{},"body":{"injectables/WebrtcService.html":{},"overview.html":{}}}],["3rdparty/janus.es",{"_index":487,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["4",{"_index":706,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["6",{"_index":466,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["64",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64000",{"_index":773,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["9999",{"_index":419,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["_attachvideoroomhelper(subscriber",{"_index":572,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_createvideoelement(canvasid",{"_index":708,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_get_random_string",{"_index":569,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_mutevideo(videoelement",{"_index":683,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_setmuted(muted",{"_index":372,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["_sizecanvaselement(videowidth",{"_index":690,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["accessors",{"_index":243,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["actual_component",{"_index":434,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["add",{"_index":697,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["adding",{"_index":967,"title":{},"body":{"index.html":{}}}],["addition",{"_index":920,"title":{},"body":{"index.html":{}}}],["additional",{"_index":968,"title":{},"body":{"index.html":{}}}],["adopt",{"_index":862,"title":{},"body":{"index.html":{}}}],["ahead",{"_index":99,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["allow",{"_index":477,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["allows",{"_index":458,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["allremotefeeds",{"_index":392,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["already",{"_index":744,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["always",{"_index":870,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":887,"title":{},"body":{"index.html":{}}}],["android",{"_index":475,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["angular",{"_index":208,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["angular/common",{"_index":174,"title":{},"body":{"modules/JanusModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":172,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"index.html":{}}}],["angularincluding",{"_index":949,"title":{},"body":{"index.html":{}}}],["answerremotefeedjsep(jsep",{"_index":627,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["anyone",{"_index":912,"title":{},"body":{"index.html":{}}}],["anything",{"_index":288,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["api",{"_index":958,"title":{},"body":{"index.html":{}}}],["app",{"_index":839,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":953,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":954,"title":{},"body":{"index.html":{}}}],["application",{"_index":863,"title":{},"body":{"index.html":{}}}],["arg1",{"_index":594,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["arg2",{"_index":592,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["around",{"_index":457,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["array",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aspect",{"_index":906,"title":{},"body":{"index.html":{}}}],["assign",{"_index":295,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["async",{"_index":444,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attach",{"_index":380,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["attach_failed",{"_index":35,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attach_success",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attached",{"_index":34,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attaching",{"_index":33,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attachmediastream(elemid",{"_index":790,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attachremotefeed",{"_index":794,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attachremotefeeds(remotefeeds",{"_index":379,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["attachvideoroom(url",{"_index":613,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attribute",{"_index":724,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audio",{"_index":124,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["audio/video",{"_index":134,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["audio_codec",{"_index":73,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["audio_level_average",{"_index":102,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["audioboxcomponent",{"_index":178,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":665,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiodeviceid",{"_index":12,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["audiodevices",{"_index":506,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiodevices.length",{"_index":514,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audioinput",{"_index":509,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiooutput",{"_index":513,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiorecv",{"_index":762,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiosend",{"_index":631,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiotrack",{"_index":732,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["authentication",{"_index":943,"title":{},"body":{"index.html":{}}}],["auto",{"_index":892,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":294,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["available",{"_index":884,"title":{},"body":{"index.html":{}}}],["average",{"_index":94,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["await",{"_index":504,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["back",{"_index":53,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["backend",{"_index":110,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["background",{"_index":95,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["barrier",{"_index":850,"title":{},"body":{"index.html":{}}}],["bars",{"_index":699,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["before",{"_index":725,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["believe",{"_index":872,"title":{},"body":{"index.html":{}}}],["below",{"_index":217,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["better",{"_index":276,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["black",{"_index":698,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["body",{"_index":635,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["boolean",{"_index":61,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["bootstrap",{"_index":160,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["box.component",{"_index":181,"title":{},"body":{"modules/JanusModule.html":{}}}],["box/audio",{"_index":180,"title":{},"body":{"modules/JanusModule.html":{}}}],["box/video",{"_index":193,"title":{},"body":{"modules/JanusModule.html":{}}}],["break",{"_index":388,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["broadcast",{"_index":287,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["browse",{"_index":984,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":480,"title":{},"body":{"injectables/WebrtcService.html":{},"modules.html":{}}}],["bug",{"_index":962,"title":{},"body":{"index.html":{}}}],["build",{"_index":846,"title":{},"body":{"index.html":{}}}],["building",{"_index":848,"title":{},"body":{"index.html":{}}}],["burden",{"_index":928,"title":{},"body":{"index.html":{}}}],["button",{"_index":927,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":977,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":540,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["called",{"_index":532,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["calling",{"_index":786,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["camera",{"_index":21,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["camera/microphone",{"_index":915,"title":{},"body":{"index.html":{}}}],["canvas",{"_index":710,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext",{"_index":674,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.canvas.height",{"_index":648,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.canvas.width",{"_index":645,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.drawimage",{"_index":658,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.drawimage(videoelement",{"_index":642,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.fillrect(0",{"_index":655,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.fillstyle",{"_index":653,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.restore",{"_index":659,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.save",{"_index":656,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.translate(centerx",{"_index":657,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement",{"_index":712,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.capturestream",{"_index":715,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.getcontext('2d",{"_index":675,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.height",{"_index":731,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.width",{"_index":730,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasheight",{"_index":692,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasid",{"_index":743,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasstream",{"_index":714,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasstream.addtrack(videostream.getaudiotracks()[0",{"_index":735,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaswidth",{"_index":691,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["case",{"_index":121,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["catch((error",{"_index":774,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["center",{"_index":704,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["centerx",{"_index":644,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["centery",{"_index":647,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["change",{"_index":309,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["changed",{"_index":918,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":226,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["changedetectionstrategy",{"_index":313,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":227,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["changing",{"_index":902,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":723,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["class",{"_index":195,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["clean",{"_index":552,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["cleanup",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanuplocalstream",{"_index":563,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["client",{"_index":860,"title":{},"body":{"index.html":{}}}],["clients",{"_index":845,"title":{},"body":{"index.html":{}}}],["cluster_janusmodule",{"_index":163,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["cluster_janusmodule_declarations",{"_index":165,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["cluster_janusmodule_exports",{"_index":164,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["code",{"_index":861,"title":{},"body":{"index.html":{}}}],["combinelatest",{"_index":325,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["comes",{"_index":52,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["common",{"_index":494,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["commonmodule",{"_index":173,"title":{},"body":{"modules/JanusModule.html":{}}}],["comms",{"_index":390,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["complete",{"_index":752,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["component",{"_index":196,"title":{"components/JanusVideoroomComponent.html":{}},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":432,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["components",{"_index":197,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"miscellaneous/variables.html":{}}}],["components/audio",{"_index":179,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/default",{"_index":183,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/self",{"_index":188,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/video",{"_index":192,"title":{},"body":{"modules/JanusModule.html":{}}}],["condition",{"_index":785,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["configuration",{"_index":111,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["configure",{"_index":765,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["configured",{"_index":842,"title":{},"body":{"index.html":{}}}],["connect",{"_index":421,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["connection",{"_index":263,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["connections",{"_index":886,"title":{},"body":{"index.html":{}}}],["consent",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consent_dialog",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentdialog(on",{"_index":583,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log(\"gum",{"_index":787,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log(\"have",{"_index":815,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log(\"message",{"_index":806,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('error",{"_index":639,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('ice",{"_index":593,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('warning",{"_index":531,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('would",{"_index":810,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["const",{"_index":359,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":497,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["constructor",{"_index":244,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["constructor(janusstore",{"_index":245,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["containers/janus",{"_index":175,"title":{},"body":{"modules/JanusModule.html":{}}}],["core",{"_index":878,"title":{},"body":{"index.html":{}}}],["create",{"_index":614,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["create/edit/delete",{"_index":935,"title":{},"body":{"index.html":{}}}],["createoffer",{"_index":755,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["credential",{"_index":148,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["crop",{"_index":703,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["cross",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":39,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["currently",{"_index":86,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["currentsubstream",{"_index":71,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":921,"title":{},"body":{"index.html":{}}}],["customize",{"_index":971,"title":{},"body":{"index.html":{}}}],["data",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":538,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["declarations",{"_index":159,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":252,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["defaultvideoroomcomponent",{"_index":182,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":246,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["demo",{"_index":952,"title":{},"body":{"index.html":{}}}],["demos",{"_index":854,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":157,"title":{"dependencies.html":{}},"body":{"modules/JanusModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":120,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["deploy",{"_index":274,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["deploying",{"_index":219,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["deployment",{"_index":945,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["desired",{"_index":460,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["destroy",{"_index":343,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["destroyed",{"_index":619,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["detached",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details",{"_index":141,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["determines",{"_index":463,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["developer",{"_index":876,"title":{},"body":{"index.html":{}}}],["developers",{"_index":864,"title":{},"body":{"index.html":{}}}],["device",{"_index":8,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["device.kind",{"_index":508,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["deviceid",{"_index":498,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["devices",{"_index":1,"title":{"interfaces/Devices.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["devices.filter((device",{"_index":507,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["dialog",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":908,"title":{},"body":{"index.html":{}}}],["directive",{"_index":430,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["directives",{"_index":433,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["directly",{"_index":265,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["dispatch",{"_index":385,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["display",{"_index":122,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["displayname",{"_index":72,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["docs",{"_index":145,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["document.createelement('video",{"_index":711,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["document.getelementbyid(canvasid",{"_index":713,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["document.getelementbyid(elemid",{"_index":791,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["documentation",{"_index":853,"title":{},"body":{"index.html":{}}}],["documented",{"_index":957,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":668,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["doing",{"_index":777,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["dom",{"_index":200,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["don't",{"_index":104,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["done",{"_index":747,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["draw(canvascontext",{"_index":641,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["drawing",{"_index":662,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["drawloopactive",{"_index":527,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["dropping",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":478,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["dynamically",{"_index":917,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":474,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["each",{"_index":98,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["easily",{"_index":206,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["easy",{"_index":838,"title":{},"body":{"index.html":{}}}],["element",{"_index":429,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["elementref",{"_index":314,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["elements",{"_index":939,"title":{},"body":{"index.html":{}}}],["embed",{"_index":207,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["emitremotefeeds(remotefeeds",{"_index":374,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["emits",{"_index":302,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["enabled",{"_index":843,"title":{},"body":{"index.html":{}}}],["encountered",{"_index":304,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["enlarged",{"_index":895,"title":{},"body":{"index.html":{}}}],["entire",{"_index":979,"title":{},"body":{"index.html":{}}}],["enum",{"_index":28,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["enumerations",{"_index":833,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":38,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["error(error",{"_index":581,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["errorcode",{"_index":57,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":303,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["estate",{"_index":900,"title":{},"body":{"index.html":{}}}],["etc",{"_index":941,"title":{},"body":{"index.html":{}}}],["event",{"_index":130,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["eventemitter",{"_index":300,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["events",{"_index":114,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["example",{"_index":216,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["exhaustive",{"_index":932,"title":{},"body":{"index.html":{}}}],["expect",{"_index":608,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["factory.each(i",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.sync.makefactory",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback",{"_index":889,"title":{},"body":{"index.html":{}}}],["false",{"_index":342,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["fatal",{"_index":305,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["features",{"_index":837,"title":{},"body":{"index.html":{}}}],["feed",{"_index":65,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["feed.id",{"_index":801,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feed.state",{"_index":376,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["feed.video_codec",{"_index":800,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feedid",{"_index":813,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feeds",{"_index":381,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["feel",{"_index":981,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["find",{"_index":783,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["fire",{"_index":384,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["first",{"_index":317,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["fixing",{"_index":963,"title":{},"body":{"index.html":{}}}],["following",{"_index":883,"title":{},"body":{"index.html":{}}}],["format",{"_index":267,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["framerate",{"_index":661,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels",{"_index":488,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.attach_success",{"_index":580,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.consent_dialog",{"_index":584,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.media_state",{"_index":586,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_cleanup",{"_index":612,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_local_stream",{"_index":605,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_message",{"_index":598,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_cleanup",{"_index":819,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_feed_message",{"_index":807,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_remote_stream",{"_index":818,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_stream",{"_index":610,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.remote_feed_slow_link",{"_index":812,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.remote_feed_webrtc_state",{"_index":809,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.webrtc_state",{"_index":590,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["fully",{"_index":879,"title":{},"body":{"index.html":{}}}],["function",{"_index":678,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["functional",{"_index":880,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":975,"title":{},"body":{"index.html":{}}}],["functions",{"_index":441,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["future",{"_index":782,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["fuzzy",{"_index":780,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["gateway",{"_index":882,"title":{},"body":{"index.html":{}}}],["getdefaultdevices",{"_index":445,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["getting",{"_index":835,"title":{"index.html":{}},"body":{}}],["getusermedia",{"_index":446,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["getusermedia(audiodeviceid",{"_index":454,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["give",{"_index":973,"title":{},"body":{"index.html":{}}}],["given",{"_index":685,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["goal",{"_index":696,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["good",{"_index":115,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["great",{"_index":855,"title":{},"body":{"index.html":{}}}],["hack",{"_index":670,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle",{"_index":520,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle.createanswer",{"_index":629,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle.send({message",{"_index":637,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handled",{"_index":909,"title":{},"body":{"index.html":{}}}],["handleremotejsep(jsep",{"_index":625,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handles",{"_index":523,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["happen",{"_index":609,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["height",{"_index":501,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["helper",{"_index":440,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["here",{"_index":271,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["high",{"_index":205,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["highly",{"_index":272,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["html",{"_index":428,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["http",{"_index":885,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":255,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":143,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["https://janus.conf.meetecho.com/docs/videoroom.html|janus",{"_index":334,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["https://janus.conf.meetecho.com/janus",{"_index":257,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["httpurl",{"_index":234,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["i'm",{"_index":776,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["i.tostring",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ice",{"_index":919,"title":{},"body":{"index.html":{}}}],["iceserver",{"_index":139,"title":{"interfaces/IceServer.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["iceservers",{"_index":235,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["icestate(arg1",{"_index":591,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["id",{"_index":19,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":452,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["iff",{"_index":128,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["ignore",{"_index":119,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["implement",{"_index":873,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":84,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["implementing",{"_index":851,"title":{},"body":{"index.html":{}}}],["implements",{"_index":222,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["imports",{"_index":194,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{}}}],["include",{"_index":942,"title":{},"body":{"index.html":{}}}],["included",{"_index":461,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["includes",{"_index":844,"title":{},"body":{"index.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["information",{"_index":47,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["init",{"_index":533,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["init(iceservers",{"_index":528,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["initialize",{"_index":347,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["initialized",{"_index":32,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["initializing",{"_index":31,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["initialstate",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":435,"title":{"injectables/WebrtcService.html":{}},"body":{"injectables/WebrtcService.html":{},"overview.html":{}}}],["injectables",{"_index":437,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["input",{"_index":315,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["input/output",{"_index":250,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["inputs",{"_index":213,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["inputs/outputs",{"_index":956,"title":{},"body":{"index.html":{}}}],["installation",{"_index":946,"title":{},"body":{"index.html":{}}}],["instance",{"_index":573,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["instance._attachvideoroomhelper(subscriber",{"_index":618,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance._createvideoelement(canvasid",{"_index":759,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance._get_random_string",{"_index":602,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.answerremotefeedjsep(jsep",{"_index":808,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.createoffer",{"_index":788,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.draw(canvascontext",{"_index":680,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.drawloopactive",{"_index":673,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handle",{"_index":578,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handle.send({message",{"_index":766,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handleremotejsep(jsep",{"_index":600,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.janus",{"_index":616,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.janus.attach",{"_index":796,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.localstream",{"_index":758,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.opaqueid",{"_index":797,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.publishwebrtcstate",{"_index":589,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id",{"_index":798,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id].send({message",{"_index":805,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id].videocodec",{"_index":799,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.streams[streamid",{"_index":603,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.videoelement",{"_index":760,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.webrtcservice.getusermedia(audiodeviceid",{"_index":757,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["interaction",{"_index":940,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"overview.html":{}}}],["intermittent",{"_index":775,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["internal",{"_index":25,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["interval",{"_index":484,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["interval(100).pipe",{"_index":751,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["intimate",{"_index":877,"title":{},"body":{"index.html":{}}}],["iphone",{"_index":465,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ismuted",{"_index":236,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ismuted(muted",{"_index":335,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["isn't",{"_index":103,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["issupporteddevice",{"_index":447,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["it's",{"_index":83,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["item",{"_index":734,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["item.tostring(36",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":933,"title":{},"body":{"index.html":{}}}],["itself",{"_index":978,"title":{},"body":{"index.html":{}}}],["janus",{"_index":85,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["janus.attachmediastream(element",{"_index":792,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.attachmediastream(videoelement",{"_index":718,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.init",{"_index":537,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.iswebrtcsupported",{"_index":542,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.plugin.videoroom",{"_index":575,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["januserror",{"_index":242,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["januserrors",{"_index":331,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["januserrors[roominfo.errorcode].message",{"_index":405,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusmodule",{"_index":155,"title":{"modules/JanusModule.html":{}},"body":{"modules/JanusModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["janusrole",{"_index":132,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["janusrole.publisher",{"_index":282,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusserverurl",{"_index":344,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusservice",{"_index":516,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janusstore",{"_index":228,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusvideoroomcomponent",{"_index":166,"title":{"components/JanusVideoroomComponent.html":{}},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":623,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["joined",{"_index":37,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["joining",{"_index":36,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["jsep",{"_index":597,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["jsepbody",{"_index":638,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["keeping",{"_index":694,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["know",{"_index":93,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["knowing",{"_index":116,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["knowledge",{"_index":869,"title":{},"body":{"index.html":{}}}],["landscape",{"_index":705,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["last",{"_index":129,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["leave",{"_index":546,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["legend",{"_index":158,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{}}}],["less",{"_index":871,"title":{},"body":{"index.html":{}}}],["level",{"_index":97,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["library",{"_index":836,"title":{},"body":{"index.html":{}}}],["link",{"_index":142,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":307,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["listdevices",{"_index":448,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["listener",{"_index":138,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["load",{"_index":349,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["local",{"_index":58,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["localstream",{"_index":525,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["localstreamid",{"_index":59,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["look",{"_index":980,"title":{},"body":{"index.html":{}}}],["loop",{"_index":663,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["lot",{"_index":866,"title":{},"body":{"index.html":{}}}],["low",{"_index":772,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["lower",{"_index":849,"title":{},"body":{"index.html":{}}}],["make",{"_index":541,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["makes",{"_index":112,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["making",{"_index":964,"title":{},"body":{"index.html":{}}}],["many",{"_index":210,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["match",{"_index":291,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["matching",{"_index":150,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(2",{"_index":570,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["maximum",{"_index":897,"title":{},"body":{"index.html":{}}}],["mdn",{"_index":152,"title":{},"body":{"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{}}}],["meaningful",{"_index":88,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["media",{"_index":220,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["media_state",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediastate(medium",{"_index":585,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["medium",{"_index":587,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["message",{"_index":54,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":225,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["methods",{"_index":443,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["microphone",{"_index":18,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["minimal",{"_index":215,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["miscellaneous",{"_index":832,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":702,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["models/janus",{"_index":332,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["models/janus.models",{"_index":327,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["module",{"_index":154,"title":{"modules/JanusModule.html":{}},"body":{"modules/JanusModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":156,"title":{"modules.html":{}},"body":{"modules/JanusModule.html":{},"modules.html":{}}}],["moment",{"_index":23,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["moment.moment",{"_index":77,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["more",{"_index":140,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["msg",{"_index":599,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["multiple",{"_index":905,"title":{},"body":{"index.html":{}}}],["mute",{"_index":684,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mute(event",{"_index":686,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["muted",{"_index":60,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["muting",{"_index":926,"title":{},"body":{"index.html":{}}}],["name",{"_index":123,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":911,"title":{},"body":{"index.html":{}}}],["navigator.mediadevices.enumeratedevices",{"_index":469,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["navigator.mediadevices.getusermedia(constraints",{"_index":503,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["necessary",{"_index":482,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["need",{"_index":92,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["networks",{"_index":966,"title":{},"body":{"index.html":{}}}],["never",{"_index":811,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["new",{"_index":339,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":171,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":369,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ngoninit",{"_index":346,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["noise",{"_index":96,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["non",{"_index":931,"title":{},"body":{"index.html":{}}}],["none",{"_index":539,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["note",{"_index":79,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["notes",{"_index":126,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["nothing",{"_index":270,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["npm",{"_index":948,"title":{},"body":{"index.html":{}}}],["null",{"_index":361,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":50,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["numeric",{"_index":293,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["numvideotracks",{"_index":69,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(remotefeeds).map(id",{"_index":398,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["objective",{"_index":847,"title":{},"body":{"index.html":{}}}],["observable",{"_index":323,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["of(true",{"_index":535,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["older",{"_index":467,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["on_cleanup",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_data",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_data_open",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_local_stream",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_message",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_cleanup",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_feed_message",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_local_stream",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_remote_stream",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_stream",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":840,"title":{},"body":{"index.html":{}}}],["oncleanup",{"_index":611,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ondestroy",{"_index":224,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["one",{"_index":256,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["oninit",{"_index":223,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["onlocalstream(stream",{"_index":601,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onmessage(msg",{"_index":596,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onpublishownfeed(payload",{"_index":422,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["onremotestream(stream",{"_index":607,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onrequestsubstream(payload",{"_index":424,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["opaqueid",{"_index":518,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["open",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operations",{"_index":936,"title":{},"body":{"index.html":{}}}],["optional",{"_index":153,"title":{},"body":{"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["options",{"_index":211,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["order",{"_index":87,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["orientation",{"_index":904,"title":{},"body":{"index.html":{}}}],["oscillator",{"_index":666,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["otherroomid",{"_index":51,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":169,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["output",{"_index":316,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["outputs",{"_index":241,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["outside",{"_index":483,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["overlays",{"_index":972,"title":{},"body":{"index.html":{}}}],["overview",{"_index":985,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":827,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":960,"title":{},"body":{"index.html":{}}}],["pain",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":496,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["parameters",{"_index":248,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["parts",{"_index":925,"title":{},"body":{"index.html":{}}}],["passed",{"_index":264,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["payload",{"_index":426,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["peer",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":386,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["phones",{"_index":476,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["pin",{"_index":237,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["pin_required",{"_index":281,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["pins",{"_index":890,"title":{},"body":{"index.html":{}}}],["platform",{"_index":471,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["platforms",{"_index":965,"title":{},"body":{"index.html":{}}}],["playing",{"_index":726,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["plugin",{"_index":521,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["pluginhandle",{"_index":579,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["portrait",{"_index":701,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["possible",{"_index":62,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["practical",{"_index":82,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["prefer",{"_index":888,"title":{},"body":{"index.html":{}}}],["private",{"_index":341,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["private_id",{"_index":802,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["privateid",{"_index":49,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":453,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["properly",{"_index":841,"title":{},"body":{"index.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["provided",{"_index":251,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["providedin",{"_index":491,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["providers",{"_index":161,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{}}}],["ptype",{"_index":624,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["public",{"_index":268,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["publish",{"_index":40,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["published",{"_index":795,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["publisher",{"_index":78,"title":{"interfaces/Publisher.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["publisher's",{"_index":105,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["publishers",{"_index":136,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["publishing",{"_index":46,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["publishownfeed",{"_index":742,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["publishownfeedpayload",{"_index":328,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishrequested",{"_index":44,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["publishstate",{"_index":42,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["publishstate.error",{"_index":404,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishstate.publishing",{"_index":402,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishstate.start",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publishwebrtcstate",{"_index":526,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["put",{"_index":929,"title":{},"body":{"index.html":{}}}],["querying",{"_index":442,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["race",{"_index":784,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["randomstring",{"_index":489,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["randomstring(16",{"_index":519,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ratios",{"_index":907,"title":{},"body":{"index.html":{}}}],["read",{"_index":913,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":345,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ready",{"_index":43,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["real",{"_index":899,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["recommended",{"_index":273,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["recvonly",{"_index":633,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["refer",{"_index":218,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["register",{"_index":622,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["register(name",{"_index":621,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["reliability",{"_index":277,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remote",{"_index":64,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["remote_feed_slow_link",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remote_feed_webrtc_state",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remotefeed",{"_index":67,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["remotefeedfactory",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remotefeeds",{"_index":340,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"miscellaneous/variables.html":{}}}],["remotefeeds.filter((feed",{"_index":375,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeeds[id",{"_index":399,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeedsarray",{"_index":397,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeedstate",{"_index":66,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["remotefeedstate.initialized",{"_index":382,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"miscellaneous/variables.html":{}}}],["remotefeedstate.ready",{"_index":377,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotehandles",{"_index":522,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["republish",{"_index":749,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["request",{"_index":547,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["request_substream",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestanimationframe",{"_index":667,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["requestanimationframe(step",{"_index":682,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["requested",{"_index":45,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["requestedsubstream",{"_index":70,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["requestsubstream(feed",{"_index":825,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["required",{"_index":290,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["requires",{"_index":891,"title":{},"body":{"index.html":{}}}],["requiring",{"_index":875,"title":{},"body":{"index.html":{}}}],["reset",{"_index":168,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["resize",{"_index":893,"title":{},"body":{"index.html":{}}}],["response",{"_index":640,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["result",{"_index":149,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":151,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retry",{"_index":778,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["retrycount",{"_index":756,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["return",{"_index":338,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":311,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["role",{"_index":133,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["roles",{"_index":131,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["room",{"_index":27,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["room.component",{"_index":186,"title":{},"body":{"modules/JanusModule.html":{}}}],["room.id",{"_index":636,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["room.privateid",{"_index":803,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["room/default",{"_index":185,"title":{},"body":{"modules/JanusModule.html":{}}}],["room/user",{"_index":350,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roomid",{"_index":238,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["roominfo",{"_index":48,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["roominfo.errorcode",{"_index":407,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.muted",{"_index":400,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.publishstate",{"_index":401,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.state",{"_index":411,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfofactory",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roominfostate",{"_index":29,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["roominfostate.attach_failed",{"_index":416,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.attached",{"_index":414,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.initialized",{"_index":412,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.start",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooms",{"_index":937,"title":{},"body":{"index.html":{}}}],["root",{"_index":492,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["rough",{"_index":974,"title":{},"body":{"index.html":{}}}],["rtcpeerconnection",{"_index":266,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["rxjs",{"_index":326,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["rxjs/operators",{"_index":322,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["same",{"_index":695,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["sample",{"_index":859,"title":{},"body":{"index.html":{}}}],["save",{"_index":814,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["screen",{"_index":898,"title":{},"body":{"index.html":{}}}],["see",{"_index":125,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["see/hear",{"_index":135,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["selector",{"_index":229,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["self",{"_index":722,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["selfvideocomponent",{"_index":187,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":914,"title":{},"body":{"index.html":{}}}],["server",{"_index":221,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["server(s",{"_index":275,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["server.models",{"_index":333,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["server.models.ts",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servers",{"_index":262,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["service",{"_index":857,"title":{},"body":{"index.html":{}}}],["session",{"_index":615,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["set",{"_index":108,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["setismuted(muted",{"_index":310,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["setmute(mute",{"_index":824,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["settimeout",{"_index":417,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["settimeout(step",{"_index":681,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["setting",{"_index":473,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["setup",{"_index":107,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["setupjanusroom(roomid",{"_index":389,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["shared",{"_index":490,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["sharereplay",{"_index":319,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["sharereplay(1",{"_index":356,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["sides",{"_index":700,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["simple",{"_index":754,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["simulcast",{"_index":768,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["simulcastmaxbitrates",{"_index":769,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["site",{"_index":959,"title":{},"body":{"index.html":{}}}],["size",{"_index":903,"title":{},"body":{"index.html":{}}}],["slow",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slow_link",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slowlink",{"_index":76,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["slowlink(msg",{"_index":595,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["smoothly",{"_index":910,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["solution",{"_index":781,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["someone",{"_index":970,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["speaker",{"_index":20,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["speakerdeviceid",{"_index":13,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["speakerdevices",{"_index":512,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["specifications",{"_index":9,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["specified",{"_index":101,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["specify",{"_index":459,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["specifying",{"_index":881,"title":{},"body":{"index.html":{}}}],["spirit",{"_index":922,"title":{},"body":{"index.html":{}}}],["src/.../index.ts",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.actions.ts",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.factories.ts",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.models.ts",{"_index":834,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../janus.reducers.ts",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../random.ts",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/index.ts",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/containers/index.ts",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/containers/janus",{"_index":202,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["src/lib/factories/janus.factories.ts",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/janus.module.ts",{"_index":170,"title":{},"body":{"modules/JanusModule.html":{}}}],["src/lib/models/janus",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/models/janus.models.ts",{"_index":6,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/services/janus.service.ts",{"_index":438,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:20",{"_index":450,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:31",{"_index":455,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:42",{"_index":468,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:49",{"_index":451,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:66",{"_index":470,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:76",{"_index":462,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/shared/random.ts",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/store/actions/janus.actions.ts",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/store/reducers/janus.reducers.ts",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":30,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["start/stop",{"_index":113,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["startdrawingloop(canvaselement",{"_index":660,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["started",{"_index":214,"title":{"index.html":{}},"body":{"components/JanusVideoroomComponent.html":{}}}],["startwith",{"_index":318,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["state",{"_index":26,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["states",{"_index":63,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["status",{"_index":41,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["step",{"_index":679,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stepmilliseconds",{"_index":676,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["still",{"_index":137,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["storage",{"_index":944,"title":{},"body":{"index.html":{}}}],["store/actions/janus.actions",{"_index":329,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["store/janus.store",{"_index":330,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["stream",{"_index":604,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["stream.getvideotracks",{"_index":816,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stream.getvideotracks().length",{"_index":817,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stream_id",{"_index":606,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["streamid",{"_index":68,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["streams",{"_index":517,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["stun",{"_index":269,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["stun/turn",{"_index":261,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["stun:stun2.l.google.com:19302",{"_index":259,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["styles",{"_index":199,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["styleurls",{"_index":230,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["subject",{"_index":324,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["subscribe",{"_index":387,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["subscribe(({roominfo",{"_index":396,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["subscriber",{"_index":536,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.complete",{"_index":545,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.error('webrtc",{"_index":543,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.error(error",{"_index":582,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.next",{"_index":544,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.next(true",{"_index":767,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscribers",{"_index":285,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["substream",{"_index":804,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["substreamid",{"_index":425,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["success",{"_index":617,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["success(jsep",{"_index":764,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["success(jsepbody",{"_index":634,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["success(pluginhandle",{"_index":577,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["support",{"_index":982,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":464,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["supports",{"_index":472,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["supportsspeakerselection",{"_index":449,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["sure",{"_index":55,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["svg",{"_index":983,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":410,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["switches",{"_index":672,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["switchmap",{"_index":321,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["system",{"_index":106,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["tabs",{"_index":669,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["take",{"_index":896,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":320,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["takeuntil(this.destroy",{"_index":395,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["takewhile",{"_index":486,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["talking",{"_index":90,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["talking/not",{"_index":89,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["tap",{"_index":485,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["template",{"_index":198,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["templateurl",{"_index":232,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["themselves",{"_index":867,"title":{},"body":{"index.html":{}}}],["thing",{"_index":923,"title":{},"body":{"index.html":{}}}],["this._mutevideo(videoelement",{"_index":727,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this._setmuted(muted",{"_index":337,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this._setmuted(this.muted",{"_index":403,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this._sizecanvaselement(videosettings.width",{"_index":728,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.attachremotefeeds(remotefeedsarray",{"_index":408,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.cleanuplocalstream",{"_index":550,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.createoffer(subscriber",{"_index":753,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.destroy$.complete",{"_index":371,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.destroy$.next",{"_index":370,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.drawloopactive",{"_index":562,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.emitremotefeeds(remotefeedsarray",{"_index":409,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.handle",{"_index":548,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.createoffer",{"_index":761,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.handleremotejsep({jsep",{"_index":626,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.isaudiomuted",{"_index":821,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.muteaudio",{"_index":823,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.send",{"_index":741,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.send({message",{"_index":549,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.unmuteaudio",{"_index":822,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.httpurl",{"_index":353,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.iceservers",{"_index":529,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.initialized",{"_index":530,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus",{"_index":555,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus.attach",{"_index":574,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus.destroy({unload",{"_index":551,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.januserror.emit({code",{"_index":406,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusserverurl",{"_index":351,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore",{"_index":368,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.attachremotefeed",{"_index":383,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.attachvideoroom(this.janusserverurl",{"_index":413,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.initialize(this.iceservers",{"_index":391,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.publishownfeed(payload",{"_index":423,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.readyremotefeeds$.pipe",{"_index":355,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.register",{"_index":415,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.remotefeeds$.pipe",{"_index":393,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.requestsubstream({feed",{"_index":427,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.roominfo$.pipe",{"_index":358,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.setmute(muted",{"_index":373,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.state$.pipe",{"_index":394,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.listdevices",{"_index":505,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.localstream",{"_index":560,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.localstream.gettracks",{"_index":566,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.localstream.removetrack(track",{"_index":568,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.muted",{"_index":336,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.opaqueid",{"_index":576,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.pin",{"_index":360,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.publishers.emit(publishers",{"_index":378,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.publishwebrtcstate",{"_index":561,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotefeeds",{"_index":354,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.remotehandles",{"_index":558,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotehandles[feed.id",{"_index":628,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotehandles[feed.id].send({message",{"_index":826,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.roominfo",{"_index":357,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.server",{"_index":557,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.setupjanusroom(this.roomid",{"_index":362,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.startdrawingloop(canvaselement",{"_index":736,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.streams",{"_index":556,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.streams[streamid",{"_index":793,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.unpublishownfeed",{"_index":750,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.userid",{"_index":363,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.username",{"_index":364,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.videoelement",{"_index":559,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.videoelement.remove",{"_index":564,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.wsurl",{"_index":352,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["those",{"_index":481,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["through",{"_index":212,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["time",{"_index":100,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["times",{"_index":976,"title":{},"body":{"index.html":{}}}],["tireless",{"_index":961,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toggle_mute_success",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglemute",{"_index":820,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["touchpoints",{"_index":969,"title":{},"body":{"index.html":{}}}],["track",{"_index":565,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["track.stop",{"_index":567,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["transmit",{"_index":916,"title":{},"body":{"index.html":{}}}],["tree",{"_index":201,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["trickle",{"_index":630,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["true",{"_index":127,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["ts",{"_index":365,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["tslib",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":534,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":938,"title":{},"body":{"index.html":{}}}],["uint8array(bytes",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unable",{"_index":420,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["understand",{"_index":868,"title":{},"body":{"index.html":{}}}],["understanding",{"_index":856,"title":{},"body":{"index.html":{}}}],["unpublish",{"_index":740,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["unpublishing",{"_index":748,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["unpublishownfeed",{"_index":739,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["until",{"_index":746,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["up",{"_index":553,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["upon",{"_index":901,"title":{},"body":{"index.html":{}}}],["url",{"_index":254,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["urls",{"_index":146,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["us/docs/web/api/rtciceserver|mdn",{"_index":144,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["use",{"_index":56,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["used",{"_index":554,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["user",{"_index":117,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user's",{"_index":279,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["userid",{"_index":239,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["username",{"_index":147,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["users",{"_index":284,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["using",{"_index":664,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["ux",{"_index":930,"title":{},"body":{"index.html":{}}}],["value",{"_index":258,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":431,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["variables",{"_index":348,"title":{"miscellaneous/variables.html":{}},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":439,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["very",{"_index":81,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["video",{"_index":184,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["video.component",{"_index":190,"title":{},"body":{"modules/JanusModule.html":{}}}],["video/self",{"_index":189,"title":{},"body":{"modules/JanusModule.html":{}}}],["video_codec",{"_index":74,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["videoboxcomponent",{"_index":191,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["videodeviceid",{"_index":14,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["videodevices",{"_index":510,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement",{"_index":524,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.addeventlistener('playing",{"_index":689,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.autoplay",{"_index":719,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.muted",{"_index":687,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.removeeventlistener('playing",{"_index":688,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.setattribute('id",{"_index":721,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.setattribute('playsinline",{"_index":720,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.videoheight",{"_index":652,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.videowidth",{"_index":650,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoheight",{"_index":651,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoinput",{"_index":511,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videorecv",{"_index":763,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoroom",{"_index":204,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["videoroom.component",{"_index":177,"title":{},"body":{"modules/JanusModule.html":{}}}],["videoroom.component.html",{"_index":233,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.scss",{"_index":231,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts",{"_index":203,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:103",{"_index":292,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:109",{"_index":249,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:118",{"_index":260,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:124",{"_index":278,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:138",{"_index":301,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:144",{"_index":306,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:153",{"_index":247,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:59",{"_index":289,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:67",{"_index":297,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:75",{"_index":253,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:81",{"_index":280,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:87",{"_index":296,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:96",{"_index":283,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom/janus",{"_index":176,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{}}}],["videorooms",{"_index":852,"title":{},"body":{"index.html":{}}}],["videoroomstate",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["videos",{"_index":894,"title":{},"body":{"index.html":{}}}],["videosend",{"_index":632,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings",{"_index":716,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings.framerate",{"_index":737,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings.height",{"_index":729,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream",{"_index":709,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream.getaudiotracks().find((item",{"_index":733,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream.getvideotracks()[0].getsettings",{"_index":717,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videowidth",{"_index":649,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["void",{"_index":312,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["volume",{"_index":75,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["volume/mute",{"_index":80,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["wait",{"_index":745,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["want",{"_index":118,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["warm",{"_index":779,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["way",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["we're",{"_index":693,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["webapp",{"_index":209,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["webapps",{"_index":934,"title":{},"body":{"index.html":{}}}],["webrtc",{"_index":495,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["webrtc_state",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webrtcservice",{"_index":436,"title":{"injectables/WebrtcService.html":{}},"body":{"injectables/WebrtcService.html":{}}}],["webrtcstate(on",{"_index":588,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["websocket",{"_index":298,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["well",{"_index":924,"title":{},"body":{"index.html":{}}}],["whenever",{"_index":308,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["width",{"_index":499,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["window.crypto.getrandomvalues(array",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.cypress",{"_index":366,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["window.janusstore",{"_index":367,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["window.location.reload",{"_index":620,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["wish",{"_index":950,"title":{},"body":{"index.html":{}}}],["within",{"_index":479,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["without",{"_index":874,"title":{},"body":{"index.html":{}}}],["won't",{"_index":286,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["work",{"_index":671,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["works",{"_index":858,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":456,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["wrappers",{"_index":493,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["write",{"_index":865,"title":{},"body":{"index.html":{}}}],["wss://janus.conf.meetecho.com/ws",{"_index":299,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["wsurl",{"_index":240,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["yarn",{"_index":947,"title":{},"body":{"index.html":{}}}],["you'll",{"_index":91,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["yourappmodule",{"_index":951,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":167,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Devices.html":{"url":"interfaces/Devices.html","title":"interface - Devices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Devices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                Device specifications\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        audioDeviceId\n                                \n                                \n                                        speakerDeviceId\n                                \n                                \n                                        videoDeviceId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audioDeviceId\n                                    \n                                \n                                \n                                    \n                                        audioDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Microphone Device ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speakerDeviceId\n                                    \n                                \n                                \n                                    \n                                        speakerDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Speaker Device ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoDeviceId\n                                    \n                                \n                                \n                                    \n                                        videoDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Camera Device ID \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IceServer.html":{"url":"interfaces/IceServer.html","title":"interface - IceServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IceServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                IceServer configuration. More details are in the MDN Docs\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        credential\n                                \n                                \n                                        urls\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credential\n                                    \n                                \n                                \n                                    \n                                        credential:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urls\n                                    \n                                \n                                \n                                    \n                                        urls:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JanusModule.html":{"url":"modules/JanusModule.html","title":"module - JanusModule","body":"\n                   \n\n\n\n\n    Modules\n    JanusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JanusModule\n\n\n\ncluster_JanusModule_exports\n\n\n\ncluster_JanusModule_declarations\n\n\n\n\nJanusVideoroomComponent\n\nJanusVideoroomComponent\n\n\n\nJanusModule\n\nJanusModule\n\nJanusModule -->\n\nJanusVideoroomComponent->JanusModule\n\n\n\n\n\nJanusVideoroomComponent \n\nJanusVideoroomComponent \n\nJanusVideoroomComponent  -->\n\nJanusModule->JanusVideoroomComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/janus.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JanusVideoroomComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JanusVideoroomComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JanusVideoroomComponent } from './containers/janus-videoroom/janus-videoroom.component';\nimport { AudioBoxComponent } from './components/audio-box/audio-box.component';\nimport { DefaultVideoRoomComponent } from './components/default-video-room/default-video-room.component';\nimport { SelfVideoComponent } from './components/self-video/self-video.component';\nimport { VideoBoxComponent } from './components/video-box/video-box.component';\n\n\n@NgModule({\n  declarations: [\n    JanusVideoroomComponent,\n    AudioBoxComponent,\n    DefaultVideoRoomComponent,\n    SelfVideoComponent,\n    VideoBoxComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [JanusVideoroomComponent]\n})\nexport class JanusModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JanusVideoroomComponent.html":{"url":"components/JanusVideoroomComponent.html","title":"component - JanusVideoroomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JanusVideoroomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/containers/janus-videoroom/janus-videoroom.component.ts\n\n\n    \n        Description\n    \n    \n        Janus videoroom component. This is a high level component to easily embed a janus videoroom in any angular webapp.\nThere are many options that can be set through Inputs. However, you can get started with the minimal example below.\nRefer to the Janus Videoroom Docs for deploying your own\nJanus media server.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            JanusStore\n                \n            \n\n\n            \n                selector\n                janus-videoroom\n            \n\n            \n                styleUrls\n                ./janus-videoroom.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./janus-videoroom.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                devices\n                            \n                            \n                                httpUrl\n                            \n                            \n                                iceServers\n                            \n                            \n                                isMuted\n                            \n                            \n                                pin\n                            \n                            \n                                role\n                            \n                            \n                                roomId\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                wsUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                janusError\n                            \n                            \n                                publishers\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isMuted\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(janusStore: JanusStore)\n                    \n                \n                        \n                            \n                                Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:153\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        janusStore\n                                                  \n                                                        \n                                                                    JanusStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        devices\n                    \n                \n                \n                    \n                        Type :         Devices\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:109\n                            \n                        \n                \n                    \n                        Input/output devices to use. If not provided, will use the default system devices\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        httpUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:75\n                            \n                        \n                \n                    \n                        URL for the http(s) interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\nExample: https://janus.conf.meetecho.com/janus\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        iceServers\n                    \n                \n                \n                    \n                        Type :         IceServer[]\n\n                    \n                \n                \n                    \n                        Default value : [{urls: 'stun:stun2.l.google.com:19302'}]\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:118\n                            \n                        \n                \n                    \n                        STUN/TURN servers to use for the connection. These are passed directly to RTCPeerConnection\nRefer to the MDN Docs for details on the format.\nThe component will use a public STUN server if nothing is specified here. However, it's highly recommended that the user\ndeploy and use their own STUN/TURN server(s) for better reliability.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isMuted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:124\n                            \n                        \n                \n                    \n                        When set to true, the user's audio is muted.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pin\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:81\n                            \n                        \n                \n                    \n                        PIN for joining room. Must be specified if pin_required is true for the requested roomId.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n                \n                    \n                        Type :         JanusRole\n\n                    \n                \n                \n                    \n                        Default value : JanusRole.publisher\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:96\n                            \n                        \n                \n                    \n                        Role for the user in the videoroom.\nUsers can either be publishers or subscribers. Publishers will publish their video and audio to the room.\nSubscribers will see/hear all publishers, but won't broadcast anything.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        roomId\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:59\n                            \n                        \n                \n                    \n                        Required Janus room id. Can be either a string or a number. This must match server configuration.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:103\n                            \n                        \n                \n                    \n                        Numeric or string Id of publisher. Type must match server configuration. If not provided,\njanus server will automatically assign an ID to the user.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n                \n                    \n                        Default value : 'janus user'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:87\n                            \n                        \n                \n                    \n                        Display name for the user in the videoroom\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        wsUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:67\n                            \n                        \n                \n                    \n                        URL for the websocket interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\nExample: wss://janus.conf.meetecho.com/ws\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        janusError\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:138\n                            \n                        \n                \n                    \n                        Emits errors encountered. These errors are fatal.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        publishers\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:144\n                            \n                        \n                \n                    \n                        Emits list of current publishers whenever there is a change to the publisher list\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isMuted\n                    \n                \n\n\n                \n                    \n                        setisMuted(muted: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:124\n                                \n                            \n                    \n                        \n                                When set to true, the user's audio is muted.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            muted\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import * as moment from 'moment';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { first, startWith, shareReplay, takeUntil, switchMap } from 'rxjs/operators';\nimport { Observable, Subject, combineLatest } from 'rxjs';\n\nimport {\n  Devices,\n  JanusRole,\n  PublishState,\n  Publisher,\n  RemoteFeed,\n  RemoteFeedState,\n  RoomInfo,\n  RoomInfoState,\n  IceServer,\n} from '../../models/janus.models';\n\nimport { PublishOwnFeedPayload } from '../../store/actions/janus.actions';\nimport { JanusStore } from '../../store/janus.store';\nimport { JanusErrors } from '../../models/janus-server.models';\n\n/**\n * Janus videoroom component. This is a high level component to easily embed a janus videoroom in any angular webapp.\n * There are many options that can be set through Inputs. However, you can get started with the minimal example below.\n * Refer to the {@link https://janus.conf.meetecho.com/docs/videoroom.html|Janus Videoroom Docs} for deploying your own\n * Janus media server.\n * @example\n * \n * \n *\n */\n@Component({\n  selector: 'janus-videoroom',\n  templateUrl: './janus-videoroom.component.html',\n  styleUrls: ['./janus-videoroom.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [JanusStore],\n})\nexport class JanusVideoroomComponent implements OnInit, OnDestroy {\n\n  /**\n   * *Required* Janus room id. Can be either a string or a number. This must match server configuration.\n   */\n  @Input()\n  roomId: string | number;\n\n  /**\n   * URL for the websocket interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\n   *\n   * Example: `wss://janus.conf.meetecho.com/ws`\n   */\n  @Input()\n  wsUrl: string;\n\n  /**\n   * URL for the http(s) interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\n   *\n   * Example: `https://janus.conf.meetecho.com/janus`\n   */\n  @Input()\n  httpUrl: string;\n\n  /**\n   * PIN for joining room. Must be specified if `pin_required` is true for the requested roomId.\n   */\n  @Input()\n  pin?: string;\n\n  /**\n   * Display name for the user in the videoroom\n   */\n  @Input()\n  userName = 'janus user';\n\n  /**\n   * Role for the user in the videoroom.\n   *\n   * Users can either be publishers or subscribers. Publishers will publish their video and audio to the room.\n   * Subscribers will see/hear all publishers, but won't broadcast anything.\n   */\n  @Input()\n  role: JanusRole = JanusRole.publisher;\n\n  /**\n   * Numeric or string Id of publisher. Type must match server configuration. If not provided,\n   * janus server will automatically assign an ID to the user.\n   */\n  @Input()\n  userId?: string;\n\n  /**\n   * Input/output devices to use. If not provided, will use the default system devices\n   */\n  @Input()\n  devices?: Devices;\n\n  /**\n   * STUN/TURN servers to use for the connection. These are passed directly to `RTCPeerConnection`\n   * Refer to the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs} for details on the format.\n   * The component will use a public STUN server if nothing is specified here. However, it's highly recommended that the user\n   * deploy and use their own STUN/TURN server(s) for better reliability.\n   */\n  @Input()\n  iceServers: IceServer[] = [{urls: 'stun:stun2.l.google.com:19302'}];\n\n  /**\n   * When set to true, the user's audio is muted.\n   */\n  @Input()\n  set isMuted(muted: boolean) {\n    this.muted = muted;\n    this._setMuted(muted);\n  }\n\n  /**\n   * @ignore\n   */\n  get isMuted(): boolean { return this.muted; }\n\n  /**\n   * Emits errors encountered. These errors are fatal.\n   */\n  @Output()\n  janusError = new EventEmitter();\n\n  /**\n   * Emits list of current publishers whenever there is a change to the publisher list\n   */\n  @Output()\n  publishers = new EventEmitter();\n\n  /** @internal */\n  roomInfo$: Observable;\n  /** @internal */\n  remoteFeeds$: Observable;\n\n  private muted = false;\n  private destroy$ = new Subject();\n  private janusServerUrl: string;\n\n  constructor(\n    private readonly janusStore: JanusStore\n  ) { }\n\n  ngOnInit(): void {\n    // Initialize variables and load the room/user\n\n    this.janusServerUrl = this.wsUrl ? this.wsUrl : this.httpUrl;\n\n    this.remoteFeeds$ = this.janusStore.readyRemoteFeeds$.pipe(\n      shareReplay(1),\n    );\n\n    this.roomInfo$ = this.janusStore.roomInfo$.pipe(\n      shareReplay(1)\n    );\n\n    const pin = this.pin ? this.pin : null;\n    this.setupJanusRoom(this.roomId, this.userId, this.userName, pin);\n\n    // @ts-ignore\n    if (window.Cypress) {\n      // @ts-ignore\n      window.janusStore = this.janusStore;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /** @internal */\n  _setMuted(muted: boolean): void {\n    this.janusStore.setMute(muted);\n  }\n\n  /** @internal */\n  emitRemoteFeeds(remoteFeeds: RemoteFeed[]): void {\n    const publishers: Publisher[] = remoteFeeds.filter((feed) => feed.state === RemoteFeedState.ready);\n    this.publishers.emit(publishers);\n  }\n\n  /** @internal */\n  attachRemoteFeeds(remoteFeeds: RemoteFeed[], roomInfo: RoomInfo, pin: string): void {\n    // Attach remote feeds\n\n    for (const feed of remoteFeeds) {\n      if (feed.state === RemoteFeedState.initialized) {\n\n        this.janusStore.attachRemoteFeed({\n          roomInfo,\n          feed,\n          pin,\n        });\n        // Only fire one dispatch per subscribe\n        break;\n      }\n    }\n  }\n\n  /** @internal */\n  setupJanusRoom(roomId: string | number, userId: string, userName: string, pin: string): void {\n    // Setup comms with janus server\n\n    this.janusStore.initialize(this.iceServers);\n\n    const allRemoteFeeds$: Observable = this.janusStore.remoteFeeds$.pipe(\n      startWith([])\n    );\n    this.janusStore.state$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(({roomInfo, remoteFeeds}) => {\n\n      const remoteFeedsArray = Object.keys(remoteFeeds).map(id => remoteFeeds[id]);\n      if (roomInfo.muted !== this.muted && roomInfo.publishState === PublishState.publishing) {\n        this._setMuted(this.muted);\n      }\n      if (roomInfo.publishState === PublishState.error) {\n        const message = JanusErrors[roomInfo.errorCode].message;\n        this.janusError.emit({code: roomInfo.errorCode, message});\n      }\n\n      this.attachRemoteFeeds(remoteFeedsArray, roomInfo, pin);\n      this.emitRemoteFeeds(remoteFeedsArray);\n\n      switch (roomInfo.state) {\n        case RoomInfoState.initialized: {\n          this.janusStore.attachVideoRoom(this.janusServerUrl);\n          break;\n        }\n        case RoomInfoState.attached: {\n          this.janusStore.register({\n            name: userName,\n            userId,\n            roomId,\n            pin,\n          });\n          break;\n        }\n        case RoomInfoState.attach_failed: {\n          if (this.janusServerUrl !== this.httpUrl) {\n            this.janusServerUrl = this.httpUrl;\n            setTimeout(() => {\n              this.janusStore.attachVideoRoom(this.janusServerUrl);\n            }, 100);\n          } else {\n            this.janusError.emit({code: 9999, message: 'Unable to connect to media server'});\n          }\n          break;\n        }\n      }\n    });\n  }\n\n  /** @internal */\n  onPublishOwnFeed(payload: PublishOwnFeedPayload): void {\n    this.janusStore.publishOwnFeed(payload);\n  }\n\n  /** @internal */\n  onRequestSubstream(payload: {feed: RemoteFeed, substreamId: number}): void {\n    const {feed, substreamId} = payload;\n    this.janusStore.requestSubstream({feed, substreamId});\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./janus-videoroom.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'JanusVideoroomComponent', 'selector': 'janus-videoroom'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JanusVideoroomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Publisher.html":{"url":"interfaces/Publisher.html","title":"interface - Publisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Publisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                Information for a publisher. Note that the volume/mute information is not\nvery practical in how it's implemented in janus currently. In order to get\nmeaningful information about talking/not talking, you'll need to know the\naverage background noise level of each publisher ahead of time. This is\nspecified at audio_level_average in the room. This isn't practical if you\ndon't know the publisher's system setup ahead of time. We set the\naudio_level_average to 127 in the backend configuration. That makes the\nstart/stop talking events good for knowing if the remote user has muted.\nYou might want to ignore this information depending on your use case.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        id\n                                \n                                \n                                        muted\n                                \n                                \n                                        volume\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display name of the publisher \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Janus ID of the publisher \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                    \n                                \n                                \n                                    \n                                        muted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set to true iff the last volume event had the volume at 127 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        volume\n                                    \n                                \n                                \n                                    \n                                        volume:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current volume of the publisher's audio. See notes in the interface description.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebrtcService.html":{"url":"injectables/WebrtcService.html","title":"injectable - WebrtcService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebrtcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/janus.service.ts\n        \n\n            \n                Description\n            \n            \n                Various helper functions for querying devices\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDefaultDevices\n                            \n                            \n                                getUserMedia\n                            \n                            \n                                isSupportedDevice\n                            \n                            \n                                listDevices\n                            \n                            \n                                supportsSpeakerSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/janus.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getDefaultDevices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:49\n                \n            \n\n\n            \n                \n                    Returns the device IDs for the default audio, video, and speaker device\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserMedia\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserMedia(audioDeviceId: string | null, videoDeviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:31\n                \n            \n\n\n            \n                \n                    Wrapper around getUserMedia that allows the user to specify the audio and video device ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    audioDeviceId\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Device ID of the desired audio device. If null, audio will not be included\n\n                                    \n                                \n                                \n                                    videoDeviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Device ID of the desired video device.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupportedDevice\n                        \n                        \n                    \n                \n            \n            \n                \nisSupportedDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:76\n                \n            \n\n\n            \n                \n                    Determines if the current device is supported. Currently, iPhone 6 and older are not supported.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listDevices\n                        \n                        \n                    \n                \n            \n            \n                \nlistDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:42\n                \n            \n\n\n            \n                \n                    Wrapper around navigator.mediaDevices.enumerateDevices\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supportsSpeakerSelection\n                        \n                        \n                    \n                \n            \n            \n                \nsupportsSpeakerSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:66\n                \n            \n\n\n            \n                \n                    Determines if the current platform supports setting the speaker. Some devices, e.g., most android\nphones, do not allow the dynamic setting of the speaker from within the browser. For those devices,\nit's necessary to change the output device outside of the browser.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable, of, interval } from 'rxjs';\nimport { tap, takeWhile } from 'rxjs/operators';\n\nimport Janus from '../3rdparty/janus.es';\n\nimport * as fromModels from '../models/janus-server.models';\nimport { RemoteFeed, RoomInfo, IceServer } from '../models/janus.models';\n\n\nimport { randomString } from '../shared';\n\n/**\n * Various helper functions for querying devices\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebrtcService {\n  // Wrappers around some common webrtc functions\n\n  constructor() { }\n\n  /**\n   * Wrapper around getUserMedia that allows the user to specify the audio and video device ids\n   *\n   * @param audioDeviceId Device ID of the desired audio device. If null, audio will not be included\n   * @param videoDeviceId Device ID of the desired video device.\n   */\n  getUserMedia(audioDeviceId: string | null, videoDeviceId: string): Promise {\n    const constraints = {\n      audio: audioDeviceId !== null ? {deviceId: audioDeviceId} : false,\n      video: {deviceId: videoDeviceId, width: 1920, height: 1080},\n    };\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  /**\n   * Wrapper around `navigator.mediaDevices.enumerateDevices`\n   */\n  listDevices(): Promise {\n    return navigator.mediaDevices.enumerateDevices();\n  }\n\n  /**\n   * Returns the device IDs for the default audio, video, and speaker device\n   */\n  async getDefaultDevices(): Promise {\n    const devices = await this.listDevices();\n    const audioDevices = devices.filter((device) => device.kind === 'audioinput');\n    const videoDevices = devices.filter((device) => device.kind === 'videoinput');\n    const speakerDevices = devices.filter((device) => device.kind === 'audiooutput');\n    const audioDeviceId = audioDevices.length = 13;\n  }\n}\n\n/** @internal */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JanusService {\n  private streams = {};\n  private initialized = false;\n  private janus: any;\n  private server: string;\n  private opaqueId: string = randomString(16);\n  public handle;   // Handle to the videoroom plugin\n  private remoteHandles: { [id: number]: any } = {};   // Handles to remote streams\n\n  private videoElement: any;\n  private localStream: any;\n  private publishWebrtcState = false;\n\n  private drawLoopActive: boolean;\n  private iceServers: {urls: string}[];\n\n  constructor(\n    private webrtcService: WebrtcService,\n  ) {}\n\n  init(iceServers: IceServer[]): Observable {\n    // Initialize Janus\n\n    this.iceServers = iceServers;\n\n    if (this.initialized) {\n      console.log('Warning: called janus init twice');\n      return of(true);\n    }\n\n    return new Observable(\n      subscriber => {\n        Janus.init({\n          debug: 'none',\n          callback(): void {\n            // Make sure the browser supports WebRTC\n            if (!Janus.isWebrtcSupported()) {\n              subscriber.error('WebRTC is not supported');\n            }\n            subscriber.next();\n            subscriber.complete();\n          }\n        });\n      }\n    );\n  }\n\n  destroy(): void {\n    const leave = { request: 'leave' };\n\n    if (this.handle) {\n      this.handle.send({message: leave});\n    }\n    this.cleanupLocalStream();\n    this.janus.destroy({unload: true});\n\n    // Clean up all variables used\n    this.janus = null;\n    this.handle = null;\n    this.streams = {};\n    this.initialized = false;\n    this.janus = null;\n    this.server = null;\n    this.handle = null;\n    this.remoteHandles = {};\n    this.videoElement = null;\n    this.localStream = null;\n    this.publishWebrtcState = false;\n    this.drawLoopActive = null;\n    this.iceServers = [];\n  }\n\n  cleanupLocalStream(): void {\n    if (this.videoElement) {\n      this.videoElement.remove();\n    }\n    if (this.localStream) {\n      for (const track of this.localStream.getTracks()) {\n        track.stop();\n        this.localStream.removeTrack(track);\n      }\n    }\n    this.drawLoopActive = false;\n  }\n\n  _get_random_string(): string {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  }\n\n  _attachVideoRoomHelper(subscriber): void {\n    const instance = this;\n    this.janus.attach({\n      plugin: 'janus.plugin.videoroom',\n      opaqueId: this.opaqueId,\n      success(pluginHandle): void {\n        instance.handle = pluginHandle;\n        subscriber.next({\n          message: fromModels.ATTACH_SUCCESS\n        });\n      },\n      error(error): void {\n        subscriber.error(error);\n      },\n      consentDialog(on): void {\n        subscriber.next({\n          message: fromModels.CONSENT_DIALOG,\n          payload: {on},\n        });\n      },\n      mediaState(medium, on): void {\n        subscriber.next({\n          message: fromModels.MEDIA_STATE,\n          payload: {medium, on},\n        });\n      },\n      webrtcState(on): void {\n        instance.publishWebrtcState = on;\n        subscriber.next({\n          message: fromModels.WEBRTC_STATE,\n          payload: {on},\n        });\n      },\n      iceState(arg1, arg2): void {\n        // console.log('ICE STATE', arg1, arg2);\n      },\n      slowLink(msg): void {\n      },\n      onmessage(msg, jsep): void {\n        subscriber.next({\n          message: fromModels.ON_MESSAGE,\n          payload: {msg, jsep},\n        });\n        if (!!jsep) {\n          instance.handleRemoteJsep(jsep);\n        }\n      },\n      onlocalstream(stream): void {\n        const streamId = instance._get_random_string();\n        instance.streams[streamId] = stream;\n        subscriber.next({\n          message: fromModels.ON_LOCAL_STREAM,\n          payload: {stream_id: streamId},\n        });\n      },\n      onremotestream(stream): void {\n        // Don't expect this to ever happen\n        subscriber.next({\n          message: fromModels.ON_REMOTE_STREAM,\n          payload: {stream},\n        });\n      },\n      oncleanup(): void {\n        subscriber.next({\n          message: fromModels.ON_CLEANUP,\n        });\n      }\n    });\n  }\n\n  attachVideoRoom(url): Observable {\n    // Create session\n    const instance = this;\n    return new Observable(\n      subscriber => {\n        instance.janus = new Janus({\n          server: url,\n          iceServers: this.iceServers,\n          success: () => {\n            instance._attachVideoRoomHelper(subscriber);\n          },\n          error(error): void {\n            subscriber.error(error);\n          },\n          destroyed(): void {\n            // window.location.reload();\n          }\n        });\n      }\n    );\n  }\n\n  register(name: string, userId: string, roomId: string | number, pin: string): void {\n    const register = {\n      request: 'join',\n      room: roomId,\n      ptype: 'publisher',\n      display: name,\n      id: userId,\n      pin,\n    };\n    this.handle.send({message: register});\n  }\n\n  handleRemoteJsep(jsep): void {\n    this.handle.handleRemoteJsep({jsep});\n  }\n\n  answerRemoteFeedJsep(jsep, feed: RemoteFeed, room: RoomInfo): void {\n    // Handle a jsep message for a remote feed\n\n    const handle = this.remoteHandles[feed.id];\n    handle.createAnswer({\n      jsep,\n      trickle: true,\n      media: { audioSend: false, videoSend: false },  // We want recvonly audio/video\n      success(jsepBody): void {\n        const body = { request: 'start', room: room.id };\n        handle.send({message: body, jsep: jsepBody});\n      },\n      error(error): void {\n        console.log('ERROR in JSEP RESPONSE');\n      }\n    });\n  }\n\n  draw(canvasContext, videoElement): void {\n    canvasContext.drawImage(videoElement, 0, 0);\n    const centerX = canvasContext.canvas.width / 2;\n    const centerY = canvasContext.canvas.height / 2;\n    const videoWidth = videoElement.videoWidth;\n    const videoHeight = videoElement.videoHeight;\n\n    canvasContext.fillStyle = '#000';\n    canvasContext.fillRect(0, 0, canvasContext.canvas.width, canvasContext.canvas.height);\n\n    canvasContext.save();\n    canvasContext.translate(centerX, centerY);\n    canvasContext.drawImage(\n      videoElement,\n      -videoWidth / 2,\n      -videoHeight / 2,\n      videoWidth,\n      videoHeight,\n    );\n    canvasContext.restore();\n  }\n\n  startDrawingLoop(canvasElement, videoElement, frameRate: number): void {\n    // Drawing loop using AudioContext oscillator. requestAnimationFrame doesn't fire\n    // on background tabs, so this is a hack to make this work when the user switches tabs\n\n    const instance = this;\n    instance.drawLoopActive = true;\n    const canvasContext = canvasElement.getContext('2d');\n\n    const stepMilliSeconds = 1000 / frameRate;\n\n    function step(): void {\n      if (instance.drawLoopActive) {\n        instance.draw(canvasContext, videoElement);\n        setTimeout(step, stepMilliSeconds);\n        // requestAnimationFrame(step);\n      }\n    }\n    step();\n  }\n\n  _muteVideo(videoElement): void {\n    // Mute a given video element\n\n    const instance = this;\n    function mute(event): void {\n      videoElement.muted = 'muted';\n      videoElement.removeEventListener('playing', mute);\n    }\n\n    videoElement.addEventListener('playing', mute);\n  }\n\n  _sizeCanvasElement(videoWidth: number, videoHeight: number): {canvasWidth: number, canvasHeight: number} {\n    // We're keeping the height the same. Goal is to add black bars to the sides\n    // if we're in portrait mode and crop to the center if we're in landscape.\n    return {\n      canvasWidth: videoHeight * 4 / 3,\n      canvasHeight: videoHeight,\n    };\n  }\n\n  _createVideoElement(canvasId: string, videoStream: any): any {\n    // Create the video element and attach it to the canvas\n\n    const videoElement = document.createElement('video');\n    const canvasElement: any = document.getElementById(canvasId);\n    const canvasStream = canvasElement.captureStream();\n    const videoSettings = videoStream.getVideoTracks()[0].getSettings();\n\n    Janus.attachMediaStream(videoElement, videoStream);\n    videoElement.autoplay = true;\n    videoElement.setAttribute('playsinline', 'true');\n    videoElement.setAttribute('id', 'self-video');\n\n    // Chrome doesn't like it if we set the muted attribute before the video is playing\n    this._muteVideo(videoElement);\n\n    const { canvasWidth, canvasHeight } = this._sizeCanvasElement(videoSettings.width, videoSettings.height);\n    canvasElement.width = canvasWidth;\n    canvasElement.height = canvasHeight;\n\n    const audioTrack = videoStream.getAudioTracks().find((item) => item);\n    if (!!audioTrack) {\n        canvasStream.addTrack(videoStream.getAudioTracks()[0]);\n    }\n\n    this.startDrawingLoop(canvasElement, videoElement, videoSettings.frameRate);\n    // this.startDrawingLoop(canvasElement, videoElement, 20);\n\n    return {\n      videoElement,\n      canvasStream,\n    };\n  }\n\n  unPublishOwnFeed(): void {\n    // Unpublish your own feed\n    const unpublish = { request: 'unpublish' };\n    this.handle.send({ message: unpublish });\n    this.cleanupLocalStream();\n  }\n\n  publishOwnFeed(\n    audioDeviceId: string | null,\n    videoDeviceId: string,\n    canvasId: string = 'canvas-self',\n  ): Observable {\n    // Publish our own feed\n    return new Observable(\n      subscriber => {\n        if (this.publishWebrtcState) {\n          // Already publishing. Need to unpublish, wait until we're done unpublishing, and then republish\n          this.unPublishOwnFeed();\n          interval(100).pipe(\n            takeWhile(() => this.publishWebrtcState)\n          ).subscribe({\n            complete: () => {\n              this.createOffer(subscriber, audioDeviceId, videoDeviceId, canvasId);\n            }\n          });\n        } else {\n          // Simple case. Not publishing yet\n          this.createOffer(subscriber, audioDeviceId, videoDeviceId, canvasId);\n        }\n      }\n    );\n  }\n\n  createOffer(\n    subscriber,\n    audioDeviceId: string | null,\n    videoDeviceId: string,\n    canvasId: string,\n    retryCount = 0,\n  ): void {\n    const instance = this;\n    instance.webrtcService.getUserMedia(audioDeviceId, videoDeviceId)\n    .then(\n      (videoStream) => {\n        instance.localStream = videoStream;\n        const {videoElement, canvasStream} = instance._createVideoElement(canvasId, videoStream);\n        instance.videoElement = videoElement;\n        this.handle.createOffer({\n          media: { audioRecv: false, videoRecv: false, audioSend: true, videoSend: true },\n          success(jsep): void {\n            const publish = { request: 'configure', audio: true, video: true };\n            instance.handle.send({message: publish, jsep});\n            subscriber.next(true);\n            subscriber.complete();\n          },\n          error(error): void {\n            subscriber.error(error);\n          },\n          simulcast: true,\n          simulcastMaxBitrates: {\n            high: 256000,\n            medium: 128000,\n            low: 64000,\n          },\n          stream: canvasStream,\n          trickle: true,\n        });\n      }\n    ).catch((error) => {\n      // Some devices get intermittent errors. I'm doing a retry here. Not a warm-fuzzy solution. Future would might\n      // find a race condition where we need to wait for an event before calling getUserMedia\n      console.log(\"GUM ERROR:\", error, audioDeviceId, videoDeviceId)\n      if (retryCount  {\n          instance.createOffer(\n            subscriber,\n            audioDeviceId,\n            videoDeviceId,\n            canvasId,\n            retryCount = retryCount + 1,\n          );\n        }, 1000);\n      }\n    });\n  }\n\n  attachMediaStream(elemId: string, streamId: string): void {\n    const element: any = document.getElementById(elemId);\n    Janus.attachMediaStream(element, this.streams[streamId]);\n  }\n\n  attachRemoteFeed(\n    feed: RemoteFeed,\n    room: RoomInfo,\n    pin: string,\n  ): Observable {\n    // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n\n    const instance = this;\n\n    return new Observable(\n      subscriber => {\n        instance.janus.attach({\n          plugin: 'janus.plugin.videoroom',\n          opaqueId: instance.opaqueId,\n          success(pluginHandle): void {\n            instance.remoteHandles[feed.id] = pluginHandle;\n            instance.remoteHandles[feed.id].videoCodec = feed.video_codec;\n\n            const subscribe = {\n              request: 'join',\n              room: room.id,\n              ptype: 'subscriber',\n              feed: feed.id,\n              private_id: room.privateId,\n              substream: 0,\n              pin,\n            };\n            instance.remoteHandles[feed.id].send({message: subscribe});\n          },\n\n          error(error): void {\n            subscriber.error(error);\n          },\n\n          onmessage(msg, jsep): void {\n            console.log(\"MESSAGE\", msg);\n            subscriber.next({\n              message: fromModels.ON_REMOTE_FEED_MESSAGE,\n              payload: {\n                msg,\n                jsep,\n                feed,\n                room,\n              },\n            });\n            if (!!jsep) {\n              instance.answerRemoteFeedJsep(jsep, feed, room);\n            }\n          },\n\n          webrtcState(on): void {\n            subscriber.next({\n              message: fromModels.REMOTE_FEED_WEBRTC_STATE,\n              payload: {\n                on,\n                feed,\n                room,\n              },\n            });\n          },\n\n          onlocalstream(stream): void {\n            console.log('Would never expect to get here');\n          },\n\n          slowLink(msg): void {\n            subscriber.next({\n              message: fromModels.REMOTE_FEED_SLOW_LINK,\n              payload: {\n                feedId: feed.id,\n              },\n            });\n          },\n\n          onremotestream(stream): void {\n            // Save off remote stream\n\n            console.log(\"HAVE REMOTE STREAM\", stream);\n            const streamId = instance._get_random_string();\n            instance.streams[streamId] = stream;\n\n            const numVideoTracks = stream.getVideoTracks() ? stream.getVideoTracks().length : 0;\n            subscriber.next({\n              message: fromModels.ON_REMOTE_REMOTE_STREAM,\n              payload: {\n                streamId,\n                numVideoTracks,\n                feed,\n                room,\n              },\n            });\n          },\n          oncleanup(): void {\n            subscriber.next({\n              message: fromModels.ON_REMOTE_CLEANUP,\n              payload: {\n                feed,\n                room,\n              },\n            });\n          }\n        });\n      }\n    );\n  }\n\n  toggleMute(): boolean {\n    const muted = this.handle.isAudioMuted();\n    if (muted) {\n        this.handle.unmuteAudio();\n    } else {\n        this.handle.muteAudio();\n    }\n    return this.handle.isAudioMuted();\n  }\n\n  setMute(mute: boolean): boolean {\n    const muted = this.handle.isAudioMuted();\n    if (muted === mute) {\n      return this.handle.isAudioMuted();\n    }\n\n    if (mute) {\n        this.handle.muteAudio();\n    } else {\n        this.handle.unmuteAudio();\n    }\n    return this.handle.isAudioMuted();\n  }\n\n  requestSubstream(feed: RemoteFeed, substreamId: number): void {\n    this.remoteHandles[feed.id].send({message: {request: 'configure', substream: substreamId}});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^10.1.1\n        \n            @angular/core : ^10.1.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JanusRole   (src/.../janus.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/janus.models.ts\n    \n        \n            \n                \n                    \n                        \n                        JanusRole\n                    \n                \n                    \n                        \n                            Possible roles for a user.\n\n                        \n                    \n                        \n                            \n                                 publisher\n                            \n                        \n                        \n                            \n                                Value : publisher\n                            \n                        \n                        \n                            \n                                 listener\n                            \n                        \n                        \n                            \n                                Value : listener\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJanus Videoroom Component\nThis is an angular library with features to make it easy to embed a videoroom into any angular app. Once you have a properly configured, public instance of a janus server with the videoroom plugin enabled, this library includes an easy to use directive that will connect clients in a videoroom.\nWhy build this?\nThe objective when building this is to lower the barrier to implementing\nvideorooms. The Janus documentation and demos are great for understanding how\nthe service works. However, the sample client code is not that easy to adopt\ninto your own application. This makes it so that developers need to write a lot\nof the low level code themselves and understand many of the low level details\nof the videoroom plugin. While more knowledge is always better than less, we\nbelieve it's possible to implement a videoroom without requiring the developer\nto understand intimate details of webrtc.\nWhat does this implement?\nThe core function provided by this library is a component called JanusVideoroomComponent that implements a videoroom. The selector for the component is janus-videoroom. You can have a fully functional videoroom only specifying the URL of the janus gateway and the room ID. The videoroom supports the following features:\n\nRoom ID You can specify any roomId that is available on the janus gateway.\nhttp and websocket connections You can specify an http and/or websocket URL. The component will prefer the websocket URL and fallback to the http URL.\nPINs You can specify a PIN for any room that requires it.\nAuto Resize Videos are automatically enlarged to take up the maximum screen real estate upon changing the size or orientation of the screen.\nMultiple Aspect Ratios Different source video aspect ratios are handled smoothly.\nDisplay Names You can specify the display name for anyone joining a videoroom.\nPublishers or Read Only Users Users can be publishers, who will send a feed from their camera/microphone, or they can be read only users that don't transmit anything.\nDevices Device IDs can be input and dynamically changed so that users can change which input or output devices to use.\nICE Servers In addition the the janus gateway, custom STUN/TURN servers can be specified.\nMute Audio Audio can be muted for publishers.\n\nWhat does this not implement?\nIn the spirit of doing one thing well, the janus-videoroom component does not\nimplement many necessary parts of an application. For example, the component\nsupports muting the feed of a publisher. However, it does not implement a mute\nbutton. The burden is put on the developer to implement the UX around how to\nmute a feed.\nThe following is a non-exhaustive list of necessary items for most webapps that\nare not implemented by JanusVideoroomComponent. These will have to be\nimplemented by the application outside of this library.\n\nJanus room configuration Create/edit/delete operations on janus rooms are not supported\nUI elements for interaction Mute, change device, etc. are supported by the component, but it does not include UI elements for these.\nUser Authentication\nBackend Storage\nJanus gateway deployment\n\nHow to use\nInstallation\nInstallation is available through yarn or npm\nyarn add janus-angularIncluding the module\nThe JanusModule must be included in your imports for the module in which you wish to use the directive\nimport { JanusModule } from 'janus';\n...\n@NgModule({\n  declarations: [\n    ...\n  ],\n  imports: [\n    ...\n    JanusModule,\n  ],\n})\nexport class YourAppModule { }Using the directive\nThe following minimal component will work with the demo deploy of janus.\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  styleUrls: ['./app.component.scss'],\n  template: `\n    \n    \n  `\n})\nexport class AppComponent {\n  roomId = 1234;\n  wsUrl = 'wss://janus.conf.meetecho.com/ws';\n}Inputs/Outputs for the component are documented in the API docs on this site. Page for the\ncomponent docs is here\nFuture Work\nIn addition to tireless bug fixing and making sure it works on all platforms\nand networks, future work will include adding additional touchpoints in which\nsomeone can customize the videoroom. Overlays work great to give rough\nfunctionality to all supported features. However, there are often times when an\napp wants to implement buttons on a publisher video itself, or change the\nentire look and feel of the videoroom.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        JanusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JanusModule\n\n\n\ncluster_JanusModule_declarations\n\n\n\ncluster_JanusModule_exports\n\n\n\n\nJanusVideoroomComponent\n\nJanusVideoroomComponent\n\n\n\nJanusModule\n\nJanusModule\n\nJanusModule -->\n\nJanusVideoroomComponent->JanusModule\n\n\n\n\n\nJanusVideoroomComponent \n\nJanusVideoroomComponent \n\nJanusVideoroomComponent  -->\n\nJanusModule->JanusVideoroomComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ATTACH_SUCCESS   (src/.../janus-server.models.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            CONSENT_DIALOG   (src/.../janus-server.models.ts)\n                        \n                        \n                            DETACHED   (src/.../janus-server.models.ts)\n                        \n                        \n                            initialState   (src/.../janus.reducers.ts)\n                        \n                        \n                            MEDIA_STATE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_CLEANUP   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_DATA   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_DATA_OPEN   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_LOCAL_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_MESSAGE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_CLEANUP   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_FEED_MESSAGE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_LOCAL_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_REMOTE_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            randomString   (src/.../random.ts)\n                        \n                        \n                            REMOTE_FEED_SLOW_LINK   (src/.../janus-server.models.ts)\n                        \n                        \n                            REMOTE_FEED_WEBRTC_STATE   (src/.../janus-server.models.ts)\n                        \n                        \n                            RemoteFeedFactory   (src/.../janus.factories.ts)\n                        \n                        \n                            REQUEST_SUBSTREAM   (src/.../janus.actions.ts)\n                        \n                        \n                            RoomInfoFactory   (src/.../janus.factories.ts)\n                        \n                        \n                            SLOW_LINK   (src/.../janus-server.models.ts)\n                        \n                        \n                            TOGGLE_MUTE_SUCCESS   (src/.../janus.actions.ts)\n                        \n                        \n                            WEBRTC_STATE   (src/.../janus-server.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/janus-server.models.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ATTACH_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'attach success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CONSENT_DIALOG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consent dialog'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DETACHED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'detached'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MEDIA_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'media state'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_CLEANUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cleanup'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_DATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_DATA_OPEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data open'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_LOCAL_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'local stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'message'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_CLEANUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] cleanup'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_FEED_MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] message'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_LOCAL_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] local stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_REMOTE_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] remote stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'remote stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REMOTE_FEED_SLOW_LINK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] slow link'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REMOTE_FEED_WEBRTC_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] webrtc state'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SLOW_LINK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'slow link'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WEBRTC_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'webrtc state'\n                        \n                    \n\n\n            \n        \n\n    src/lib/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  JanusVideoroomComponent,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  AudioBoxComponent,\n  VideoBoxComponent,\n  DefaultVideoRoomComponent,\n  SelfVideoComponent,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/store/reducers/janus.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VideoroomState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  roomInfo: {\n    state: RoomInfoState.start,\n    id: null,\n    description: null,\n    privateId: null,\n    otherRoomId: null,\n\n    errorCode: null,\n\n    publishState: PublishState.start,\n    localStreamId: null,\n    muted: false,\n  },\n  remoteFeeds: {},\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/shared/random.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            randomString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ((bytes: number) => {\n  const array = new Uint8Array(bytes);\n  window.crypto.getRandomValues(array);\n\n  // Real pain to find a cross platform way to do this smoothly. Dropping into a for loop\n  let ret = '';\n  for (const item of array) {\n    ret += item.toString(36);\n  }\n\n  return ret;\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/factories/janus.factories.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RemoteFeedFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Factory.Sync.makeFactory({\n  state: RemoteFeedState.initialized,\n  id: Factory.each(i => i.toString()),\n  streamId: Factory.each(i => 'stream' + i.toString()),\n  numVideoTracks: 0,\n  requestedSubstream: 0,\n  currentSubstream: 0,\n  displayName: Factory.each(i => 'name' + i.toString()),\n  audio_codec: Factory.each(i => 'audio' + i.toString()),\n  video_codec: Factory.each(i => 'video' + i.toString()),\n  muted: false,\n  volume: 64,\n  slowLink: null,\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RoomInfoFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Factory.Sync.makeFactory({\n  state: RoomInfoState.start,\n  id: Factory.each(i => i.toString()),\n  description: Factory.each(i => 'description' + i.toString()),\n  privateId: Factory.each(i => i),\n  otherRoomId: Factory.each(i => i),\n  errorCode: null,\n  publishState: PublishState.start,\n  localStreamId: Factory.each(i => 'stream' + i.toString()),\n  muted: false,\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/store/actions/janus.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_SUBSTREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Janus] Request Substream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOGGLE_MUTE_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Janus] Toggle Mute Success'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
