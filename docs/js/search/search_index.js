var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/DeviceSelectorComponent.html",[0,0.988,1,0.812]],["body/components/DeviceSelectorComponent.html",[0,1.438,1,1.277,2,1.519,3,0.6,4,0.48,5,1.333,6,1.657,7,1.657,8,1.657,9,0.6,10,4.299,11,3.316,12,2.148,13,0.6,14,1.257,15,2.627,16,4.045,17,2.307,18,2.305,19,0.83,20,2.305,21,2.989,22,1.889,23,1.889,24,1.692,25,2.989,26,2.989,27,1.855,28,2.305,29,2.305,30,1.438,31,2.989,32,2.989,33,2.867,34,2.305,35,2.652,36,2.652,37,1.855,38,1.657,39,2.305,40,2.305,41,0.83,42,1.855,43,3.438,44,2.305,45,2.989,46,0.373,47,1.519,48,2.3,49,3.438,50,3.438,51,3.438,52,3.438,53,2.652,54,2.305,55,0.983,56,2.305,57,3.438,58,1.855,59,2.148,60,3.717,61,3.438,62,3.717,63,1.747,64,2.307,65,2.627,66,2.148,67,1.333,68,0.079,69,0.768,70,0.961,71,1.091,72,2.989,73,2.148,74,1.25,75,2.989,76,2.652,77,2.148,78,1.25,79,2.989,80,2.305,81,2.148,82,2.148,83,2.148,84,2.148,85,1.091,86,1.091,87,1.519,88,2.148,89,0.904,90,1.519,91,1.657,92,1.855,93,0.738,94,2.148,95,1.657,96,2.305,97,1.333,98,1.657,99,1.333,100,2.148,101,1.333,102,0.48,103,1.519,104,2.307,105,1.333,106,1.657,107,1.855,108,2.148,109,2.148,110,2.148,111,2.148,112,3.438,113,2.148,114,2.148,115,2.148,116,2.148,117,2.148,118,2.148,119,1.657,120,1.333,121,1.519,122,0.898,123,2.148,124,0.898,125,2.148,126,1.091,127,2.148,128,2.148,129,1.657,130,1.657,131,1.657,132,0.738,133,1.657,134,2.148,135,1.657,136,2.148,137,1.657,138,2.148,139,2.148,140,2.148,141,2.148,142,3.438,143,2.652,144,1.657,145,2.148,146,1.657,147,2.148,148,1.657,149,2.148,150,4.045,151,2.989,152,2.148,153,2.148,154,0.6,155,2.989,156,2.148,157,2.148,158,1.657,159,2.148,160,2.148,161,1.333,162,2.148,163,2.148,164,1.333,165,2.148,166,2.305,167,2.148,168,2.148,169,2.148,170,1.091,171,2.305,172,1.855,173,1.333,174,2.867,175,1.657,176,1.657,177,0.6,178,1.091,179,1.657,180,1.657,181,0.035,182,0.049,183,0.035]],["title/interfaces/Devices.html",[55,0.528,184,0.66]],["body/interfaces/Devices.html",[3,0.629,4,0.503,9,0.629,13,0.985,14,1.196,19,0.847,22,1.57,23,1.57,24,1.292,41,0.69,46,0.391,47,1.57,55,0.69,68,0.079,69,0.503,70,0.985,74,0.942,78,0.942,89,0.503,102,0.97,122,1.587,124,1.587,126,1.928,132,1.365,154,0.629,181,0.037,182,0.05,183,0.037,184,1.147,185,1.145,186,1.145,187,1.917,188,1.602,189,1.228,190,1.061,191,1.717,192,1.211,193,2.354,194,1.57,195,1.928,196,1.917,197,1.928,198,2.354,199,2.354,200,1.917,201,1.292,202,2.188,203,2.548,204,1.211,205,1.303,206,1.398,207,1.475,208,2.354,209,1.398,210,1.145,211,1.791,212,2.467,213,0.774,214,1.145,215,1.471,216,1.145,217,1.398,218,1.398,219,0.774,220,0.942,221,1.292,222,1.145,223,1.145,224,1.145,225,1.06,226,1.475,227,1.292,228,1.398,229,1.211,230,1.061,231,1.57,232,0.942,233,0.942,234,0.942,235,1.145,236,1.145,237,1.57,238,1.145,239,1.145,240,2.02,241,1.145,242,1.398,243,0.939,244,1.398,245,1.398,246,1.398,247,1.917,248,0.774,249,1.145,250,1.398,251,1.398,252,1.398,253,1.917,254,1.398,255,0.942,256,1.917,257,1.398,258,1.145,259,1.398,260,0.942,261,1.398,262,1.917,263,1.57,264,0.942,265,1.917,266,1.398,267,0.942,268,1.917,269,1.145,270,1.145,271,1.292,272,1.917,273,1.145,274,1.292,275,1.145,276,1.398,277,1.398,278,1.398,279,1.398,280,1.145,281,1.145,282,1.398,283,0.942,284,0.629,285,1.398,286,1.398,287,0.942,288,1.398,289,1.398,290,1.145,291,0.942,292,1.57,293,1.57,294,1.57,295,1.292,296,1.398,297,1.57,298,1.061,299,1.145,300,0.942,301,0.942,302,1.145,303,1.145,304,0.942,305,0.942,306,1.145,307,1.398]],["title/interfaces/IceServer.html",[184,0.66,298,0.812]],["body/interfaces/IceServer.html",[3,0.63,4,0.504,9,0.63,13,0.986,14,1.06,19,0.848,22,1.146,23,1.146,24,0.943,41,0.691,46,0.391,47,1.571,55,0.504,68,0.079,69,0.504,70,0.986,71,1.928,74,0.943,78,0.943,89,0.504,102,0.971,122,0.943,124,0.943,126,1.146,132,1.366,154,0.63,181,0.037,182,0.05,183,0.037,184,1.148,185,1.146,186,1.146,187,1.399,188,1.602,189,1.175,190,1.062,191,1.718,192,1.212,193,2.355,194,1.571,195,1.928,196,1.919,197,1.928,198,2.355,199,2.355,200,1.919,201,1.293,202,2.189,203,2.549,204,1.212,205,1.304,206,1.399,207,1.475,208,2.355,209,1.399,210,1.146,211,1.792,212,2.468,213,0.775,214,1.146,215,1.471,216,1.146,217,1.399,218,1.399,219,0.775,220,0.943,221,1.293,222,1.146,223,1.146,224,1.146,225,1.06,226,1.475,227,1.293,228,1.399,229,1.212,230,1.062,231,1.571,232,0.943,233,0.943,234,0.943,235,1.146,236,1.146,237,1.571,238,1.146,239,1.146,240,2.02,241,1.146,242,1.399,243,0.939,244,1.399,245,1.399,246,1.399,247,1.919,248,0.775,249,1.146,250,1.399,251,1.399,252,1.399,253,1.919,254,1.399,255,0.943,256,1.919,257,1.399,258,1.146,259,1.399,260,0.943,261,1.399,262,1.919,263,1.571,264,0.943,265,1.919,266,1.399,267,0.943,268,1.919,269,1.146,270,1.146,271,1.293,272,1.919,273,1.146,274,1.475,275,1.146,276,1.399,277,1.399,278,1.399,279,1.399,280,1.146,281,1.146,282,1.399,283,0.943,284,0.63,285,1.399,286,1.399,287,0.943,288,1.399,289,1.399,290,1.146,291,0.943,292,1.571,293,1.571,294,1.571,295,1.293,296,1.399,297,1.571,298,1.304,299,1.571,300,1.293,301,0.943,302,1.146,303,1.146,304,1.293,305,1.587,306,1.928,307,2.355,308,1.739]],["title/modules/JanusModule.html",[309,1.2,310,0.988]],["body/modules/JanusModule.html",[1,1.608,3,0.862,4,0.689,9,0.862,11,2.379,30,1.29,68,0.079,89,1.03,93,1.06,95,2.379,102,0.689,170,1.567,177,1.308,181,0.05,182,0.062,183,0.05,309,1.567,310,1.94,311,1.914,312,1.29,313,2.546,314,2.379,315,1.914,316,3.164,317,2.379,318,2.379,319,2.379,320,2.923,321,2.379,322,2.379,323,3.084,324,2.923,325,3.79,326,2.379,327,3.79,328,3.084,329,2.379,330,3.084,331,3.084,332,3.084,333,2.923,334,3.084,335,3.084,336,3.79,337,2.923,338,3.084,339,1.585,340,3.084,341,3.084,342,2.923,343,3.084,344,3.084,345,3.084,346,2.923,347,3.084,348,3.084,349,2.379]],["title/components/JanusVideoroomComponent.html",[0,0.988,177,0.66]],["body/components/JanusVideoroomComponent.html",[0,1.6,1,0.474,2,1.095,3,0.386,4,0.308,5,0.857,6,1.065,7,1.065,8,1.065,9,0.386,13,0.386,14,0.386,15,1.86,17,1.338,19,0.874,20,1.663,30,0.578,33,1.663,35,2.045,36,2.045,37,2.311,38,1.065,39,1.663,40,1.663,41,1.003,42,1.338,44,1.663,46,0.24,48,1.095,54,2.311,55,0.874,56,1.663,58,1.338,65,2.579,67,1.338,68,0.079,69,0.804,70,1.173,71,1.095,76,2.507,80,1.663,85,1.652,86,1.348,87,0.702,89,0.832,90,1.348,91,1.065,92,2.474,93,0.474,96,1.663,97,0.857,98,1.065,99,0.857,101,0.857,102,0.308,103,1.348,104,1.86,105,0.857,106,1.065,107,2.428,119,1.065,120,0.857,121,1.944,129,1.065,130,1.065,131,1.065,132,1.279,154,0.602,170,0.702,171,1.663,172,1.338,173,0.857,174,2.311,175,1.065,176,1.065,177,0.837,178,2.086,179,1.065,180,1.065,181,0.022,182,0.035,183,0.022,184,0.837,188,1.455,189,0.963,190,0.741,192,1.183,194,0.702,201,0.902,204,0.741,205,0.741,207,0.578,210,1.095,213,1.183,215,1.117,219,0.911,221,1.637,225,0.963,226,1.441,229,0.474,230,1.029,231,0.702,232,1.254,243,0.77,248,0.741,260,0.902,264,1.557,269,1.095,270,0.702,271,1.441,274,1.254,281,1.348,283,1.109,284,0.908,287,1.36,291,1.109,292,1.75,294,1.095,295,1.694,298,0.911,300,0.902,301,0.902,302,0.702,303,0.702,304,1.254,305,0.902,306,1.523,308,1.065,315,1.338,329,3.238,339,0.902,350,4.198,351,1.381,352,1.663,353,2.156,354,1.663,355,1.663,356,2.156,357,1.663,358,1.663,359,1.338,360,1.663,361,2.156,362,2.997,363,2.156,364,1.646,365,2.629,366,2.652,367,3.723,368,2.652,369,2.156,370,3.723,371,2.311,372,3.25,373,2.474,374,2.233,375,2.507,376,2.872,377,2.652,378,2.156,379,1.381,380,1.381,381,1.381,382,2.156,383,2.311,384,1.381,385,1.86,386,2.156,387,2.507,388,2.156,389,2.156,390,1.381,391,2.311,392,1.663,393,2.156,394,2.156,395,2.156,396,2.156,397,2.156,398,2.156,399,2.156,400,1.338,401,2.156,402,2.156,403,1.663,404,2.156,405,1.663,406,2.156,407,2.156,408,2.652,409,1.381,410,2.156,411,2.156,412,1.381,413,1.663,414,2.997,415,2.156,416,2.156,417,1.663,418,1.381,419,2.156,420,2.997,421,1.381,422,2.156,423,1.663,424,2.156,425,1.381,426,1.381,427,1.663,428,1.663,429,1.381,430,2.997,431,2.311,432,2.156,433,2.156,434,1.381,435,2.311,436,1.338,437,1.381,438,1.065,439,1.381,440,1.381,441,2.156,442,1.381,443,1.381,444,2.311,445,1.381,446,2.156,447,1.381,448,1.381,449,1.381,450,1.065,451,1.065,452,1.381,453,1.381,454,2.652,455,1.381,456,0.857,457,2.045,458,1.381,459,1.381,460,1.065,461,0.702,462,1.381,463,1.381,464,2.997,465,2.997,466,2.997,467,1.381,468,1.381,469,2.156,470,1.381,471,1.381,472,1.381,473,2.156,474,1.381,475,1.381,476,1.381,477,1.381,478,1.381,479,1.065,480,1.065,481,1.381,482,2.156,483,2.156,484,1.381,485,1.381,486,3.25,487,1.381,488,1.381,489,1.381,490,1.381,491,2.156,492,1.381,493,1.381,494,1.381,495,0.857,496,1.065,497,1.065,498,1.381,499,1.065,500,1.381,501,1.381,502,1.381,503,1.381,504,1.381,505,1.381,506,1.381,507,1.381,508,1.381,509,2.156,510,0.857,511,1.381,512,1.381,513,1.381,514,1.381,515,2.156,516,1.381,517,1.381,518,1.381,519,1.381,520,2.156,521,1.381,522,1.381,523,1.381,524,1.381,525,1.381,526,1.381,527,2.156,528,1.381,529,1.381,530,1.381,531,1.381,532,1.381,533,1.381,534,1.381,535,1.381,536,1.381,537,1.381,538,1.065,539,1.381,540,1.381,541,1.381,542,2.045,543,1.065,544,1.381]],["title/interfaces/Publisher.html",[184,0.66,243,0.528]],["body/interfaces/Publisher.html",[3,0.587,4,0.469,9,0.587,13,1.029,14,1.029,19,0.866,22,1.067,23,1.067,24,0.879,41,0.822,46,0.365,47,1.496,55,0.469,68,0.079,69,0.658,70,1.029,74,1.231,78,1.231,89,0.469,102,0.956,122,0.879,124,0.879,126,1.067,132,1.331,154,0.822,181,0.034,182,0.048,183,0.034,184,1.153,185,1.067,186,1.067,187,1.304,188,1.582,189,1.224,190,1.011,191,1.68,192,1.265,193,2.285,194,1.496,195,1.871,196,1.827,197,1.871,198,2.285,199,2.285,200,1.827,201,1.231,202,2.109,203,2.493,204,1.265,205,1.265,206,1.304,207,1.421,208,2.285,209,1.304,210,1.067,211,1.726,212,2.655,213,0.722,214,1.067,215,1.489,216,1.067,217,1.304,218,1.304,219,0.722,220,0.879,221,1.421,222,1.067,223,1.067,224,1.067,225,1.176,226,1.621,227,1.231,228,1.304,229,1.265,230,1.011,231,1.496,232,0.879,233,0.879,234,0.879,235,1.067,236,1.067,237,1.969,238,1.067,239,1.067,240,2.226,241,1.067,242,1.304,243,0.988,244,1.827,245,1.827,246,1.827,247,2.285,248,1.011,249,1.496,250,1.827,251,1.827,252,1.827,253,2.285,254,1.827,255,1.231,256,2.285,257,1.827,258,1.496,259,1.827,260,1.231,261,1.827,262,2.285,263,1.871,264,1.231,265,2.285,266,1.827,267,1.231,268,2.285,269,1.496,270,1.496,271,1.54,272,2.285,273,1.496,274,1.421,275,1.496,276,1.827,277,1.827,278,1.827,279,1.827,280,1.496,281,1.496,282,1.827,283,1.231,284,0.822,285,1.827,286,1.827,287,1.231,288,1.827,289,1.827,290,1.067,291,0.879,292,1.496,293,1.496,294,1.496,295,1.231,296,1.304,297,1.496,298,1.011,299,1.067,300,0.879,301,0.879,302,1.067,303,1.067,304,0.879,305,0.879,306,1.067,307,1.304]],["title/injectables/WebrtcService.html",[64,1.466,545,1.466]],["body/injectables/WebrtcService.html",[3,0.309,4,0.247,9,0.309,13,0.505,14,1.13,19,0.511,24,1.105,27,1.121,30,0.755,34,2.037,41,0.65,46,0.192,48,0.562,53,1.765,55,0.698,58,1.639,63,0.918,64,1.639,65,1.938,67,0.687,68,0.079,69,0.403,70,0.309,71,0.562,74,0.463,78,0.463,85,0.918,87,1.858,89,0.736,90,0.562,93,0.38,97,0.687,99,0.687,101,0.687,102,0.403,103,1.674,104,2.37,105,0.687,107,2.814,120,1.42,121,2.294,122,1.529,124,1.566,132,0.38,133,1.765,135,2.408,137,0.853,143,1.765,144,0.853,146,0.853,148,0.853,154,0.309,158,0.853,161,1.938,164,0.687,166,0.853,172,1.42,178,0.562,181,0.018,182,0.029,183,0.018,188,1.476,189,0.873,191,0.463,192,1.256,195,0.562,197,0.562,204,0.62,205,0.786,211,0.918,213,0.786,215,1.18,219,1.373,220,0.463,225,0.873,226,1.306,229,0.786,230,1.312,232,1.105,233,1.217,234,0.755,243,0.247,248,0.38,255,0.755,258,0.562,267,0.463,271,0.463,280,0.562,283,0.463,284,1.022,287,1.566,293,0.562,298,0.62,305,0.463,339,1.597,352,0.853,364,1.121,365,1.121,371,1.765,373,1.639,374,1.121,375,1.393,385,0.687,400,1.121,431,0.853,436,0.687,438,2.541,444,2.742,450,0.853,451,0.853,456,2.411,460,0.853,461,0.562,480,0.853,495,1.121,499,0.853,510,2.51,542,1.393,543,2.887,545,1.42,546,1.106,547,1.106,548,1.806,549,1.806,550,2.288,551,1.806,552,1.806,553,2.641,554,2.91,555,2.288,556,2.641,557,1.106,558,1.106,559,2.037,560,1.806,561,1.106,562,2.641,563,2.245,564,1.806,565,1.393,566,1.393,567,1.106,568,1.806,569,1.765,570,1.106,571,1.106,572,1.106,573,1.106,574,2.288,575,1.106,576,0.853,577,1.806,578,1.106,579,1.106,580,1.106,581,1.106,582,1.106,583,1.106,584,1.765,585,0.853,586,0.853,587,0.853,588,1.106,589,1.106,590,1.806,591,1.106,592,1.106,593,0.853,594,1.106,595,1.806,596,1.393,597,1.106,598,1.106,599,1.806,600,1.106,601,1.806,602,1.106,603,1.806,604,1.106,605,1.106,606,1.106,607,1.106,608,2.288,609,1.106,610,1.106,611,1.106,612,1.106,613,1.106,614,1.806,615,2.288,616,1.106,617,2.91,618,2.037,619,1.106,620,1.106,621,3.656,622,1.106,623,1.106,624,1.106,625,1.106,626,2.288,627,1.806,628,1.106,629,0.853,630,1.106,631,1.106,632,1.106,633,3.436,634,1.106,635,1.106,636,1.106,637,1.106,638,1.393,639,1.106,640,1.106,641,3.944,642,1.806,643,2.288,644,2.541,645,2.288,646,1.806,647,1.806,648,1.106,649,1.106,650,0.853,651,1.106,652,1.806,653,1.106,654,1.106,655,1.106,656,1.806,657,1.806,658,2.288,659,1.806,660,1.106,661,1.106,662,1.106,663,1.106,664,1.106,665,1.106,666,1.106,667,1.806,668,1.806,669,1.106,670,2.408,671,1.106,672,1.806,673,1.106,674,1.806,675,1.106,676,1.806,677,1.106,678,2.91,679,2.641,680,1.106,681,1.106,682,1.106,683,1.106,684,1.806,685,1.806,686,1.106,687,1.106,688,1.106,689,1.806,690,1.106,691,1.106,692,1.806,693,1.806,694,3.743,695,1.106,696,1.806,697,1.106,698,1.806,699,1.806,700,1.806,701,1.806,702,1.106,703,1.106,704,1.806,705,1.806,706,1.106,707,1.106,708,1.806,709,1.106,710,1.106,711,1.765,712,1.106,713,0.853,714,1.106,715,1.106,716,1.106,717,1.106,718,1.806,719,1.393,720,1.806,721,1.106,722,1.106,723,1.106,724,1.106,725,1.106,726,1.806,727,1.806,728,1.806,729,1.106,730,1.106,731,1.806,732,1.806,733,1.106,734,1.106,735,1.106,736,1.106,737,1.106,738,1.106,739,1.106,740,1.806,741,2.037,742,1.806,743,1.806,744,2.288,745,1.106,746,3.122,747,1.106,748,1.106,749,1.106,750,1.106,751,1.106,752,1.106,753,1.106,754,1.106,755,1.106,756,1.806,757,1.106,758,0.853,759,0.853,760,1.106,761,1.106,762,1.106,763,1.806,764,1.806,765,1.106,766,0.853,767,1.106,768,1.806,769,1.106,770,1.106,771,1.806,772,1.806,773,1.393,774,1.806,775,1.106,776,1.106,777,1.106,778,1.106,779,1.806,780,1.106,781,1.106,782,1.106,783,1.106,784,1.106,785,1.106,786,2.641,787,2.641,788,2.641,789,1.106,790,1.106,791,0.853,792,0.853,793,1.106,794,1.106,795,1.106,796,1.106,797,1.106,798,1.106,799,1.106,800,1.106,801,0.687,802,1.106,803,2.91,804,1.806,805,1.106,806,1.106,807,1.106,808,2.641,809,1.106,810,1.106,811,1.106,812,1.106,813,1.106,814,1.106,815,1.106,816,1.806,817,1.106,818,1.106,819,1.806,820,1.106,821,1.106,822,1.106,823,1.106,824,1.106,825,1.106,826,1.806,827,1.106,828,0.853,829,1.106,830,1.106,831,1.106,832,1.106,833,2.91,834,1.106,835,1.106,836,2.91,837,1.106,838,1.806,839,1.106,840,1.106,841,1.106,842,1.106,843,1.106,844,1.106,845,1.106,846,1.806,847,1.106,848,1.106,849,2.641,850,1.106,851,1.106,852,1.106,853,1.106,854,1.106,855,1.106,856,1.106,857,1.106,858,1.806,859,1.106,860,1.106,861,0.853,862,1.106,863,1.106,864,1.106,865,0.853,866,1.106,867,1.106,868,1.106,869,1.106,870,0.853,871,1.106,872,1.106,873,1.106,874,1.106,875,0.853,876,0.687,877,1.106,878,1.106,879,1.106,880,1.106,881,1.106,882,1.106,883,1.106,884,1.106,885,1.106,886,1.106,887,1.106,888,1.106,889,1.106,890,1.106,891,1.106,892,1.806,893,1.106,894,1.106,895,1.393,896,1.106,897,1.106,898,1.106,899,1.106,900,1.106,901,1.106,902,1.106,903,1.106,904,1.106,905,1.106,906,1.106,907,1.106,908,1.106,909,1.106,910,2.91,911,1.806,912,1.806,913,1.106,914,1.106,915,1.106]],["title/dependencies.html",[312,1.185,916,1.534]],["body/dependencies.html",[68,0.076,93,1.249,181,0.059,182,0.068,183,0.059,190,1.249,312,1.748,326,2.805,917,3.637,918,3.637,919,2.805,920,4.18,921,2.805,922,2.805,923,3.637,924,3.637]],["title/miscellaneous/enumerations.html",[925,1.011,926,2.184]],["body/miscellaneous/enumerations.html",[19,0.814,46,0.632,68,0.074,86,2.126,181,0.059,182,0.068,183,0.059,186,1.851,227,1.523,243,0.935,290,1.851,291,1.75,297,2.126,925,1.851,926,2.809,927,3.642]],["title/index.html",[46,0.345,359,1.235,928,1.989]],["body/index.html",[0,1.846,4,0.755,5,1.291,14,0.817,15,1.814,17,1.291,18,1.605,19,0.465,27,1.814,28,2.255,29,1.605,30,1.223,37,1.291,41,1.012,42,1.291,48,1.485,55,0.653,63,1.962,68,0.075,69,0.465,89,0.653,90,1.057,92,1.814,93,0.715,102,0.653,154,0.817,173,2.098,177,0.817,178,2.289,181,0.034,182,0.048,183,0.034,189,0.817,190,0.715,192,1.327,201,0.87,204,0.715,205,0.715,220,0.87,221,1.533,225,0.581,227,0.87,230,1.161,243,0.653,248,1.004,249,1.485,255,0.87,260,1.223,263,1.717,264,0.87,267,0.87,273,1.057,274,0.87,275,1.057,284,0.817,295,1.414,299,1.485,300,1.414,304,1.223,309,1.485,310,1.414,312,1.223,313,1.291,324,1.605,339,1.414,349,2.255,354,1.605,355,2.827,357,2.255,358,1.605,359,1.291,360,1.605,365,1.291,373,1.291,374,1.814,376,1.605,383,1.605,385,2.275,387,1.605,391,1.605,392,2.255,400,2.098,403,1.605,405,1.605,413,2.979,417,1.605,423,1.605,427,2.607,428,1.605,435,1.605,436,2.098,479,1.605,496,1.605,538,1.605,559,1.605,563,1.605,565,2.827,566,1.605,569,2.827,585,1.605,586,2.255,587,1.605,596,1.605,618,2.255,629,1.605,638,1.605,650,1.605,670,1.605,701,1.291,711,1.605,719,1.605,759,1.605,766,2.827,773,1.605,779,2.275,791,1.605,792,2.255,801,1.814,861,1.605,865,2.255,870,1.605,875,2.255,876,1.291,916,1.605,919,1.605,921,2.255,922,2.255,929,4.005,930,3.38,931,2.923,932,3.666,933,2.081,934,2.081,935,2.081,936,2.081,937,2.081,938,3.38,939,2.081,940,2.081,941,3.666,942,2.081,943,2.081,944,2.081,945,2.081,946,2.081,947,2.081,948,2.081,949,2.081,950,2.081,951,2.081,952,2.081,953,3.38,954,2.081,955,2.081,956,2.081,957,2.081,958,2.081,959,2.081,960,2.081,961,2.923,962,2.081,963,2.081,964,2.081,965,2.081,966,2.923,967,2.081,968,2.923,969,2.081,970,2.081,971,2.923,972,2.081,973,2.081,974,2.923,975,3.38,976,2.081,977,3.666,978,2.081,979,3.862,980,2.081,981,2.081,982,2.081,983,2.923,984,2.081,985,2.081,986,4.114,987,2.081,988,2.081,989,2.923,990,2.081,991,2.081,992,2.081,993,2.081,994,2.081,995,3.666,996,3.38,997,2.923,998,3.38,999,2.081,1000,2.081,1001,2.081,1002,2.081,1003,2.081,1004,2.081,1005,2.081,1006,2.081,1007,2.081,1008,2.081,1009,2.081,1010,2.081,1011,2.923,1012,1.605,1013,2.081,1014,2.081,1015,2.081,1016,2.081,1017,2.081,1018,2.923,1019,2.923,1020,2.923,1021,2.081,1022,1.605,1023,2.081,1024,2.081,1025,2.923,1026,2.081,1027,2.081,1028,2.081,1029,2.081,1030,2.081,1031,2.081,1032,2.081,1033,2.081,1034,2.081,1035,2.081,1036,2.081,1037,2.923,1038,2.081,1039,2.081,1040,2.081,1041,2.081,1042,2.081,1043,2.081,1044,2.081,1045,2.081,1046,2.081,1047,2.081,1048,2.081,1049,2.081,1050,2.081,1051,2.081,1052,2.081,1053,2.081,1054,2.081,1055,2.923,1056,2.923,1057,2.081,1058,2.081,1059,2.923,1060,2.081,1061,2.081,1062,2.081,1063,2.923,1064,2.923,1065,2.081,1066,3.666,1067,2.081,1068,2.081,1069,2.081,1070,2.081,1071,2.081,1072,2.081,1073,2.081,1074,2.081,1075,2.081,1076,2.081,1077,2.081,1078,2.081,1079,2.081,1080,2.081,1081,2.081,1082,2.081,1083,2.923,1084,2.081,1085,2.081,1086,2.081,1087,2.081,1088,2.081,1089,2.081,1090,2.081,1091,2.081,1092,2.923,1093,2.081,1094,2.081,1095,2.081,1096,2.081,1097,2.081,1098,2.081,1099,2.081,1100,2.081,1101,2.081,1102,2.081,1103,2.081,1104,2.081,1105,2.081]],["title/modules.html",[311,1.98]],["body/modules.html",[68,0.069,181,0.06,182,0.069,183,0.06,310,1.552,311,2.302,584,2.861,1106,3.71,1107,3.71,1108,3.71]],["title/overview.html",[1109,2.461]],["body/overview.html",[1,1.594,2,1.767,68,0.075,164,2.528,170,1.767,177,1.297,181,0.057,182,0.066,183,0.057,185,1.767,309,2.07,310,1.955,312,1.455,313,2.159,314,2.683,315,2.159,316,2.683,317,2.683,318,2.683,319,2.683,320,3.142,321,2.683,322,2.683,545,2.159,741,2.683,801,2.159,1109,2.683]],["title/miscellaneous/variables.html",[461,1.439,925,1.011]],["body/miscellaneous/variables.html",[1,0.761,2,1.914,13,0.977,41,0.682,46,0.385,63,1.552,68,0.079,69,0.495,70,1.304,85,2.385,86,2.385,87,1.776,103,1.126,121,1.552,161,2.169,177,0.619,181,0.036,182,0.05,183,0.036,188,1.591,189,0.977,191,1.709,207,1.277,213,0.761,214,1.552,215,0.761,216,1.552,219,1.049,222,1.552,223,1.552,224,1.552,225,0.977,229,1.465,233,0.927,234,0.927,235,1.126,236,1.126,237,1.126,238,1.126,239,1.126,240,1.126,241,1.126,284,0.619,301,1.277,333,1.709,337,1.709,339,0.927,342,1.709,346,1.709,364,1.375,456,1.375,457,1.709,461,1.126,495,1.375,497,1.709,510,2.647,576,1.709,593,2.355,644,1.709,701,2.535,713,2.355,758,1.709,779,1.375,828,1.709,876,1.375,895,1.709,925,1.126,1012,1.709,1022,1.709,1110,3.054,1111,4.602,1112,4.618,1113,3.054,1114,3.054,1115,3.495,1116,3.054,1117,2.215,1118,3.054,1119,3.054,1120,3.054,1121,3.054,1122,3.054,1123,3.054,1124,3.054,1125,3.054,1126,3.054,1127,3.054,1128,3.054,1129,2.215,1130,3.054,1131,3.054,1132,3.054,1133,3.054,1134,3.054,1135,3.054,1136,3.054,1137,3.054,1138,3.054,1139,3.054,1140,2.215,1141,2.215,1142,2.215,1143,3.054,1144,3.054,1145,2.215,1146,3.054,1147,2.215,1148,2.215,1149,2.215,1150,2.215,1151,3.054,1152,3.054,1153,2.215,1154,2.215,1155,3.054,1156,2.215,1157,2.215,1158,2.215,1159,2.215,1160,2.215,1161,2.215,1162,3.495,1163,2.215,1164,2.215,1165,3.054,1166,4.38,1167,4.264,1168,2.215,1169,2.215,1170,2.215]]],"invertedIndex":[["",{"_index":68,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":161,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["000",{"_index":749,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1",{"_index":164,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{},"overview.html":{}}}],["10.0.1",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":535,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["1000",{"_index":772,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1080",{"_index":604,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1234",{"_index":1074,"title":{},"body":{"index.html":{}}}],["127",{"_index":272,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["128000",{"_index":864,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["13",{"_index":612,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["15",{"_index":668,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1920",{"_index":602,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["2",{"_index":741,"title":{},"body":{"injectables/WebrtcService.html":{},"overview.html":{}}}],["2.0.0",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["256000",{"_index":863,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["3",{"_index":801,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"overview.html":{}}}],["30",{"_index":167,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["3rdparty/janus.es",{"_index":591,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["4",{"_index":800,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["5px",{"_index":160,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["6",{"_index":571,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["60",{"_index":169,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["64",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64000",{"_index":866,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["9999",{"_index":536,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["_attachvideoroomhelper(subscriber",{"_index":669,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_createvideoelement(canvasid",{"_index":802,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_get_random_string",{"_index":666,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_mutevideo(videoelement",{"_index":778,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_setmuted(muted",{"_index":487,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["_sizecanvaselement(videowidth",{"_index":785,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["accessors",{"_index":378,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["actual_component",{"_index":180,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["adapter",{"_index":1064,"title":{},"body":{"index.html":{}}}],["add",{"_index":792,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["adding",{"_index":1090,"title":{},"body":{"index.html":{}}}],["addition",{"_index":1037,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1091,"title":{},"body":{"index.html":{}}}],["adopt",{"_index":978,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":952,"title":{},"body":{"index.html":{}}}],["ahead",{"_index":262,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["alldevices",{"_index":136,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["alldevices.filter((device",{"_index":142,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["allow",{"_index":581,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["allows",{"_index":564,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["allremotefeeds",{"_index":505,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["already",{"_index":837,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["always",{"_index":985,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1000,"title":{},"body":{"index.html":{}}}],["android",{"_index":579,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["angular",{"_index":355,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["angular/common",{"_index":326,"title":{},"body":{"modules/JanusModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":93,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":95,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{}}}],["angularincluding",{"_index":1068,"title":{},"body":{"index.html":{}}}],["answerremotefeedjsep(jsep",{"_index":723,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["anyone",{"_index":1024,"title":{},"body":{"index.html":{}}}],["anything",{"_index":417,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["api",{"_index":1077,"title":{},"body":{"index.html":{}}}],["app",{"_index":932,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":1072,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1073,"title":{},"body":{"index.html":{}}}],["application",{"_index":979,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1031,"title":{},"body":{"index.html":{}}}],["arg1",{"_index":691,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["arg2",{"_index":689,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["around",{"_index":563,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["array",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aspect",{"_index":1018,"title":{},"body":{"index.html":{}}}],["assign",{"_index":424,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["async",{"_index":133,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["attach",{"_index":495,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["attach_failed",{"_index":200,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attach_success",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attached",{"_index":199,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attaching",{"_index":198,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attachmediastream(elemid",{"_index":881,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attachremotefeed",{"_index":885,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attachremotefeeds(remotefeeds",{"_index":494,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["attachvideoroom(url",{"_index":710,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attribute",{"_index":818,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audio",{"_index":284,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["audio/video",{"_index":293,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["audio_codec",{"_index":238,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["audio_level_average",{"_index":265,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["audioboxcomponent",{"_index":333,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":760,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiodevice",{"_index":110,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["audiodeviceid",{"_index":122,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["audiodevices",{"_index":607,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiodevices.length",{"_index":611,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audioinput",{"_index":144,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["audiooutput",{"_index":148,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["audiorecv",{"_index":855,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiosend",{"_index":727,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiotrack",{"_index":826,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["authentication",{"_index":1060,"title":{},"body":{"index.html":{}}}],["auto",{"_index":1005,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":423,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["available",{"_index":997,"title":{},"body":{"index.html":{}}}],["availableaudiodevices",{"_index":49,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["availablespeakerdevices",{"_index":50,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["availablevideodevices",{"_index":51,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["average",{"_index":257,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["await",{"_index":137,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["back",{"_index":218,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["backend",{"_index":273,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["background",{"_index":258,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["bars",{"_index":794,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["based",{"_index":1032,"title":{},"body":{"index.html":{}}}],["before",{"_index":819,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["believe",{"_index":961,"title":{},"body":{"index.html":{}}}],["below",{"_index":361,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["better",{"_index":405,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["black",{"_index":793,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["body",{"_index":731,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["boolean",{"_index":226,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["bootstrap",{"_index":314,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["box.component",{"_index":336,"title":{},"body":{"modules/JanusModule.html":{}}}],["box/audio",{"_index":335,"title":{},"body":{"modules/JanusModule.html":{}}}],["box/video",{"_index":348,"title":{},"body":{"modules/JanusModule.html":{}}}],["break",{"_index":486,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["broadcast",{"_index":416,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["browse",{"_index":1108,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":584,"title":{},"body":{"injectables/WebrtcService.html":{},"modules.html":{}}}],["bug",{"_index":1085,"title":{},"body":{"index.html":{}}}],["build",{"_index":939,"title":{},"body":{"index.html":{}}}],["builder",{"_index":61,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["building",{"_index":940,"title":{},"body":{"index.html":{}}}],["burden",{"_index":1045,"title":{},"body":{"index.html":{}}}],["button",{"_index":1044,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":1100,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":637,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["called",{"_index":629,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["calling",{"_index":879,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["camera",{"_index":22,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["camera/microphone",{"_index":1027,"title":{},"body":{"index.html":{}}}],["canvas",{"_index":804,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext",{"_index":769,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.canvas.height",{"_index":743,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.canvas.width",{"_index":740,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.drawimage",{"_index":753,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.drawimage(videoelement",{"_index":738,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.fillrect(0",{"_index":750,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.fillstyle",{"_index":748,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.restore",{"_index":754,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.save",{"_index":751,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.translate(centerx",{"_index":752,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement",{"_index":806,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.capturestream",{"_index":809,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.getcontext('2d",{"_index":770,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.height",{"_index":825,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.width",{"_index":824,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasheight",{"_index":787,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasid",{"_index":836,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasstream",{"_index":808,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasstream.addtrack(videostream.getaudiotracks()[0",{"_index":829,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaswidth",{"_index":786,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["case",{"_index":283,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["catch((error",{"_index":867,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["center",{"_index":158,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["centerx",{"_index":739,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["centery",{"_index":742,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["change",{"_index":436,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["changed",{"_index":1035,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":39,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["changedetectionstrategy",{"_index":91,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":40,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["changedetector",{"_index":72,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["changedetectorref",{"_index":60,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["changes",{"_index":33,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["changes[key].firstchange",{"_index":484,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["changing",{"_index":29,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"index.html":{}}}],["chrome",{"_index":817,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["class",{"_index":30,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["clean",{"_index":649,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["cleanup",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanuplocalstream",{"_index":660,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["client",{"_index":976,"title":{},"body":{"index.html":{}}}],["clients",{"_index":938,"title":{},"body":{"index.html":{}}}],["cluster_janusmodule",{"_index":317,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["cluster_janusmodule_declarations",{"_index":319,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["cluster_janusmodule_exports",{"_index":318,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["code",{"_index":977,"title":{},"body":{"index.html":{}}}],["combinelatest",{"_index":445,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["comes",{"_index":217,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["common",{"_index":598,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["commonmodule",{"_index":325,"title":{},"body":{"modules/JanusModule.html":{}}}],["comms",{"_index":503,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["competitive",{"_index":951,"title":{},"body":{"index.html":{}}}],["complete",{"_index":845,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["component",{"_index":0,"title":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["component_template",{"_index":175,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["components/audio",{"_index":334,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/default",{"_index":338,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/self",{"_index":343,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/video",{"_index":347,"title":{},"body":{"modules/JanusModule.html":{}}}],["condition",{"_index":878,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["conditions",{"_index":1034,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":274,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["configure",{"_index":858,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["configured",{"_index":935,"title":{},"body":{"index.html":{}}}],["connect",{"_index":538,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["connection",{"_index":393,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["connections",{"_index":999,"title":{},"body":{"index.html":{}}}],["consent",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consent_dialog",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentdialog(on",{"_index":680,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('error",{"_index":735,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('ice",{"_index":690,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('warning",{"_index":628,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('would",{"_index":900,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["const",{"_index":121,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":600,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["constructor(changedetector",{"_index":59,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["constructor(janusstore",{"_index":379,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["containers/device",{"_index":331,"title":{},"body":{"modules/JanusModule.html":{}}}],["containers/janus",{"_index":328,"title":{},"body":{"modules/JanusModule.html":{}}}],["content",{"_index":157,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["core",{"_index":991,"title":{},"body":{"index.html":{}}}],["create",{"_index":711,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["create/edit/delete",{"_index":1052,"title":{},"body":{"index.html":{}}}],["createoffer",{"_index":848,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["credential",{"_index":307,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["crop",{"_index":798,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["cross",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":204,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["currently",{"_index":74,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["currentsubstream",{"_index":236,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":1038,"title":{},"body":{"index.html":{}}}],["customize",{"_index":1094,"title":{},"body":{"index.html":{}}}],["data",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":635,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["declarations",{"_index":313,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":85,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["defaultvideoroomcomponent",{"_index":337,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":65,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["demo",{"_index":1071,"title":{},"body":{"index.html":{}}}],["demos",{"_index":970,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":312,"title":{"dependencies.html":{}},"body":{"modules/JanusModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":282,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["deploy",{"_index":403,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["deploying",{"_index":363,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["deployment",{"_index":1062,"title":{},"body":{"index.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["desired",{"_index":34,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["destroy",{"_index":105,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["destroyed",{"_index":715,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["detached",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details",{"_index":300,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["determines",{"_index":568,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["developer",{"_index":989,"title":{},"body":{"index.html":{}}}],["developers",{"_index":966,"title":{},"body":{"index.html":{}}}],["device",{"_index":14,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["device.kind",{"_index":143,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["device.label",{"_index":150,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["deviceid",{"_index":601,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["devices",{"_index":55,"title":{"interfaces/Devices.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["devices.filter((device",{"_index":608,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["deviceselectorcomponent",{"_index":1,"title":{"components/DeviceSelectorComponent.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["devicesform",{"_index":52,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["deviceupdate",{"_index":57,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["dialog",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":1020,"title":{},"body":{"index.html":{}}}],["directive",{"_index":173,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["directives",{"_index":179,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["directly",{"_index":395,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["dispatch",{"_index":500,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["display",{"_index":154,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["displayname",{"_index":237,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["div.form",{"_index":152,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["docs",{"_index":304,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["document.createelement('video",{"_index":805,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["document.getelementbyid(canvasid",{"_index":807,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["document.getelementbyid(elemid",{"_index":882,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["documentation",{"_index":969,"title":{},"body":{"index.html":{}}}],["documented",{"_index":1076,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":763,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["doing",{"_index":870,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["don't",{"_index":267,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["done",{"_index":840,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["draw(canvascontext",{"_index":737,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["drawing",{"_index":757,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["drawloopactive",{"_index":624,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["dropping",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":582,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["dynamically",{"_index":28,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"index.html":{}}}],["e.g",{"_index":578,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["each",{"_index":261,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["easily",{"_index":353,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["easy",{"_index":931,"title":{},"body":{"index.html":{}}}],["edit",{"_index":946,"title":{},"body":{"index.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["elementref",{"_index":439,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["elements",{"_index":1056,"title":{},"body":{"index.html":{}}}],["embed",{"_index":354,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["emitremotefeeds(remotefeeds",{"_index":489,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["emits",{"_index":430,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["emitted",{"_index":79,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["enabled",{"_index":936,"title":{},"body":{"index.html":{}}}],["encountered",{"_index":432,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["engineering",{"_index":957,"title":{},"body":{"index.html":{}}}],["enlarged",{"_index":1008,"title":{},"body":{"index.html":{}}}],["entire",{"_index":479,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["enum",{"_index":193,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["enumerations",{"_index":926,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":203,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["error(error",{"_index":678,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["errorcode",{"_index":222,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":431,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["estate",{"_index":1013,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1058,"title":{},"body":{"index.html":{}}}],["event",{"_index":78,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["eventemitter",{"_index":76,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["events",{"_index":277,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["example",{"_index":37,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["exhaustive",{"_index":1049,"title":{},"body":{"index.html":{}}}],["expect",{"_index":705,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["export",{"_index":102,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["exports",{"_index":316,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["factory.each(i",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.sync.makefactory",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback",{"_index":1002,"title":{},"body":{"index.html":{}}}],["false",{"_index":87,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["fatal",{"_index":433,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["features",{"_index":930,"title":{},"body":{"index.html":{}}}],["feed",{"_index":230,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["feed.id",{"_index":892,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feed.state",{"_index":491,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["feed.video_codec",{"_index":891,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feedid",{"_index":903,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feeds",{"_index":496,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["feel",{"_index":1103,"title":{},"body":{"index.html":{}}}],["field",{"_index":964,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["find",{"_index":876,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fire",{"_index":499,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["first",{"_index":440,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["fixing",{"_index":1086,"title":{},"body":{"index.html":{}}}],["flex",{"_index":155,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["following",{"_index":996,"title":{},"body":{"index.html":{}}}],["form",{"_index":16,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["format",{"_index":397,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["formbuilder",{"_index":62,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["framerate",{"_index":756,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels",{"_index":592,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.attach_success",{"_index":677,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.consent_dialog",{"_index":681,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.media_state",{"_index":683,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_cleanup",{"_index":709,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_local_stream",{"_index":702,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_message",{"_index":695,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_cleanup",{"_index":908,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_feed_message",{"_index":897,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_remote_stream",{"_index":907,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_stream",{"_index":707,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.remote_feed_slow_link",{"_index":902,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.remote_feed_webrtc_state",{"_index":899,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.webrtc_state",{"_index":687,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["fully",{"_index":992,"title":{},"body":{"index.html":{}}}],["function",{"_index":773,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["functional",{"_index":993,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":1098,"title":{},"body":{"index.html":{}}}],["functions",{"_index":550,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["future",{"_index":875,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["fuzzy",{"_index":873,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["gateway",{"_index":995,"title":{},"body":{"index.html":{}}}],["getdefaultdevices",{"_index":553,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["getdevices",{"_index":134,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["getting",{"_index":928,"title":{"index.html":{}},"body":{}}],["getusermedia",{"_index":554,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["getusermedia(audiodeviceid",{"_index":560,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["give",{"_index":1096,"title":{},"body":{"index.html":{}}}],["given",{"_index":780,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["gives",{"_index":950,"title":{},"body":{"index.html":{}}}],["goal",{"_index":791,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["good",{"_index":278,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["great",{"_index":971,"title":{},"body":{"index.html":{}}}],["grow",{"_index":163,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["hack",{"_index":765,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle",{"_index":617,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle.createanswer",{"_index":725,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle.send({message",{"_index":733,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handled",{"_index":1021,"title":{},"body":{"index.html":{}}}],["handleremotejsep(jsep",{"_index":721,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handles",{"_index":620,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["happen",{"_index":706,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["height",{"_index":603,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["help",{"_index":965,"title":{},"body":{"index.html":{}}}],["helper",{"_index":549,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["helps",{"_index":945,"title":{},"body":{"index.html":{}}}],["here",{"_index":400,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["high",{"_index":352,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["highly",{"_index":401,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["http",{"_index":998,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":386,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":302,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["https://janus.conf.meetecho.com/docs/videoroom.html|janus",{"_index":452,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["https://janus.conf.meetecho.com/janus",{"_index":388,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["httpurl",{"_index":370,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["i'm",{"_index":869,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["i.tostring",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ice",{"_index":1036,"title":{},"body":{"index.html":{}}}],["iceserver",{"_index":298,"title":{"interfaces/IceServer.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["iceservers",{"_index":371,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["icestate(arg1",{"_index":688,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["id",{"_index":189,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":559,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["iff",{"_index":288,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["ignore",{"_index":281,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["implement",{"_index":986,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":249,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["implements",{"_index":17,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["import",{"_index":89,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["imports",{"_index":349,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{}}}],["improvement",{"_index":963,"title":{},"body":{"index.html":{}}}],["include",{"_index":1059,"title":{},"body":{"index.html":{}}}],["included",{"_index":566,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["includes",{"_index":937,"title":{},"body":{"index.html":{}}}],["incorporates",{"_index":942,"title":{},"body":{"index.html":{}}}],["index",{"_index":46,"title":{"index.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["information",{"_index":212,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["init",{"_index":630,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["init(iceservers",{"_index":625,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["initialize",{"_index":460,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["initialized",{"_index":197,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["initializing",{"_index":196,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["initialstate",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":545,"title":{"injectables/WebrtcService.html":{}},"body":{"injectables/WebrtcService.html":{},"overview.html":{}}}],["injectables",{"_index":546,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["input",{"_index":92,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["input/output",{"_index":382,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["inputs",{"_index":54,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["inputs/outputs",{"_index":1075,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1063,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1065,"title":{},"body":{"index.html":{}}}],["instance",{"_index":670,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["instance._attachvideoroomhelper(subscriber",{"_index":714,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance._createvideoelement(canvasid",{"_index":852,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance._get_random_string",{"_index":699,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.answerremotefeedjsep(jsep",{"_index":898,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.createoffer",{"_index":880,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.draw(canvascontext",{"_index":775,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.drawloopactive",{"_index":768,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handle",{"_index":675,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handle.send({message",{"_index":859,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handleremotejsep(jsep",{"_index":697,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.janus",{"_index":712,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.janus.attach",{"_index":887,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.localstream",{"_index":851,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.opaqueid",{"_index":888,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.publishwebrtcstate",{"_index":686,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id",{"_index":889,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id].send({message",{"_index":896,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id].videocodec",{"_index":890,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.streams[streamid",{"_index":700,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.videoelement",{"_index":853,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.webrtcservice.getusermedia(audiodeviceid",{"_index":850,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["interaction",{"_index":1057,"title":{},"body":{"index.html":{}}}],["interesting",{"_index":943,"title":{},"body":{"index.html":{}}}],["interface",{"_index":184,"title":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["interfaces",{"_index":185,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"overview.html":{}}}],["intermittent",{"_index":868,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["internal",{"_index":132,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["internally",{"_index":1104,"title":{},"body":{"index.html":{}}}],["interval",{"_index":588,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["interval(100).pipe",{"_index":844,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["intimate",{"_index":990,"title":{},"body":{"index.html":{}}}],["iphone",{"_index":570,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ismuted",{"_index":372,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ismuted(muted",{"_index":453,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["isn't",{"_index":266,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["issupporteddevice",{"_index":555,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["it's",{"_index":248,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["item",{"_index":828,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["item.tostring(36",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1050,"title":{},"body":{"index.html":{}}}],["itself",{"_index":1101,"title":{},"body":{"index.html":{}}}],["janus",{"_index":41,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["janus.attachmediastream(element",{"_index":883,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.attachmediastream(videoelement",{"_index":812,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.init",{"_index":634,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.iswebrtcsupported",{"_index":639,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.plugin.videoroom",{"_index":672,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["januserror",{"_index":377,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["januserrors",{"_index":449,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["januserrors[roominfo.errorcode].message",{"_index":519,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusmodule",{"_index":310,"title":{"modules/JanusModule.html":{}},"body":{"modules/JanusModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["janusrole",{"_index":291,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["janusrole.publisher",{"_index":411,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusserverurl",{"_index":458,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusservice",{"_index":613,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janusstore",{"_index":367,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusvideoroomcomponent",{"_index":177,"title":{"components/JanusVideoroomComponent.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":719,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["joined",{"_index":202,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["joining",{"_index":201,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["jsep",{"_index":694,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["jsepbody",{"_index":734,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["justify",{"_index":156,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["keeping",{"_index":789,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["key",{"_index":483,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["know",{"_index":256,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["knowing",{"_index":279,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["knowledge",{"_index":984,"title":{},"body":{"index.html":{}}}],["label",{"_index":165,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["landscape",{"_index":799,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["last",{"_index":289,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["leave",{"_index":643,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["led",{"_index":960,"title":{},"body":{"index.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{}}}],["less",{"_index":968,"title":{},"body":{"index.html":{}}}],["level",{"_index":260,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["library",{"_index":929,"title":{},"body":{"index.html":{}}}],["link",{"_index":301,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":435,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["listdevices",{"_index":556,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["listener",{"_index":297,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["lives",{"_index":1083,"title":{},"body":{"index.html":{}}}],["load",{"_index":462,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["local",{"_index":223,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["localstream",{"_index":622,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["localstreamid",{"_index":224,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["look",{"_index":1102,"title":{},"body":{"index.html":{}}}],["loop",{"_index":758,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["lot",{"_index":981,"title":{},"body":{"index.html":{}}}],["low",{"_index":865,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["majority",{"_index":956,"title":{},"body":{"index.html":{}}}],["make",{"_index":638,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["makes",{"_index":275,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["making",{"_index":1087,"title":{},"body":{"index.html":{}}}],["many",{"_index":357,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["match",{"_index":420,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["matching",{"_index":182,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(2",{"_index":667,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["maximum",{"_index":1010,"title":{},"body":{"index.html":{}}}],["mdn",{"_index":308,"title":{},"body":{"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{}}}],["meaningful",{"_index":251,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["media",{"_index":364,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["media_state",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediastate(medium",{"_index":682,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["medium",{"_index":684,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["message",{"_index":219,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":38,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["methods",{"_index":552,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["microphone",{"_index":23,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["minimal",{"_index":360,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["miscellaneous",{"_index":925,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":959,"title":{},"body":{"index.html":{}}}],["mode",{"_index":797,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["models/janus",{"_index":450,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["models/janus.models",{"_index":101,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["module",{"_index":309,"title":{"modules/JanusModule.html":{}},"body":{"modules/JanusModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":311,"title":{"modules.html":{}},"body":{"modules/JanusModule.html":{},"modules.html":{}}}],["moment",{"_index":190,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"dependencies.html":{},"index.html":{}}}],["moment.moment",{"_index":242,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["momentinstalling",{"_index":1067,"title":{},"body":{"index.html":{}}}],["more",{"_index":299,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["msg",{"_index":696,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["multiple",{"_index":1017,"title":{},"body":{"index.html":{}}}],["mute",{"_index":779,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mute(event",{"_index":781,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["muted",{"_index":225,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["muting",{"_index":1043,"title":{},"body":{"index.html":{}}}],["name",{"_index":69,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":1023,"title":{},"body":{"index.html":{}}}],["navigator.mediadevices.enumeratedevices",{"_index":574,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["navigator.mediadevices.getusermedia(constraints",{"_index":605,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["necessary",{"_index":586,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["need",{"_index":255,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["network",{"_index":1033,"title":{},"body":{"index.html":{}}}],["networks",{"_index":1089,"title":{},"body":{"index.html":{}}}],["never",{"_index":901,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["new",{"_index":103,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":324,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{}}}],["ngonchanges(changes",{"_index":477,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ngondestroy",{"_index":129,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["ngoninit",{"_index":106,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["ngrx/component",{"_index":921,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["noise",{"_index":259,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["non",{"_index":1048,"title":{},"body":{"index.html":{}}}],["none",{"_index":636,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["note",{"_index":244,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["notes",{"_index":286,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["nothing",{"_index":399,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["null",{"_index":510,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":215,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["numeric",{"_index":422,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["numvideotracks",{"_index":234,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(remotefeeds).map(id",{"_index":512,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["observable",{"_index":444,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["of(true",{"_index":632,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["older",{"_index":572,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["on_cleanup",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_data",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_data_open",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_local_stream",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_message",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_cleanup",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_feed_message",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_local_stream",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_remote_stream",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_stream",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":933,"title":{},"body":{"index.html":{}}}],["onchanges",{"_index":366,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["oncleanup",{"_index":708,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ondestroy",{"_index":36,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["one",{"_index":387,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["oninit",{"_index":35,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["onlocalstream(stream",{"_index":698,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onmessage(msg",{"_index":693,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onpublishownfeed(payload",{"_index":539,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["onremotestream(stream",{"_index":704,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onrequestsubstream(payload",{"_index":541,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["opaqueid",{"_index":615,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["open",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operations",{"_index":1053,"title":{},"body":{"index.html":{}}}],["option",{"_index":25,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["optional",{"_index":71,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["options",{"_index":20,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["order",{"_index":250,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["orientation",{"_index":1016,"title":{},"body":{"index.html":{}}}],["oscillator",{"_index":761,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["otherroomid",{"_index":216,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":322,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["output",{"_index":90,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["outputs",{"_index":56,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["outside",{"_index":587,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["overlays",{"_index":1095,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1109,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":916,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":159,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["page",{"_index":1079,"title":{},"body":{"index.html":{}}}],["pain",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":599,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["part",{"_index":944,"title":{},"body":{"index.html":{}}}],["parts",{"_index":1042,"title":{},"body":{"index.html":{}}}],["passed",{"_index":394,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["payload",{"_index":543,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["peer",{"_index":919,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["per",{"_index":501,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["phones",{"_index":580,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["pick",{"_index":1030,"title":{},"body":{"index.html":{}}}],["picking",{"_index":21,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["pin",{"_index":373,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["pin_required",{"_index":410,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["pins",{"_index":1003,"title":{},"body":{"index.html":{}}}],["platform",{"_index":576,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["platforms",{"_index":1088,"title":{},"body":{"index.html":{}}}],["playing",{"_index":820,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["plugin",{"_index":618,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["pluginhandle",{"_index":676,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["portrait",{"_index":796,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["possible",{"_index":227,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["practical",{"_index":247,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["prefer",{"_index":1001,"title":{},"body":{"index.html":{}}}],["private",{"_index":104,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["private_id",{"_index":893,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["privateid",{"_index":214,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":941,"title":{},"body":{"index.html":{}}}],["promise",{"_index":135,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["properly",{"_index":934,"title":{},"body":{"index.html":{}}}],["properties",{"_index":47,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["provided",{"_index":383,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["providedin",{"_index":595,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["providers",{"_index":315,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{}}}],["ptype",{"_index":720,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["public",{"_index":48,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["publish",{"_index":205,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["published",{"_index":886,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["publisher",{"_index":243,"title":{"interfaces/Publisher.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["publisher's",{"_index":268,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["publishers",{"_index":295,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["publishing",{"_index":211,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["publishownfeed",{"_index":835,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["publishownfeedpayload",{"_index":446,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishrequested",{"_index":209,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["publishstate",{"_index":207,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["publishstate.error",{"_index":518,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishstate.publishing",{"_index":516,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishstate.start",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publishwebrtcstate",{"_index":623,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["put",{"_index":1046,"title":{},"body":{"index.html":{}}}],["quality",{"_index":1029,"title":{},"body":{"index.html":{}}}],["querying",{"_index":551,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["race",{"_index":877,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["randomstring",{"_index":593,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["randomstring(16",{"_index":616,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ratios",{"_index":1019,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":327,"title":{},"body":{"modules/JanusModule.html":{}}}],["read",{"_index":1025,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":459,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ready",{"_index":208,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["real",{"_index":1012,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["recommended",{"_index":402,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["recvonly",{"_index":729,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["refer",{"_index":362,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["refresh",{"_index":478,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["register",{"_index":718,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["register(name",{"_index":717,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["release",{"_index":1105,"title":{},"body":{"index.html":{}}}],["reliability",{"_index":406,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remote",{"_index":229,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["remote_feed_slow_link",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remote_feed_webrtc_state",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remotefeed",{"_index":232,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["remotefeedfactory",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remotefeeds",{"_index":457,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"miscellaneous/variables.html":{}}}],["remotefeeds.filter((feed",{"_index":490,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeeds[id",{"_index":513,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeedsarray",{"_index":511,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeedstate",{"_index":231,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["remotefeedstate.initialized",{"_index":497,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"miscellaneous/variables.html":{}}}],["remotefeedstate.ready",{"_index":492,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotehandles",{"_index":619,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["repo",{"_index":1082,"title":{},"body":{"index.html":{}}}],["republish",{"_index":842,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["request",{"_index":644,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["request_substream",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestanimationframe",{"_index":762,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["requestanimationframe(step",{"_index":777,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["requested",{"_index":210,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["requestedsubstream",{"_index":235,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["requestsubstream(feed",{"_index":914,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["required",{"_index":419,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["requires",{"_index":1004,"title":{},"body":{"index.html":{}}}],["requiring",{"_index":988,"title":{},"body":{"index.html":{}}}],["reset",{"_index":321,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["resetkeys",{"_index":482,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["resize",{"_index":1006,"title":{},"body":{"index.html":{}}}],["response",{"_index":736,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["result",{"_index":181,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":183,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retry",{"_index":871,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["retrycount",{"_index":849,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["return",{"_index":456,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":438,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["role",{"_index":292,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["roles",{"_index":290,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["room",{"_index":192,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["room.component",{"_index":341,"title":{},"body":{"modules/JanusModule.html":{}}}],["room.id",{"_index":732,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["room.privateid",{"_index":894,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["room/default",{"_index":340,"title":{},"body":{"modules/JanusModule.html":{}}}],["room/user",{"_index":463,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roomid",{"_index":374,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["roominfo",{"_index":213,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["roominfo.errorcode",{"_index":521,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.muted",{"_index":514,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.publishstate",{"_index":515,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.state",{"_index":525,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfofactory",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roominfostate",{"_index":194,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["roominfostate.attach_failed",{"_index":533,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.attached",{"_index":528,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.initialized",{"_index":526,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.start",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooms",{"_index":1054,"title":{},"body":{"index.html":{}}}],["root",{"_index":596,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["rough",{"_index":1097,"title":{},"body":{"index.html":{}}}],["row",{"_index":153,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["rtcpeerconnection",{"_index":396,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["rxjs",{"_index":97,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["rxjs/operators",{"_index":99,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["same",{"_index":790,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["sample",{"_index":975,"title":{},"body":{"index.html":{}}}],["save",{"_index":904,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["scratch",{"_index":481,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["screen",{"_index":1011,"title":{},"body":{"index.html":{}}}],["see",{"_index":285,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["see/hear",{"_index":294,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["select",{"_index":168,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selected",{"_index":75,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["selector'},{'name",{"_index":176,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["selector.component",{"_index":332,"title":{},"body":{"modules/JanusModule.html":{}}}],["selector.component.html",{"_index":45,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.scss",{"_index":43,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts",{"_index":12,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:36",{"_index":73,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:42",{"_index":77,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:44",{"_index":84,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":81,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:46",{"_index":83,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:47",{"_index":82,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:48",{"_index":88,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:49",{"_index":66,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector/device",{"_index":11,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{}}}],["self",{"_index":816,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["selfvideocomponent",{"_index":342,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":1026,"title":{},"body":{"index.html":{}}}],["server",{"_index":365,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["server(s",{"_index":404,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["server.models",{"_index":451,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["server.models.ts",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servers",{"_index":392,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["service",{"_index":973,"title":{},"body":{"index.html":{}}}],["services/janus.service",{"_index":100,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["session",{"_index":480,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["set",{"_index":271,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["setismuted(muted",{"_index":437,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["setmute(mute",{"_index":913,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["settimeout",{"_index":534,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["settimeout(step",{"_index":776,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["setting",{"_index":577,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["setup",{"_index":270,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["setupjanusroom",{"_index":502,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["shared",{"_index":594,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["sharereplay",{"_index":442,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["sharereplay(1",{"_index":469,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["show",{"_index":18,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"index.html":{}}}],["shown",{"_index":26,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["sides",{"_index":795,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["signalling",{"_index":958,"title":{},"body":{"index.html":{}}}],["simple",{"_index":847,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["simulcast",{"_index":861,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["simulcastmaxbitrates",{"_index":862,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["site",{"_index":1078,"title":{},"body":{"index.html":{}}}],["size",{"_index":1015,"title":{},"body":{"index.html":{}}}],["slow",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slow_link",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slowlink",{"_index":241,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["slowlink(msg",{"_index":692,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["small",{"_index":1081,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":1022,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["solution",{"_index":874,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["someone",{"_index":1093,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["span.flex",{"_index":162,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["speaker",{"_index":24,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["speakerdevice",{"_index":115,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["speakerdeviceid",{"_index":126,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["speakerdevices",{"_index":610,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["speakers",{"_index":151,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["specifications",{"_index":187,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["specified",{"_index":264,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["specify",{"_index":565,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["specifying",{"_index":994,"title":{},"body":{"index.html":{}}}],["spend",{"_index":967,"title":{},"body":{"index.html":{}}}],["spent",{"_index":954,"title":{},"body":{"index.html":{}}}],["spirit",{"_index":1039,"title":{},"body":{"index.html":{}}}],["src/.../index.ts",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.actions.ts",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.factories.ts",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.models.ts",{"_index":927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../janus.reducers.ts",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../random.ts",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/index.ts",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/containers/device",{"_index":10,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["src/lib/containers/index.ts",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/containers/janus",{"_index":350,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["src/lib/factories/janus.factories.ts",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/janus.module.ts",{"_index":323,"title":{},"body":{"modules/JanusModule.html":{}}}],["src/lib/models/janus",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/models/janus.models.ts",{"_index":186,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/services/janus.service.ts",{"_index":547,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:20",{"_index":557,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:31",{"_index":561,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:42",{"_index":573,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:49",{"_index":558,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:66",{"_index":575,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:76",{"_index":567,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/shared/random.ts",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/store/actions/janus.actions.ts",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/store/reducers/janus.reducers.ts",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":195,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["start/stop",{"_index":276,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["startdrawingloop(canvaselement",{"_index":755,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["started",{"_index":359,"title":{"index.html":{}},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["startwith",{"_index":441,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["state",{"_index":191,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["states",{"_index":228,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["status",{"_index":206,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["step",{"_index":774,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stepmilliseconds",{"_index":771,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["still",{"_index":296,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["storage",{"_index":1061,"title":{},"body":{"index.html":{}}}],["store",{"_index":922,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["store/actions/janus.actions",{"_index":447,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["store/janus.store",{"_index":448,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["stream",{"_index":701,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stream.getvideotracks",{"_index":905,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stream.getvideotracks().length",{"_index":906,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stream_id",{"_index":703,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["streamid",{"_index":233,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["streams",{"_index":614,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["string",{"_index":188,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["stun",{"_index":398,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["stun/turn",{"_index":391,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["stun:stun2.l.google.com:19302",{"_index":389,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["style",{"_index":32,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["styleurls",{"_index":42,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["subclassed",{"_index":31,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["subject",{"_index":96,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["subscribe",{"_index":120,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["subscribe(({roominfo",{"_index":508,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["subscriber",{"_index":633,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.complete",{"_index":642,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.error('webrtc",{"_index":640,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.error(error",{"_index":679,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.next",{"_index":641,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.next(true",{"_index":860,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscribers",{"_index":414,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["substream",{"_index":895,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["substreamid",{"_index":542,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["success",{"_index":713,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["success(jsep",{"_index":857,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["success(jsepbody",{"_index":730,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["success(pluginhandle",{"_index":674,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["support",{"_index":1106,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":569,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["supports",{"_index":27,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["supportsspeakerselection",{"_index":53,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["sure",{"_index":220,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["svg",{"_index":1107,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":524,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["switches",{"_index":767,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["switchmap",{"_index":443,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["system",{"_index":269,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["tabs",{"_index":764,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["take",{"_index":1009,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":98,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["takeuntil(this.destroy",{"_index":119,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["takewhile",{"_index":590,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["talking",{"_index":253,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["talking/not",{"_index":252,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["tap",{"_index":589,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["templateurl",{"_index":44,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["that's",{"_index":949,"title":{},"body":{"index.html":{}}}],["themselves",{"_index":982,"title":{},"body":{"index.html":{}}}],["there's",{"_index":962,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1040,"title":{},"body":{"index.html":{}}}],["this._mutevideo(videoelement",{"_index":821,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this._setmuted(muted",{"_index":455,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this._setmuted(this.muted",{"_index":517,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this._sizecanvaselement(videosettings.width",{"_index":822,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.attachremotefeeds(remotefeedsarray",{"_index":522,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.availableaudiodevices",{"_index":141,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.availablespeakerdevices",{"_index":147,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.availablevideodevices",{"_index":145,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.builder.group",{"_index":109,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.changedetector.detectchanges",{"_index":149,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.cleanuplocalstream",{"_index":647,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.createoffer(subscriber",{"_index":846,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.destroy$.complete",{"_index":131,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["this.destroy$.next",{"_index":130,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["this.devices.audiodeviceid",{"_index":111,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devices.speakerdeviceid",{"_index":116,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devices.videodeviceid",{"_index":114,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform",{"_index":108,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform.get('audiodevice').value",{"_index":123,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform.get('speakerdevice').value",{"_index":127,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform.get('videodevice').value",{"_index":125,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform.valuechanges.pipe",{"_index":118,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.deviceupdate.emit(devices",{"_index":128,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.drawloopactive",{"_index":659,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.emitremotefeeds(remotefeedsarray",{"_index":523,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.getdevices",{"_index":117,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.handle",{"_index":645,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.createoffer",{"_index":854,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.handleremotejsep({jsep",{"_index":722,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.isaudiomuted",{"_index":910,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.muteaudio",{"_index":912,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.send",{"_index":834,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.send({message",{"_index":646,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.unmuteaudio",{"_index":911,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.httpurl",{"_index":466,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.iceservers",{"_index":626,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.initialized",{"_index":627,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus",{"_index":652,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus.attach",{"_index":671,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus.destroy({unload",{"_index":648,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.januserror.emit({code",{"_index":520,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusserverurl",{"_index":464,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore",{"_index":476,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.attachremotefeed",{"_index":498,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.attachvideoroom(this.janusserverurl",{"_index":527,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.initialize(this.iceservers",{"_index":504,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.publishownfeed(payload",{"_index":540,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.readyremotefeeds$.pipe",{"_index":468,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.register",{"_index":529,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.remotefeeds$.pipe",{"_index":506,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.requestsubstream({feed",{"_index":544,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.reset(this.iceservers",{"_index":485,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.roominfo$.pipe",{"_index":471,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.setmute(muted",{"_index":488,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.state$.pipe",{"_index":507,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.listdevices",{"_index":606,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.localstream",{"_index":657,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.localstream.gettracks",{"_index":663,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.localstream.removetrack(track",{"_index":665,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.muted",{"_index":454,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.opaqueid",{"_index":673,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.pin",{"_index":509,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.publishers.emit(publishers",{"_index":493,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.publishwebrtcstate",{"_index":658,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotefeeds",{"_index":467,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.remotehandles",{"_index":655,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotehandles[feed.id",{"_index":724,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotehandles[feed.id].send({message",{"_index":915,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.roomid",{"_index":532,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.roominfo",{"_index":470,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.server",{"_index":654,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.setupjanusroom",{"_index":472,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.startdrawingloop(canvaselement",{"_index":830,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.streams",{"_index":653,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.streams[streamid",{"_index":884,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.supportsspeakerselection",{"_index":139,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.unpublishownfeed",{"_index":843,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.userid",{"_index":531,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.username",{"_index":530,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.videoelement",{"_index":656,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.videoelement.remove",{"_index":661,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.webrtc.listdevices",{"_index":138,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.webrtc.supportsspeakerselection",{"_index":140,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.wsurl",{"_index":465,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["those",{"_index":585,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["through",{"_index":358,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["time",{"_index":263,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["times",{"_index":1099,"title":{},"body":{"index.html":{}}}],["tireless",{"_index":1084,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toggle_mute_success",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglemute",{"_index":909,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["touchpoints",{"_index":1092,"title":{},"body":{"index.html":{}}}],["track",{"_index":662,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["track.stop",{"_index":664,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["transmit",{"_index":1028,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["trickle",{"_index":726,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["true",{"_index":287,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["ts",{"_index":473,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["tslib",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":631,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["type",{"_index":70,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1055,"title":{},"body":{"index.html":{}}}],["uint8array(bytes",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unable",{"_index":537,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["understand",{"_index":983,"title":{},"body":{"index.html":{}}}],["understanding",{"_index":972,"title":{},"body":{"index.html":{}}}],["unpublish",{"_index":833,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["unpublishing",{"_index":841,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["unpublishownfeed",{"_index":832,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["until",{"_index":839,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["up",{"_index":650,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["upon",{"_index":1014,"title":{},"body":{"index.html":{}}}],["url",{"_index":385,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["urls",{"_index":305,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["us/docs/web/api/rtciceserver|mdn",{"_index":303,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["use",{"_index":221,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["used",{"_index":651,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["user",{"_index":19,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user's",{"_index":408,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["userid",{"_index":375,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["username",{"_index":306,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["users",{"_index":413,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["using",{"_index":759,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["ux",{"_index":1047,"title":{},"body":{"index.html":{}}}],["validators",{"_index":94,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["validators.required",{"_index":112,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["value",{"_index":86,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["variables",{"_index":461,"title":{"miscellaneous/variables.html":{}},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":548,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["vast",{"_index":955,"title":{},"body":{"index.html":{}}}],["very",{"_index":246,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["video",{"_index":339,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["video.component",{"_index":345,"title":{},"body":{"modules/JanusModule.html":{}}}],["video/self",{"_index":344,"title":{},"body":{"modules/JanusModule.html":{}}}],["video_codec",{"_index":239,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["videoboxcomponent",{"_index":346,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["videodevice",{"_index":113,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["videodeviceid",{"_index":124,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["videodevices",{"_index":609,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement",{"_index":621,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.addeventlistener('playing",{"_index":784,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.autoplay",{"_index":813,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.muted",{"_index":782,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.removeeventlistener('playing",{"_index":783,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.setattribute('id",{"_index":815,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.setattribute('playsinline",{"_index":814,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.videoheight",{"_index":747,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.videowidth",{"_index":745,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoheight",{"_index":746,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoinput",{"_index":146,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["videorecv",{"_index":856,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoroom",{"_index":178,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["videoroom.component",{"_index":330,"title":{},"body":{"modules/JanusModule.html":{}}}],["videoroom.component.html",{"_index":369,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.scss",{"_index":368,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts",{"_index":351,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:104",{"_index":421,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:110",{"_index":381,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:119",{"_index":390,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:125",{"_index":407,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:139",{"_index":429,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:145",{"_index":434,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:154",{"_index":380,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:60",{"_index":418,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:68",{"_index":426,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:76",{"_index":384,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:82",{"_index":409,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:88",{"_index":425,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:97",{"_index":412,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom/janus",{"_index":329,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{}}}],["videorooms",{"_index":948,"title":{},"body":{"index.html":{}}}],["videoroomstate",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["videos",{"_index":1007,"title":{},"body":{"index.html":{}}}],["videosend",{"_index":728,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings",{"_index":810,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings.framerate",{"_index":831,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings.height",{"_index":823,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream",{"_index":803,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream.getaudiotracks().find((item",{"_index":827,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream.getvideotracks()[0].getsettings",{"_index":811,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videowidth",{"_index":744,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["view",{"_index":947,"title":{},"body":{"index.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["volume",{"_index":240,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["volume/mute",{"_index":245,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["wait",{"_index":838,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["want",{"_index":280,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["warm",{"_index":872,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["way",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["we're",{"_index":788,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["webapp",{"_index":356,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["webapps",{"_index":1051,"title":{},"body":{"index.html":{}}}],["webrtc",{"_index":63,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["webrtc_state",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webrtcservice",{"_index":64,"title":{"injectables/WebrtcService.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["webrtcstate(on",{"_index":685,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["websocket",{"_index":427,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["well",{"_index":1041,"title":{},"body":{"index.html":{}}}],["whenever",{"_index":80,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["width",{"_index":166,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["window.crypto.getrandomvalues(array",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.cypress",{"_index":474,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["window.janusstore",{"_index":475,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["window.location.reload",{"_index":716,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["wish",{"_index":1069,"title":{},"body":{"index.html":{}}}],["within",{"_index":583,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["without",{"_index":987,"title":{},"body":{"index.html":{}}}],["won't",{"_index":415,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["work",{"_index":766,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["working",{"_index":953,"title":{},"body":{"index.html":{}}}],["works",{"_index":974,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":562,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["wrappers",{"_index":597,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["write",{"_index":980,"title":{},"body":{"index.html":{}}}],["written",{"_index":1080,"title":{},"body":{"index.html":{}}}],["wss://janus.conf.meetecho.com/ws",{"_index":428,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["wsurl",{"_index":376,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["yarn",{"_index":1066,"title":{},"body":{"index.html":{}}}],["you'll",{"_index":254,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["yourappmodule",{"_index":1070,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":320,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/DeviceSelectorComponent.html":{"url":"components/DeviceSelectorComponent.html","title":"component - DeviceSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DeviceSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/containers/device-selector/device-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Device selector form. Implements a form that will show the user options for picking their camera,\nmicrophone, and speaker device. The speaker option is only shown if the device supports dynamically\nchanging the speaker. This class can be subclassed if style changes are desired.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                janus-device-selector\n            \n\n            \n                styleUrls\n                ./device-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./device-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableAudioDevices\n                            \n                            \n                                    Public\n                                availableSpeakerDevices\n                            \n                            \n                                    Public\n                                availableVideoDevices\n                            \n                            \n                                    Public\n                                devicesForm\n                            \n                            \n                                    Public\n                                supportsSpeakerSelection\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                devices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deviceUpdate\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef, builder: FormBuilder, webrtc: WebrtcService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/containers/device-selector/device-selector.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webrtc\n                                                  \n                                                        \n                                                                        WebrtcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        devices\n                    \n                \n                \n                    \n                        Type :         Devices\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:36\n                            \n                        \n                \n                    \n                        Currently selected devices\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deviceUpdate\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:42\n                            \n                        \n                \n                    \n                        Event emitted whenever the user changes the devices in the form\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableAudioDevices\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableSpeakerDevices\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableVideoDevices\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devicesForm\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportsSpeakerSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, EventEmitter, OnDestroy, OnInit, Output, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { WebrtcService } from '../../services/janus.service';\nimport { Devices } from '../../models/janus.models';\n\n\n/**\n * Device selector form. Implements a form that will show the user options for picking their camera,\n * microphone, and speaker device. The speaker option is only shown if the device supports dynamically\n * changing the speaker. This class can be subclassed if style changes are desired.\n * @example\n * \n * \n */\n@Component({\n  selector: 'janus-device-selector',\n  templateUrl: './device-selector.component.html',\n  styleUrls: [\n    './device-selector.component.scss',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeviceSelectorComponent implements OnInit, OnDestroy {\n\n  /**\n   * Currently selected devices\n   */\n  @Input()\n  devices: Devices;\n\n  /**\n   * Event emitted whenever the user changes the devices in the form\n   */\n  @Output()\n  deviceUpdate = new EventEmitter();\n\n  public devicesForm;\n  public availableAudioDevices;\n  public availableVideoDevices;\n  public availableSpeakerDevices;\n  public supportsSpeakerSelection = false;\n  private destroy$ = new Subject();\n\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private builder: FormBuilder,\n    private webrtc: WebrtcService,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.devicesForm = this.builder.group({\n      audioDevice: [this.devices.audioDeviceId, [Validators.required]],\n      videoDevice: [this.devices.videoDeviceId, [Validators.required]],\n      speakerDevice: [this.devices.speakerDeviceId, [Validators.required]],\n    });\n    this.getDevices();\n\n    this.devicesForm.valueChanges.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      const devices = {\n        audioDeviceId: this.devicesForm.get('audioDevice').value,\n        videoDeviceId: this.devicesForm.get('videoDevice').value,\n        speakerDeviceId: this.devicesForm.get('speakerDevice').value,\n      };\n      this.deviceUpdate.emit(devices);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /** @internal */\n  async getDevices(): Promise {\n    const allDevices = await this.webrtc.listDevices();\n    this.supportsSpeakerSelection = this.webrtc.supportsSpeakerSelection();\n    this.availableAudioDevices = allDevices.filter((device) => device.kind === 'audioinput');\n    this.availableVideoDevices = allDevices.filter((device) => device.kind === 'videoinput');\n    this.availableSpeakerDevices = allDevices.filter((device) => device.kind === 'audiooutput');\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n    \n        \n    \n      Microphone\n      \n      \n        {{ device.label }}\n      \n    \n\n    \n      Camera\n      \n      \n        {{ device.label }}\n      \n    \n\n    \n      Speakers\n      \n      \n        {{ device.label }}\n      \n    \n\n\n    \n\n    \n                \n                    ./device-selector.component.scss\n                \n                div.form-row {\n    display: flex;\n    justify-content: center;\n    padding: 5px 0;\n\n    span.flex {\n        flex-grow: 1;\n    }\n\n    label {\n        width: 30%;\n    }\n\n    select {\n        width: 60%;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Microphone                    {{ device.label }}                    Camera                    {{ device.label }}                    Speakers                    {{ device.label }}          '\n    var COMPONENTS = [{'name': 'DeviceSelectorComponent', 'selector': 'janus-device-selector'},{'name': 'JanusVideoroomComponent', 'selector': 'janus-videoroom'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Devices.html":{"url":"interfaces/Devices.html","title":"interface - Devices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Devices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                Device specifications\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        audioDeviceId\n                                \n                                \n                                        speakerDeviceId\n                                \n                                \n                                        videoDeviceId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audioDeviceId\n                                    \n                                \n                                \n                                    \n                                        audioDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Microphone Device ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speakerDeviceId\n                                    \n                                \n                                \n                                    \n                                        speakerDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Speaker Device ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoDeviceId\n                                    \n                                \n                                \n                                    \n                                        videoDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Camera Device ID \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IceServer.html":{"url":"interfaces/IceServer.html","title":"interface - IceServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IceServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                IceServer configuration. More details are in the MDN Docs\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        credential\n                                \n                                \n                                        urls\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credential\n                                    \n                                \n                                \n                                    \n                                        credential:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urls\n                                    \n                                \n                                \n                                    \n                                        urls:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JanusModule.html":{"url":"modules/JanusModule.html","title":"module - JanusModule","body":"\n                   \n\n\n\n\n    Modules\n    JanusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JanusModule\n\n\n\ncluster_JanusModule_exports\n\n\n\ncluster_JanusModule_declarations\n\n\n\n\nDeviceSelectorComponent\n\nDeviceSelectorComponent\n\n\n\nJanusModule\n\nJanusModule\n\nJanusModule -->\n\nDeviceSelectorComponent->JanusModule\n\n\n\n\n\nJanusVideoroomComponent\n\nJanusVideoroomComponent\n\nJanusModule -->\n\nJanusVideoroomComponent->JanusModule\n\n\n\n\n\nDeviceSelectorComponent \n\nDeviceSelectorComponent \n\nDeviceSelectorComponent  -->\n\nJanusModule->DeviceSelectorComponent \n\n\n\n\n\nJanusVideoroomComponent \n\nJanusVideoroomComponent \n\nJanusVideoroomComponent  -->\n\nJanusModule->JanusVideoroomComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/janus.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DeviceSelectorComponent\n                        \n                        \n                            JanusVideoroomComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DeviceSelectorComponent\n                        \n                        \n                            JanusVideoroomComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { JanusVideoroomComponent } from './containers/janus-videoroom/janus-videoroom.component';\nimport { DeviceSelectorComponent } from './containers/device-selector/device-selector.component';\nimport { AudioBoxComponent } from './components/audio-box/audio-box.component';\nimport { DefaultVideoRoomComponent } from './components/default-video-room/default-video-room.component';\nimport { SelfVideoComponent } from './components/self-video/self-video.component';\nimport { VideoBoxComponent } from './components/video-box/video-box.component';\n\n\n@NgModule({\n  declarations: [\n    JanusVideoroomComponent,\n    DeviceSelectorComponent,\n    AudioBoxComponent,\n    DefaultVideoRoomComponent,\n    SelfVideoComponent,\n    VideoBoxComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n  ],\n  exports: [\n    JanusVideoroomComponent,\n    DeviceSelectorComponent,\n  ]\n})\nexport class JanusModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JanusVideoroomComponent.html":{"url":"components/JanusVideoroomComponent.html","title":"component - JanusVideoroomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JanusVideoroomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/containers/janus-videoroom/janus-videoroom.component.ts\n\n\n    \n        Description\n    \n    \n        Janus videoroom component. This is a high level component to easily embed a janus videoroom in any angular webapp.\nThere are many options that can be set through Inputs. However, you can get started with the minimal example below.\nRefer to the Janus Videoroom Docs for deploying your own\nJanus media server.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            JanusStore\n                \n            \n\n\n            \n                selector\n                janus-videoroom\n            \n\n            \n                styleUrls\n                ./janus-videoroom.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./janus-videoroom.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                devices\n                            \n                            \n                                httpUrl\n                            \n                            \n                                iceServers\n                            \n                            \n                                isMuted\n                            \n                            \n                                pin\n                            \n                            \n                                role\n                            \n                            \n                                roomId\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                wsUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                janusError\n                            \n                            \n                                publishers\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isMuted\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(janusStore: JanusStore)\n                    \n                \n                        \n                            \n                                Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:154\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        janusStore\n                                                  \n                                                        \n                                                                    JanusStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        devices\n                    \n                \n                \n                    \n                        Type :         Devices\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:110\n                            \n                        \n                \n                    \n                        Input/output devices to use. If not provided, will use the default system devices\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        httpUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:76\n                            \n                        \n                \n                    \n                        URL for the http(s) interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\nExample: https://janus.conf.meetecho.com/janus\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        iceServers\n                    \n                \n                \n                    \n                        Type :         IceServer[]\n\n                    \n                \n                \n                    \n                        Default value : [{urls: 'stun:stun2.l.google.com:19302'}]\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:119\n                            \n                        \n                \n                    \n                        STUN/TURN servers to use for the connection. These are passed directly to RTCPeerConnection\nRefer to the MDN Docs for details on the format.\nThe component will use a public STUN server if nothing is specified here. However, it's highly recommended that the user\ndeploy and use their own STUN/TURN server(s) for better reliability.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isMuted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:125\n                            \n                        \n                \n                    \n                        When set to true, the user's audio is muted.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pin\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:82\n                            \n                        \n                \n                    \n                        PIN for joining room. Must be specified if pin_required is true for the requested roomId.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n                \n                    \n                        Type :         JanusRole\n\n                    \n                \n                \n                    \n                        Default value : JanusRole.publisher\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:97\n                            \n                        \n                \n                    \n                        Role for the user in the videoroom.\nUsers can either be publishers or subscribers. Publishers will publish their video and audio to the room.\nSubscribers will see/hear all publishers, but won't broadcast anything.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        roomId\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:60\n                            \n                        \n                \n                    \n                        Required Janus room id. Can be either a string or a number. This must match server configuration.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:104\n                            \n                        \n                \n                    \n                        Numeric or string Id of publisher. Type must match server configuration. If not provided,\njanus server will automatically assign an ID to the user.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n                \n                    \n                        Default value : 'janus user'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:88\n                            \n                        \n                \n                    \n                        Display name for the user in the videoroom\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        wsUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:68\n                            \n                        \n                \n                    \n                        URL for the websocket interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\nExample: wss://janus.conf.meetecho.com/ws\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        janusError\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:139\n                            \n                        \n                \n                    \n                        Emits errors encountered. These errors are fatal.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        publishers\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:145\n                            \n                        \n                \n                    \n                        Emits list of current publishers whenever there is a change to the publisher list\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isMuted\n                    \n                \n\n\n                \n                    \n                        setisMuted(muted: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:125\n                                \n                            \n                    \n                        \n                                When set to true, the user's audio is muted.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            muted\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import * as moment from 'moment';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { first, startWith, shareReplay, takeUntil, switchMap } from 'rxjs/operators';\nimport { Observable, Subject, combineLatest } from 'rxjs';\n\nimport {\n  Devices,\n  JanusRole,\n  PublishState,\n  Publisher,\n  RemoteFeed,\n  RemoteFeedState,\n  RoomInfo,\n  RoomInfoState,\n  IceServer,\n} from '../../models/janus.models';\n\nimport { PublishOwnFeedPayload } from '../../store/actions/janus.actions';\nimport { JanusStore } from '../../store/janus.store';\nimport { JanusErrors } from '../../models/janus-server.models';\n\n/**\n * Janus videoroom component. This is a high level component to easily embed a janus videoroom in any angular webapp.\n * There are many options that can be set through Inputs. However, you can get started with the minimal example below.\n * Refer to the {@link https://janus.conf.meetecho.com/docs/videoroom.html|Janus Videoroom Docs} for deploying your own\n * Janus media server.\n * @example\n * \n * \n *\n */\n@Component({\n  selector: 'janus-videoroom',\n  templateUrl: './janus-videoroom.component.html',\n  styleUrls: ['./janus-videoroom.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [JanusStore],\n})\nexport class JanusVideoroomComponent implements OnInit, OnDestroy, OnChanges {\n\n  /**\n   * *Required* Janus room id. Can be either a string or a number. This must match server configuration.\n   */\n  @Input()\n  roomId: string | number;\n\n  /**\n   * URL for the websocket interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\n   *\n   * Example: `wss://janus.conf.meetecho.com/ws`\n   */\n  @Input()\n  wsUrl: string;\n\n  /**\n   * URL for the http(s) interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\n   *\n   * Example: `https://janus.conf.meetecho.com/janus`\n   */\n  @Input()\n  httpUrl: string;\n\n  /**\n   * PIN for joining room. Must be specified if `pin_required` is true for the requested roomId.\n   */\n  @Input()\n  pin?: string;\n\n  /**\n   * Display name for the user in the videoroom\n   */\n  @Input()\n  userName = 'janus user';\n\n  /**\n   * Role for the user in the videoroom.\n   *\n   * Users can either be publishers or subscribers. Publishers will publish their video and audio to the room.\n   * Subscribers will see/hear all publishers, but won't broadcast anything.\n   */\n  @Input()\n  role: JanusRole = JanusRole.publisher;\n\n  /**\n   * Numeric or string Id of publisher. Type must match server configuration. If not provided,\n   * janus server will automatically assign an ID to the user.\n   */\n  @Input()\n  userId?: string;\n\n  /**\n   * Input/output devices to use. If not provided, will use the default system devices\n   */\n  @Input()\n  devices?: Devices;\n\n  /**\n   * STUN/TURN servers to use for the connection. These are passed directly to `RTCPeerConnection`\n   * Refer to the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs} for details on the format.\n   * The component will use a public STUN server if nothing is specified here. However, it's highly recommended that the user\n   * deploy and use their own STUN/TURN server(s) for better reliability.\n   */\n  @Input()\n  iceServers: IceServer[] = [{urls: 'stun:stun2.l.google.com:19302'}];\n\n  /**\n   * When set to true, the user's audio is muted.\n   */\n  @Input()\n  set isMuted(muted: boolean) {\n    this.muted = muted;\n    this._setMuted(muted);\n  }\n\n  /**\n   * @ignore\n   */\n  get isMuted(): boolean { return this.muted; }\n\n  /**\n   * Emits errors encountered. These errors are fatal.\n   */\n  @Output()\n  janusError = new EventEmitter();\n\n  /**\n   * Emits list of current publishers whenever there is a change to the publisher list\n   */\n  @Output()\n  publishers = new EventEmitter();\n\n  /** @internal */\n  roomInfo$: Observable;\n  /** @internal */\n  remoteFeeds$: Observable;\n\n  private muted = false;\n  private destroy$ = new Subject();\n  private janusServerUrl: string;\n\n  constructor(\n    private readonly janusStore: JanusStore\n  ) { }\n\n  ngOnInit(): void {\n    // Initialize variables and load the room/user\n\n    this.janusServerUrl = this.wsUrl ? this.wsUrl : this.httpUrl;\n\n    this.remoteFeeds$ = this.janusStore.readyRemoteFeeds$.pipe(\n      shareReplay(1),\n    );\n\n    this.roomInfo$ = this.janusStore.roomInfo$.pipe(\n      shareReplay(1)\n    );\n\n    this.setupJanusRoom();\n\n    // @ts-ignore\n    if (window.Cypress) {\n      // @ts-ignore\n      window.janusStore = this.janusStore;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges(changes): void {\n    // For some changes, we refresh the entire session from scratch\n\n    const resetKeys = [\n      'roomId',\n      'wsUrl',\n      'httpUrl',\n      'iceServers',\n      'pin',\n      'role',\n      'userName',\n      'userId',\n    ];\n\n    for (const key of resetKeys) {\n      if (\n        key in changes\n        && !changes[key].firstChange\n      ) {\n        this.janusServerUrl = this.wsUrl ? this.wsUrl : this.httpUrl;\n        this.janusStore.reset(this.iceServers);\n        break;\n      }\n    }\n  }\n\n  /** @internal */\n  _setMuted(muted: boolean): void {\n    this.janusStore.setMute(muted);\n  }\n\n  /** @internal */\n  emitRemoteFeeds(remoteFeeds: RemoteFeed[]): void {\n    const publishers: Publisher[] = remoteFeeds.filter((feed) => feed.state === RemoteFeedState.ready);\n    this.publishers.emit(publishers);\n  }\n\n  /** @internal */\n  attachRemoteFeeds(remoteFeeds: RemoteFeed[], roomInfo: RoomInfo, pin: string): void {\n    // Attach remote feeds\n\n    for (const feed of remoteFeeds) {\n      if (feed.state === RemoteFeedState.initialized) {\n\n        this.janusStore.attachRemoteFeed({\n          roomInfo,\n          feed,\n          pin,\n        });\n        // Only fire one dispatch per subscribe\n        break;\n      }\n    }\n  }\n\n  /** @internal */\n  setupJanusRoom(): void {\n    // Setup comms with janus server\n\n    this.janusStore.initialize(this.iceServers);\n\n    const allRemoteFeeds$: Observable = this.janusStore.remoteFeeds$.pipe(\n      startWith([])\n    );\n    this.janusStore.state$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(({roomInfo, remoteFeeds}) => {\n\n      const pin = this.pin ? this.pin : null;\n      const remoteFeedsArray = Object.keys(remoteFeeds).map(id => remoteFeeds[id]);\n      if (roomInfo.muted !== this.muted && roomInfo.publishState === PublishState.publishing) {\n        this._setMuted(this.muted);\n      }\n      if (roomInfo.publishState === PublishState.error) {\n        const message = JanusErrors[roomInfo.errorCode].message;\n        this.janusError.emit({code: roomInfo.errorCode, message});\n      }\n\n      this.attachRemoteFeeds(remoteFeedsArray, roomInfo, pin);\n      this.emitRemoteFeeds(remoteFeedsArray);\n\n      switch (roomInfo.state) {\n        case RoomInfoState.initialized: {\n          this.janusStore.attachVideoRoom(this.janusServerUrl);\n          break;\n        }\n        case RoomInfoState.attached: {\n          this.janusStore.register({\n            name: this.userName,\n            userId: this.userId,\n            roomId: this.roomId,\n            pin,\n          });\n          break;\n        }\n        case RoomInfoState.attach_failed: {\n          if (this.janusServerUrl !== this.httpUrl) {\n            this.janusServerUrl = this.httpUrl;\n            setTimeout(() => {\n              this.janusStore.attachVideoRoom(this.janusServerUrl);\n            }, 100);\n          } else {\n            this.janusError.emit({code: 9999, message: 'Unable to connect to media server'});\n          }\n          break;\n        }\n      }\n    });\n  }\n\n  /** @internal */\n  onPublishOwnFeed(payload: PublishOwnFeedPayload): void {\n    this.janusStore.publishOwnFeed(payload);\n  }\n\n  /** @internal */\n  onRequestSubstream(payload: {feed: RemoteFeed, substreamId: number}): void {\n    const {feed, substreamId} = payload;\n    this.janusStore.requestSubstream({feed, substreamId});\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./janus-videoroom.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DeviceSelectorComponent', 'selector': 'janus-device-selector'},{'name': 'JanusVideoroomComponent', 'selector': 'janus-videoroom'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JanusVideoroomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Publisher.html":{"url":"interfaces/Publisher.html","title":"interface - Publisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Publisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                Information for a publisher. Note that the volume/mute information is not\nvery practical in how it's implemented in janus currently. In order to get\nmeaningful information about talking/not talking, you'll need to know the\naverage background noise level of each publisher ahead of time. This is\nspecified at audio_level_average in the room. This isn't practical if you\ndon't know the publisher's system setup ahead of time. We set the\naudio_level_average to 127 in the backend configuration. That makes the\nstart/stop talking events good for knowing if the remote user has muted.\nYou might want to ignore this information depending on your use case.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        id\n                                \n                                \n                                        muted\n                                \n                                \n                                        volume\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display name of the publisher \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Janus ID of the publisher \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                    \n                                \n                                \n                                    \n                                        muted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set to true iff the last volume event had the volume at 127 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        volume\n                                    \n                                \n                                \n                                    \n                                        volume:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current volume of the publisher's audio. See notes in the interface description.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebrtcService.html":{"url":"injectables/WebrtcService.html","title":"injectable - WebrtcService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebrtcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/janus.service.ts\n        \n\n            \n                Description\n            \n            \n                Various helper functions for querying devices\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDefaultDevices\n                            \n                            \n                                getUserMedia\n                            \n                            \n                                isSupportedDevice\n                            \n                            \n                                listDevices\n                            \n                            \n                                supportsSpeakerSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/janus.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getDefaultDevices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:49\n                \n            \n\n\n            \n                \n                    Returns the device IDs for the default audio, video, and speaker device\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserMedia\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserMedia(audioDeviceId: string | null, videoDeviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:31\n                \n            \n\n\n            \n                \n                    Wrapper around getUserMedia that allows the user to specify the audio and video device ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    audioDeviceId\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Device ID of the desired audio device. If null, audio will not be included\n\n                                    \n                                \n                                \n                                    videoDeviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Device ID of the desired video device.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupportedDevice\n                        \n                        \n                    \n                \n            \n            \n                \nisSupportedDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:76\n                \n            \n\n\n            \n                \n                    Determines if the current device is supported. Currently, iPhone 6 and older are not supported.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listDevices\n                        \n                        \n                    \n                \n            \n            \n                \nlistDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:42\n                \n            \n\n\n            \n                \n                    Wrapper around navigator.mediaDevices.enumerateDevices\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supportsSpeakerSelection\n                        \n                        \n                    \n                \n            \n            \n                \nsupportsSpeakerSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:66\n                \n            \n\n\n            \n                \n                    Determines if the current platform supports setting the speaker. Some devices, e.g., most android\nphones, do not allow the dynamic setting of the speaker from within the browser. For those devices,\nit's necessary to change the output device outside of the browser.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable, of, interval } from 'rxjs';\nimport { tap, takeWhile } from 'rxjs/operators';\n\nimport Janus from '../3rdparty/janus.es';\n\nimport * as fromModels from '../models/janus-server.models';\nimport { RemoteFeed, RoomInfo, IceServer } from '../models/janus.models';\n\n\nimport { randomString } from '../shared';\n\n/**\n * Various helper functions for querying devices\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebrtcService {\n  // Wrappers around some common webrtc functions\n\n  constructor() { }\n\n  /**\n   * Wrapper around getUserMedia that allows the user to specify the audio and video device ids\n   *\n   * @param audioDeviceId Device ID of the desired audio device. If null, audio will not be included\n   * @param videoDeviceId Device ID of the desired video device.\n   */\n  getUserMedia(audioDeviceId: string | null, videoDeviceId: string): Promise {\n    const constraints = {\n      audio: audioDeviceId !== null ? {deviceId: audioDeviceId} : false,\n      video: {deviceId: videoDeviceId, width: 1920, height: 1080},\n    };\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  /**\n   * Wrapper around `navigator.mediaDevices.enumerateDevices`\n   */\n  listDevices(): Promise {\n    return navigator.mediaDevices.enumerateDevices();\n  }\n\n  /**\n   * Returns the device IDs for the default audio, video, and speaker device\n   */\n  async getDefaultDevices(): Promise {\n    const devices = await this.listDevices();\n    const audioDevices = devices.filter((device) => device.kind === 'audioinput');\n    const videoDevices = devices.filter((device) => device.kind === 'videoinput');\n    const speakerDevices = devices.filter((device) => device.kind === 'audiooutput');\n    const audioDeviceId = audioDevices.length = 13;\n  }\n}\n\n/** @internal */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JanusService {\n  private streams = {};\n  private initialized = false;\n  private janus: any;\n  private server: string;\n  private opaqueId: string = randomString(16);\n  public handle;   // Handle to the videoroom plugin\n  private remoteHandles: { [id: number]: any } = {};   // Handles to remote streams\n\n  private videoElement: any;\n  private localStream: any;\n  private publishWebrtcState = false;\n\n  private drawLoopActive: boolean;\n  private iceServers: {urls: string}[];\n\n  constructor(\n    private webrtcService: WebrtcService,\n  ) {}\n\n  init(iceServers: IceServer[]): Observable {\n    // Initialize Janus\n    this.iceServers = iceServers;\n\n    if (this.initialized) {\n      console.log('Warning: called janus init twice');\n      return of(true);\n    }\n\n    return new Observable(\n      subscriber => {\n        Janus.init({\n          debug: 'none',\n          callback(): void {\n            // Make sure the browser supports WebRTC\n            if (!Janus.isWebrtcSupported()) {\n              subscriber.error('WebRTC is not supported');\n            }\n            subscriber.next();\n            subscriber.complete();\n          }\n        });\n      }\n    );\n  }\n\n  destroy(): void {\n    const leave = { request: 'leave' };\n\n    if (this.handle) {\n      this.handle.send({message: leave});\n    }\n    this.cleanupLocalStream();\n    this.janus.destroy({unload: true});\n\n    // Clean up all variables used\n    this.janus = null;\n    this.handle = null;\n    this.streams = {};\n    this.initialized = false;\n    this.janus = null;\n    this.server = null;\n    this.handle = null;\n    this.remoteHandles = {};\n    this.videoElement = null;\n    this.localStream = null;\n    this.publishWebrtcState = false;\n    this.drawLoopActive = null;\n    this.iceServers = [];\n  }\n\n  cleanupLocalStream(): void {\n    if (this.videoElement) {\n      this.videoElement.remove();\n    }\n    if (this.localStream) {\n      for (const track of this.localStream.getTracks()) {\n        track.stop();\n        this.localStream.removeTrack(track);\n      }\n    }\n    this.drawLoopActive = false;\n  }\n\n  _get_random_string(): string {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  }\n\n  _attachVideoRoomHelper(subscriber): void {\n    const instance = this;\n    this.janus.attach({\n      plugin: 'janus.plugin.videoroom',\n      opaqueId: this.opaqueId,\n      success(pluginHandle): void {\n        instance.handle = pluginHandle;\n        subscriber.next({\n          message: fromModels.ATTACH_SUCCESS\n        });\n      },\n      error(error): void {\n        subscriber.error(error);\n      },\n      consentDialog(on): void {\n        subscriber.next({\n          message: fromModels.CONSENT_DIALOG,\n          payload: {on},\n        });\n      },\n      mediaState(medium, on): void {\n        subscriber.next({\n          message: fromModels.MEDIA_STATE,\n          payload: {medium, on},\n        });\n      },\n      webrtcState(on): void {\n        instance.publishWebrtcState = on;\n        subscriber.next({\n          message: fromModels.WEBRTC_STATE,\n          payload: {on},\n        });\n      },\n      iceState(arg1, arg2): void {\n        // console.log('ICE STATE', arg1, arg2);\n      },\n      slowLink(msg): void {\n      },\n      onmessage(msg, jsep): void {\n        subscriber.next({\n          message: fromModels.ON_MESSAGE,\n          payload: {msg, jsep},\n        });\n        if (!!jsep) {\n          instance.handleRemoteJsep(jsep);\n        }\n      },\n      onlocalstream(stream): void {\n        const streamId = instance._get_random_string();\n        instance.streams[streamId] = stream;\n        subscriber.next({\n          message: fromModels.ON_LOCAL_STREAM,\n          payload: {stream_id: streamId},\n        });\n      },\n      onremotestream(stream): void {\n        // Don't expect this to ever happen\n        subscriber.next({\n          message: fromModels.ON_REMOTE_STREAM,\n          payload: {stream},\n        });\n      },\n      oncleanup(): void {\n        subscriber.next({\n          message: fromModels.ON_CLEANUP,\n        });\n      }\n    });\n  }\n\n  attachVideoRoom(url): Observable {\n    // Create session\n    const instance = this;\n    return new Observable(\n      subscriber => {\n        instance.janus = new Janus({\n          server: url,\n          iceServers: this.iceServers,\n          success: () => {\n            instance._attachVideoRoomHelper(subscriber);\n          },\n          error(error): void {\n            subscriber.error(error);\n          },\n          destroyed(): void {\n            // window.location.reload();\n          }\n        });\n      }\n    );\n  }\n\n  register(name: string, userId: string, roomId: string | number, pin: string): void {\n    const register = {\n      request: 'join',\n      room: roomId,\n      ptype: 'publisher',\n      display: name,\n      id: userId,\n      pin,\n    };\n    this.handle.send({message: register});\n  }\n\n  handleRemoteJsep(jsep): void {\n    this.handle.handleRemoteJsep({jsep});\n  }\n\n  answerRemoteFeedJsep(jsep, feed: RemoteFeed, room: RoomInfo): void {\n    // Handle a jsep message for a remote feed\n\n    const handle = this.remoteHandles[feed.id];\n    handle.createAnswer({\n      jsep,\n      trickle: true,\n      media: { audioSend: false, videoSend: false },  // We want recvonly audio/video\n      success(jsepBody): void {\n        const body = { request: 'start', room: room.id };\n        handle.send({message: body, jsep: jsepBody});\n      },\n      error(error): void {\n        console.log('ERROR in JSEP RESPONSE');\n      }\n    });\n  }\n\n  draw(canvasContext, videoElement): void {\n    canvasContext.drawImage(videoElement, 0, 0);\n    const centerX = canvasContext.canvas.width / 2;\n    const centerY = canvasContext.canvas.height / 2;\n    const videoWidth = videoElement.videoWidth;\n    const videoHeight = videoElement.videoHeight;\n\n    canvasContext.fillStyle = '#000';\n    canvasContext.fillRect(0, 0, canvasContext.canvas.width, canvasContext.canvas.height);\n\n    canvasContext.save();\n    canvasContext.translate(centerX, centerY);\n    canvasContext.drawImage(\n      videoElement,\n      -videoWidth / 2,\n      -videoHeight / 2,\n      videoWidth,\n      videoHeight,\n    );\n    canvasContext.restore();\n  }\n\n  startDrawingLoop(canvasElement, videoElement, frameRate: number): void {\n    // Drawing loop using AudioContext oscillator. requestAnimationFrame doesn't fire\n    // on background tabs, so this is a hack to make this work when the user switches tabs\n\n    const instance = this;\n    instance.drawLoopActive = true;\n    const canvasContext = canvasElement.getContext('2d');\n\n    const stepMilliSeconds = 1000 / frameRate;\n\n    function step(): void {\n      if (instance.drawLoopActive) {\n        instance.draw(canvasContext, videoElement);\n        setTimeout(step, stepMilliSeconds);\n        // requestAnimationFrame(step);\n      }\n    }\n    step();\n  }\n\n  _muteVideo(videoElement): void {\n    // Mute a given video element\n\n    const instance = this;\n    function mute(event): void {\n      videoElement.muted = 'muted';\n      videoElement.removeEventListener('playing', mute);\n    }\n\n    videoElement.addEventListener('playing', mute);\n  }\n\n  _sizeCanvasElement(videoWidth: number, videoHeight: number): {canvasWidth: number, canvasHeight: number} {\n    // We're keeping the height the same. Goal is to add black bars to the sides\n    // if we're in portrait mode and crop to the center if we're in landscape.\n    return {\n      canvasWidth: videoHeight * 4 / 3,\n      canvasHeight: videoHeight,\n    };\n  }\n\n  _createVideoElement(canvasId: string, videoStream: any): any {\n    // Create the video element and attach it to the canvas\n\n    const videoElement = document.createElement('video');\n    const canvasElement: any = document.getElementById(canvasId);\n    const canvasStream = canvasElement.captureStream();\n    const videoSettings = videoStream.getVideoTracks()[0].getSettings();\n\n    Janus.attachMediaStream(videoElement, videoStream);\n    videoElement.autoplay = true;\n    videoElement.setAttribute('playsinline', 'true');\n    videoElement.setAttribute('id', 'self-video');\n\n    // Chrome doesn't like it if we set the muted attribute before the video is playing\n    this._muteVideo(videoElement);\n\n    const { canvasWidth, canvasHeight } = this._sizeCanvasElement(videoSettings.width, videoSettings.height);\n    canvasElement.width = canvasWidth;\n    canvasElement.height = canvasHeight;\n\n    const audioTrack = videoStream.getAudioTracks().find((item) => item);\n    if (!!audioTrack) {\n        canvasStream.addTrack(videoStream.getAudioTracks()[0]);\n    }\n\n    this.startDrawingLoop(canvasElement, videoElement, videoSettings.frameRate);\n\n    return {\n      videoElement,\n      canvasStream,\n    };\n  }\n\n  unPublishOwnFeed(): void {\n    // Unpublish your own feed\n    const unpublish = { request: 'unpublish' };\n    this.handle.send({ message: unpublish });\n    this.cleanupLocalStream();\n  }\n\n  publishOwnFeed(\n    audioDeviceId: string | null,\n    videoDeviceId: string,\n    canvasId: string = 'canvas-self',\n  ): Observable {\n    // Publish our own feed\n    return new Observable(\n      subscriber => {\n        if (this.publishWebrtcState) {\n          // Already publishing. Need to unpublish, wait until we're done unpublishing, and then republish\n          this.unPublishOwnFeed();\n          interval(100).pipe(\n            takeWhile(() => this.publishWebrtcState)\n          ).subscribe({\n            complete: () => {\n              this.createOffer(subscriber, audioDeviceId, videoDeviceId, canvasId);\n            }\n          });\n        } else {\n          // Simple case. Not publishing yet\n          this.createOffer(subscriber, audioDeviceId, videoDeviceId, canvasId);\n        }\n      }\n    );\n  }\n\n  createOffer(\n    subscriber,\n    audioDeviceId: string | null,\n    videoDeviceId: string,\n    canvasId: string,\n    retryCount = 0,\n  ): void {\n    const instance = this;\n    instance.webrtcService.getUserMedia(audioDeviceId, videoDeviceId)\n    .then(\n      (videoStream) => {\n        instance.localStream = videoStream;\n        const {videoElement, canvasStream} = instance._createVideoElement(canvasId, videoStream);\n        instance.videoElement = videoElement;\n        this.handle.createOffer({\n          media: { audioRecv: false, videoRecv: false, audioSend: true, videoSend: true },\n          success(jsep): void {\n            const publish = { request: 'configure', audio: true, video: true };\n            instance.handle.send({message: publish, jsep});\n            subscriber.next(true);\n            subscriber.complete();\n          },\n          error(error): void {\n            subscriber.error(error);\n          },\n          simulcast: true,\n          simulcastMaxBitrates: {\n            high: 256000,\n            medium: 128000,\n            low: 64000,\n          },\n          stream: canvasStream,\n          trickle: true,\n        });\n      }\n    ).catch((error) => {\n      // Some devices get intermittent errors. I'm doing a retry here. Not a warm-fuzzy solution. Future would might\n      // find a race condition where we need to wait for an event before calling getUserMedia\n      if (retryCount  {\n          instance.createOffer(\n            subscriber,\n            audioDeviceId,\n            videoDeviceId,\n            canvasId,\n            retryCount = retryCount + 1,\n          );\n        }, 1000);\n      }\n    });\n  }\n\n  attachMediaStream(elemId: string, streamId: string): void {\n    const element: any = document.getElementById(elemId);\n    Janus.attachMediaStream(element, this.streams[streamId]);\n  }\n\n  attachRemoteFeed(\n    feed: RemoteFeed,\n    room: RoomInfo,\n    pin: string,\n  ): Observable {\n    // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n\n    const instance = this;\n\n    return new Observable(\n      subscriber => {\n        instance.janus.attach({\n          plugin: 'janus.plugin.videoroom',\n          opaqueId: instance.opaqueId,\n          success(pluginHandle): void {\n            instance.remoteHandles[feed.id] = pluginHandle;\n            instance.remoteHandles[feed.id].videoCodec = feed.video_codec;\n\n            const subscribe = {\n              request: 'join',\n              room: room.id,\n              ptype: 'subscriber',\n              feed: feed.id,\n              private_id: room.privateId,\n              substream: 0,\n              pin,\n            };\n            instance.remoteHandles[feed.id].send({message: subscribe});\n          },\n\n          error(error): void {\n            subscriber.error(error);\n          },\n\n          onmessage(msg, jsep): void {\n            subscriber.next({\n              message: fromModels.ON_REMOTE_FEED_MESSAGE,\n              payload: {\n                msg,\n                jsep,\n                feed,\n                room,\n              },\n            });\n            if (!!jsep) {\n              instance.answerRemoteFeedJsep(jsep, feed, room);\n            }\n          },\n\n          webrtcState(on): void {\n            subscriber.next({\n              message: fromModels.REMOTE_FEED_WEBRTC_STATE,\n              payload: {\n                on,\n                feed,\n                room,\n              },\n            });\n          },\n\n          onlocalstream(stream): void {\n            console.log('Would never expect to get here');\n          },\n\n          slowLink(msg): void {\n            subscriber.next({\n              message: fromModels.REMOTE_FEED_SLOW_LINK,\n              payload: {\n                feedId: feed.id,\n              },\n            });\n          },\n\n          onremotestream(stream): void {\n            // Save off remote stream\n\n            const streamId = instance._get_random_string();\n            instance.streams[streamId] = stream;\n\n            const numVideoTracks = stream.getVideoTracks() ? stream.getVideoTracks().length : 0;\n            subscriber.next({\n              message: fromModels.ON_REMOTE_REMOTE_STREAM,\n              payload: {\n                streamId,\n                numVideoTracks,\n                feed,\n                room,\n              },\n            });\n          },\n          oncleanup(): void {\n            subscriber.next({\n              message: fromModels.ON_REMOTE_CLEANUP,\n              payload: {\n                feed,\n                room,\n              },\n            });\n          }\n        });\n      }\n    );\n  }\n\n  toggleMute(): boolean {\n    const muted = this.handle.isAudioMuted();\n    if (muted) {\n        this.handle.unmuteAudio();\n    } else {\n        this.handle.muteAudio();\n    }\n    return this.handle.isAudioMuted();\n  }\n\n  setMute(mute: boolean): boolean {\n    const muted = this.handle.isAudioMuted();\n    if (muted === mute) {\n      return this.handle.isAudioMuted();\n    }\n\n    if (mute) {\n        this.handle.muteAudio();\n    } else {\n        this.handle.unmuteAudio();\n    }\n    return this.handle.isAudioMuted();\n  }\n\n  requestSubstream(feed: RemoteFeed, substreamId: number): void {\n    this.remoteHandles[feed.id].send({message: {request: 'configure', substream: substreamId}});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^10.1.1\n        \n            @angular/core : ^10.1.1\n        \n            @ngrx/component-store : ^10.0.1\n        \n            moment : ^2.29.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JanusRole   (src/.../janus.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/janus.models.ts\n    \n        \n            \n                \n                    \n                        \n                        JanusRole\n                    \n                \n                    \n                        \n                            Possible roles for a user.\n\n                        \n                    \n                        \n                            \n                                 publisher\n                            \n                        \n                        \n                            \n                                Value : publisher\n                            \n                        \n                        \n                            \n                                 listener\n                            \n                        \n                        \n                            \n                                Value : listener\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJanus Videoroom Component\nThis is an angular library with features to make it easy to embed a videoroom\ninto any angular app. Once you have a properly configured, public instance of a\njanus server with the videoroom plugin enabled, this library includes a\ndirective that will connect clients in a videoroom.\nWhy build this?\nWhen building a product that incorporates a videoroom, the interesting part of\nthe product is how it helps users find, create, edit, join, and view\nvideorooms. That's what gives the product it's competitive advantage. However,\nwhen we started working on our own product, we spent the vast majority of our\nengineering time working with low level webrtc signalling. This mismatch led us\nto believe there's room for improvement in this field. Our goal is to help\nother developers spend more time on their app and less time on webrtc details.\nThe Janus documentation and demos are great for understanding how the service\nworks. However, the sample client code is not easy to adopt into your own\napplication. This makes it so that developers need to write a lot of the low\nlevel code themselves and understand many of the details of the videoroom\nplugin. While more knowledge is always better than less, we believe it's\npossible to implement a videoroom without requiring the developer to understand\nintimate details of webrtc.\nWhat does this implement?\nThe core function provided by this library is a component called JanusVideoroomComponent that implements a videoroom. The selector for the component is janus-videoroom. You can have a fully functional videoroom only specifying the URL of the janus gateway and the room ID. The videoroom supports the following features:\n\nRoom ID You can specify any roomId that is available on the janus gateway.\nhttp and websocket connections You can specify an http and/or websocket URL. The component will prefer the websocket URL and fallback to the http URL.\nPINs You can specify a PIN for any room that requires it.\nAuto Resize Videos are automatically enlarged to take up the maximum screen real estate upon changing the size or orientation of the screen.\nMultiple Aspect Ratios Different source video aspect ratios are handled smoothly.\nDisplay Names You can specify the display name for anyone joining a videoroom.\nPublishers or Read Only Users Users can be publishers, who will send a feed from their camera/microphone, or they can be read only users that don't transmit anything.\nSimulcast Supported clients will publish 3 different quality video feeds and clients will dynamically pick the appropriate stream based on current network conditions\nDevices Device IDs can be input and dynamically changed so that users can change which input or output devices to use.\nICE Servers In addition the the janus gateway, custom STUN/TURN servers can be specified.\nMute Audio Audio can be muted for publishers.\n\nWhat does this not implement?\nIn the spirit of doing one thing well, the janus-videoroom component does not\nimplement many necessary parts of an application. For example, the component\nsupports muting the feed of a publisher. However, it does not implement a mute\nbutton. The burden is put on the developer to implement the UX around how to\nmute a feed.\nThe following is a non-exhaustive list of necessary items for most webapps that\nare not implemented by JanusVideoroomComponent. These will have to be\nimplemented by the application outside of this library.\n\nJanus room configuration Create/edit/delete operations on janus rooms are not supported\nUI elements for interaction Mute, change device, etc. are supported by the component, but it does not include UI elements for these.\nUser Authentication\nBackend Storage\nJanus gateway deployment\n\nHow to use\nInstallation\nDependencies\njanus-angular has 3 peer dependencies: webrtc-adapter, @ngrx/component-store, and moment. These can be installed by yarn\nyarn add webrtc-adapter @ngrx/component-store momentInstalling janus-angular\nInstallation is available through yarn\nyarn add janus-angularIncluding the module\nThe JanusModule must be included in your imports for the module in which you wish to use the directive\nimport { JanusModule } from 'janus';\n...\n@NgModule({\n  declarations: [\n    ...\n  ],\n  imports: [\n    ...\n    JanusModule,\n  ],\n})\nexport class YourAppModule { }Using the directive\nThe following minimal component will work with the demo deploy of janus.\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  styleUrls: ['./app.component.scss'],\n  template: `\n    \n    \n  `\n})\nexport class AppComponent {\n  roomId = 1234;\n  wsUrl = 'wss://janus.conf.meetecho.com/ws';\n}Inputs/Outputs for the component are documented in the API docs on this site. Page for the\ncomponent docs is here\nSample Application\nWe have written a small, sample application to show how to use the library. The\nrepo lives here.\nFuture Work\nIn addition to tireless bug fixing and making sure it works on all platforms\nand networks, future work will include adding additional touchpoints in which\nsomeone can customize the videoroom. Overlays work great to give rough\nfunctionality to all supported features. However, there are often times when an\napp wants to implement buttons on a publisher video itself, or change the\nentire look and feel of the videoroom. We do this internally, and are working\nto release those touchpoints to the public package.\nSource Code\nSource code for this library lives here\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        JanusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JanusModule\n\n\n\ncluster_JanusModule_declarations\n\n\n\ncluster_JanusModule_exports\n\n\n\n\nDeviceSelectorComponent\n\nDeviceSelectorComponent\n\n\n\nJanusModule\n\nJanusModule\n\nJanusModule -->\n\nDeviceSelectorComponent->JanusModule\n\n\n\n\n\nJanusVideoroomComponent\n\nJanusVideoroomComponent\n\nJanusModule -->\n\nJanusVideoroomComponent->JanusModule\n\n\n\n\n\nDeviceSelectorComponent \n\nDeviceSelectorComponent \n\nDeviceSelectorComponent  -->\n\nJanusModule->DeviceSelectorComponent \n\n\n\n\n\nJanusVideoroomComponent \n\nJanusVideoroomComponent \n\nJanusVideoroomComponent  -->\n\nJanusModule->JanusVideoroomComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ATTACH_SUCCESS   (src/.../janus-server.models.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            CONSENT_DIALOG   (src/.../janus-server.models.ts)\n                        \n                        \n                            DETACHED   (src/.../janus-server.models.ts)\n                        \n                        \n                            initialState   (src/.../janus.reducers.ts)\n                        \n                        \n                            MEDIA_STATE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_CLEANUP   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_DATA   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_DATA_OPEN   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_LOCAL_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_MESSAGE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_CLEANUP   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_FEED_MESSAGE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_LOCAL_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_REMOTE_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            randomString   (src/.../random.ts)\n                        \n                        \n                            REMOTE_FEED_SLOW_LINK   (src/.../janus-server.models.ts)\n                        \n                        \n                            REMOTE_FEED_WEBRTC_STATE   (src/.../janus-server.models.ts)\n                        \n                        \n                            RemoteFeedFactory   (src/.../janus.factories.ts)\n                        \n                        \n                            REQUEST_SUBSTREAM   (src/.../janus.actions.ts)\n                        \n                        \n                            RoomInfoFactory   (src/.../janus.factories.ts)\n                        \n                        \n                            SLOW_LINK   (src/.../janus-server.models.ts)\n                        \n                        \n                            TOGGLE_MUTE_SUCCESS   (src/.../janus.actions.ts)\n                        \n                        \n                            WEBRTC_STATE   (src/.../janus-server.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/janus-server.models.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ATTACH_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'attach success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CONSENT_DIALOG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consent dialog'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DETACHED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'detached'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MEDIA_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'media state'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_CLEANUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cleanup'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_DATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_DATA_OPEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data open'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_LOCAL_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'local stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'message'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_CLEANUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] cleanup'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_FEED_MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] message'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_LOCAL_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] local stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_REMOTE_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] remote stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'remote stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REMOTE_FEED_SLOW_LINK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] slow link'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REMOTE_FEED_WEBRTC_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] webrtc state'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SLOW_LINK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'slow link'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WEBRTC_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'webrtc state'\n                        \n                    \n\n\n            \n        \n\n    src/lib/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  JanusVideoroomComponent,\n  DeviceSelectorComponent,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  AudioBoxComponent,\n  VideoBoxComponent,\n  DefaultVideoRoomComponent,\n  SelfVideoComponent,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/store/reducers/janus.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VideoroomState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  roomInfo: {\n    state: RoomInfoState.start,\n    id: null,\n    description: null,\n    privateId: null,\n    otherRoomId: null,\n\n    errorCode: null,\n\n    publishState: PublishState.start,\n    localStreamId: null,\n    muted: false,\n  },\n  remoteFeeds: {},\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/shared/random.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            randomString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ((bytes: number) => {\n  const array = new Uint8Array(bytes);\n  window.crypto.getRandomValues(array);\n\n  // Real pain to find a cross platform way to do this smoothly. Dropping into a for loop\n  let ret = '';\n  for (const item of array) {\n    ret += item.toString(36);\n  }\n\n  return ret;\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/factories/janus.factories.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RemoteFeedFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Factory.Sync.makeFactory({\n  state: RemoteFeedState.initialized,\n  id: Factory.each(i => i.toString()),\n  streamId: Factory.each(i => 'stream' + i.toString()),\n  numVideoTracks: 0,\n  requestedSubstream: 0,\n  currentSubstream: 0,\n  displayName: Factory.each(i => 'name' + i.toString()),\n  audio_codec: Factory.each(i => 'audio' + i.toString()),\n  video_codec: Factory.each(i => 'video' + i.toString()),\n  muted: false,\n  volume: 64,\n  slowLink: null,\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RoomInfoFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Factory.Sync.makeFactory({\n  state: RoomInfoState.start,\n  id: Factory.each(i => i.toString()),\n  description: Factory.each(i => 'description' + i.toString()),\n  privateId: Factory.each(i => i),\n  otherRoomId: Factory.each(i => i),\n  errorCode: null,\n  publishState: PublishState.start,\n  localStreamId: Factory.each(i => 'stream' + i.toString()),\n  muted: false,\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/store/actions/janus.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_SUBSTREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Janus] Request Substream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOGGLE_MUTE_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Janus] Toggle Mute Success'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
