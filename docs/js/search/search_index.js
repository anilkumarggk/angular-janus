var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/DeviceSelectorComponent.html",[0,0.988,1,0.812]],["body/components/DeviceSelectorComponent.html",[0,1.447,1,1.283,2,1.531,3,0.607,4,0.485,5,1.349,6,1.676,7,1.676,8,1.676,9,0.607,10,4.31,11,3.324,12,2.173,13,0.607,14,1.26,15,2.634,16,4.06,17,2.319,18,2.324,19,0.835,20,2.324,21,3.013,22,1.898,23,1.898,24,1.698,25,3.013,26,3.013,27,1.87,28,2.324,29,2.324,30,1.447,31,3.013,32,3.013,33,2.881,34,2.324,35,2.668,36,2.668,37,1.87,38,1.676,39,2.324,40,2.324,41,0.835,42,1.87,43,3.459,44,2.324,45,3.013,46,0.377,47,1.531,48,2.303,49,3.459,50,3.459,51,3.459,52,3.459,53,2.668,54,2.324,55,0.985,56,2.324,57,3.459,58,1.87,59,2.173,60,3.736,61,3.459,62,3.736,63,1.447,64,1.898,65,2.634,66,2.173,67,1.349,68,0.079,69,0.773,70,0.967,71,1.104,72,3.013,73,2.173,74,1.26,75,3.013,76,2.668,77,2.173,78,1.26,79,3.013,80,2.324,81,2.173,82,2.173,83,2.173,84,2.173,85,1.104,86,1.104,87,1.531,88,2.173,89,0.907,90,1.531,91,1.676,92,1.87,93,0.746,94,2.173,95,1.676,96,2.324,97,1.349,98,1.676,99,1.349,100,1.676,101,1.349,102,0.485,103,1.26,104,2.319,105,1.349,106,1.676,107,1.87,108,2.173,109,2.173,110,2.173,111,2.173,112,3.459,113,2.173,114,2.173,115,2.173,116,2.173,117,2.173,118,2.173,119,1.676,120,1.349,121,1.531,122,0.909,123,2.173,124,0.909,125,2.173,126,1.104,127,2.173,128,2.173,129,1.676,130,1.676,131,1.676,132,0.746,133,1.349,134,2.173,135,1.349,136,2.173,137,1.349,138,2.173,139,2.173,140,2.173,141,2.173,142,3.459,143,2.668,144,1.676,145,2.173,146,1.676,147,2.173,148,1.676,149,2.173,150,4.06,151,3.013,152,2.173,153,2.173,154,0.607,155,3.013,156,2.173,157,2.173,158,1.676,159,2.173,160,2.173,161,1.349,162,2.173,163,2.173,164,1.349,165,2.173,166,2.324,167,2.173,168,2.173,169,2.173,170,1.104,171,2.324,172,1.87,173,1.349,174,2.881,175,1.676,176,1.676,177,0.607,178,1.104,179,1.676,180,1.676,181,0.035,182,0.049,183,0.035]],["title/interfaces/Devices.html",[55,0.528,184,0.66]],["body/interfaces/Devices.html",[3,0.636,4,0.509,9,0.636,13,0.991,14,1.2,19,0.851,22,1.581,23,1.581,24,1.302,41,0.695,46,0.395,47,1.581,55,0.695,68,0.079,69,0.509,70,0.991,74,0.953,78,0.953,89,0.509,102,0.973,122,1.594,124,1.594,126,1.936,132,1.371,154,0.636,181,0.037,182,0.051,183,0.037,184,1.151,185,1.157,186,1.157,187,1.932,188,1.604,189,1.231,190,1.069,191,1.723,192,1.218,193,2.365,194,1.581,195,1.594,196,1.932,197,1.936,198,2.365,199,2.365,200,1.932,201,1.302,202,2.201,203,2.093,204,1.218,205,1.309,206,1.413,207,1.483,208,2.365,209,1.413,210,1.157,211,1.802,212,2.476,213,0.782,214,1.157,215,1.475,216,1.157,217,1.413,218,1.413,219,0.782,220,0.953,221,1.302,222,1.157,223,1.157,224,1.157,225,1.065,226,1.483,227,1.302,228,1.413,229,1.218,230,1.069,231,1.581,232,0.953,233,0.953,234,0.953,235,1.157,236,1.157,237,1.581,238,1.157,239,1.157,240,2.027,241,1.157,242,1.413,243,0.942,244,1.413,245,1.413,246,1.413,247,1.932,248,0.782,249,1.157,250,1.413,251,1.413,252,1.413,253,1.932,254,1.413,255,0.953,256,1.932,257,1.413,258,1.157,259,1.413,260,0.953,261,1.413,262,1.932,263,1.581,264,0.953,265,1.932,266,1.413,267,0.953,268,1.932,269,1.157,270,0.953,271,1.302,272,1.932,273,1.157,274,1.302,275,1.157,276,1.413,277,1.413,278,1.413,279,1.413,280,0.953,281,1.157,282,1.413,283,0.953,284,0.636,285,1.413,286,1.413,287,0.953,288,1.413,289,1.413,290,1.157,291,0.953,292,1.581,293,1.581,294,1.581,295,1.302,296,1.413,297,1.581,298,1.069,299,1.157,300,0.953,301,0.953,302,1.157,303,1.157,304,0.953,305,0.953,306,1.157,307,1.413]],["title/interfaces/IceServer.html",[184,0.66,298,0.812]],["body/interfaces/IceServer.html",[3,0.637,4,0.509,9,0.637,13,0.991,14,1.065,19,0.852,22,1.158,23,1.158,24,0.953,41,0.696,46,0.396,47,1.582,55,0.509,68,0.079,69,0.509,70,0.991,71,1.937,74,0.953,78,0.953,89,0.509,102,0.973,122,0.953,124,0.953,126,1.158,132,1.371,154,0.637,181,0.037,182,0.051,183,0.037,184,1.151,185,1.158,186,1.158,187,1.415,188,1.604,189,1.179,190,1.07,191,1.723,192,1.219,193,2.366,194,1.582,195,1.595,196,1.933,197,1.937,198,2.366,199,2.366,200,1.933,201,1.303,202,2.202,203,2.094,204,1.219,205,1.31,206,1.415,207,1.484,208,2.366,209,1.415,210,1.158,211,1.803,212,2.477,213,0.783,214,1.158,215,1.475,216,1.158,217,1.415,218,1.415,219,0.783,220,0.953,221,1.303,222,1.158,223,1.158,224,1.158,225,1.065,226,1.484,227,1.303,228,1.415,229,1.219,230,1.07,231,1.582,232,0.953,233,0.953,234,0.953,235,1.158,236,1.158,237,1.582,238,1.158,239,1.158,240,2.028,241,1.158,242,1.415,243,0.942,244,1.415,245,1.415,246,1.415,247,1.933,248,0.783,249,1.158,250,1.415,251,1.415,252,1.415,253,1.933,254,1.415,255,0.953,256,1.933,257,1.415,258,1.158,259,1.415,260,0.953,261,1.415,262,1.933,263,1.582,264,0.953,265,1.933,266,1.415,267,0.953,268,1.933,269,1.158,270,0.953,271,1.303,272,1.933,273,1.158,274,1.484,275,1.158,276,1.415,277,1.415,278,1.415,279,1.415,280,0.953,281,1.158,282,1.415,283,0.953,284,0.637,285,1.415,286,1.415,287,0.953,288,1.415,289,1.415,290,1.158,291,0.953,292,1.582,293,1.582,294,1.582,295,1.303,296,1.415,297,1.582,298,1.31,299,1.582,300,1.303,301,0.953,302,1.158,303,1.158,304,1.303,305,1.595,306,1.937,307,2.366,308,1.758]],["title/modules/JanusModule.html",[309,1.2,310,0.988]],["body/modules/JanusModule.html",[1,1.609,3,0.866,4,0.692,9,0.866,11,2.391,30,1.297,68,0.079,89,1.031,93,1.065,95,2.391,102,0.692,170,1.575,177,1.309,181,0.05,182,0.062,183,0.05,309,1.575,310,1.942,311,1.924,312,1.297,313,2.552,314,2.391,315,1.924,316,3.171,317,2.391,318,2.391,319,2.391,320,2.932,321,2.391,322,2.391,323,3.1,324,2.932,325,3.801,326,2.391,327,3.801,328,3.1,329,2.391,330,3.1,331,3.1,332,3.1,333,2.932,334,3.1,335,3.1,336,3.801,337,2.932,338,3.1,339,1.59,340,3.1,341,3.1,342,2.932,343,3.1,344,3.1,345,3.1,346,2.932,347,3.1,348,3.1,349,2.391]],["title/components/JanusVideoroomComponent.html",[0,0.988,177,0.66]],["body/components/JanusVideoroomComponent.html",[0,1.596,1,0.47,2,1.088,3,0.383,4,0.306,5,0.85,6,1.056,7,1.056,8,1.056,9,0.383,13,0.383,14,0.383,15,1.852,17,1.329,19,0.889,20,1.652,30,0.573,33,1.652,35,2.035,36,2.035,37,2.304,38,1.056,39,1.652,40,1.652,41,1.002,42,1.329,44,1.652,46,0.238,48,1.088,54,2.301,55,0.889,56,1.652,58,1.329,63,1.103,64,1.516,65,2.574,67,1.329,68,0.079,69,0.801,70,1.171,71,1.088,76,2.497,80,1.652,85,1.645,86,1.34,87,0.696,89,0.853,90,1.34,91,1.056,92,2.469,93,0.47,96,1.652,97,0.85,98,1.056,99,0.85,100,1.056,101,0.85,102,0.306,103,1.103,104,2.01,105,0.85,106,1.056,107,2.369,119,1.056,120,0.85,121,2.021,129,1.056,130,1.056,131,1.056,132,1.275,133,0.85,135,0.85,137,1.329,154,0.599,170,0.696,171,1.652,172,1.329,173,0.85,174,2.301,175,1.056,176,1.056,177,0.834,178,2.107,179,1.056,180,1.056,181,0.022,182,0.035,183,0.022,184,0.834,188,1.453,189,0.959,190,0.736,192,1.179,194,0.696,195,0.573,201,0.896,204,0.736,205,0.736,207,0.573,210,1.088,213,1.179,215,1.112,219,0.906,221,1.633,225,0.959,226,1.436,229,0.47,230,1.025,231,0.696,232,1.248,243,0.767,248,0.736,260,0.896,264,1.553,269,1.088,270,0.573,271,1.436,274,1.248,281,1.34,283,1.103,284,0.905,287,1.354,291,1.103,292,1.744,294,1.088,295,1.691,298,0.906,300,0.896,301,0.896,302,0.696,303,0.696,304,1.248,305,0.896,306,1.516,308,1.056,315,1.329,329,3.232,339,0.896,350,4.191,351,1.369,352,1.652,353,2.142,354,1.652,355,1.652,356,2.142,357,1.652,358,1.652,359,1.329,360,1.652,361,2.142,362,2.983,363,2.142,364,1.637,365,2.625,366,2.638,367,3.713,368,2.638,369,2.142,370,3.713,371,2.301,372,3.238,373,2.469,374,2.227,375,2.497,376,2.864,377,2.638,378,2.142,379,1.369,380,1.369,381,1.369,382,2.142,383,2.301,384,1.369,385,1.852,386,2.142,387,2.497,388,2.142,389,2.142,390,1.369,391,2.301,392,1.652,393,2.142,394,2.142,395,2.142,396,2.142,397,2.142,398,2.142,399,2.142,400,1.329,401,2.142,402,2.142,403,1.652,404,2.142,405,1.652,406,2.142,407,2.142,408,2.638,409,1.369,410,2.142,411,2.142,412,1.369,413,1.652,414,2.983,415,2.142,416,2.142,417,1.652,418,1.369,419,2.142,420,2.983,421,1.369,422,2.142,423,1.652,424,2.142,425,1.369,426,1.369,427,1.652,428,1.652,429,1.369,430,2.983,431,2.301,432,2.142,433,2.142,434,1.369,435,2.301,436,1.329,437,1.369,438,1.056,439,1.369,440,1.369,441,2.142,442,1.369,443,1.369,444,2.301,445,1.369,446,2.142,447,1.369,448,1.369,449,1.369,450,1.056,451,1.056,452,1.369,453,1.369,454,2.638,455,1.369,456,0.85,457,2.035,458,1.369,459,1.369,460,1.056,461,0.696,462,1.369,463,1.369,464,2.983,465,2.983,466,2.983,467,1.369,468,1.369,469,2.142,470,1.369,471,1.369,472,2.142,473,1.369,474,1.369,475,1.369,476,1.369,477,1.056,478,1.369,479,1.369,480,1.056,481,1.056,482,0.85,483,1.369,484,1.056,485,1.369,486,1.056,487,1.056,488,1.369,489,1.369,490,0.696,491,1.369,492,1.369,493,1.369,494,1.369,495,1.369,496,1.056,497,1.056,498,1.369,499,2.142,500,2.142,501,1.369,502,1.369,503,3.238,504,1.369,505,1.369,506,1.369,507,1.369,508,2.142,509,1.369,510,1.369,511,1.369,512,0.85,513,1.056,514,1.056,515,1.369,516,1.056,517,1.369,518,1.369,519,1.369,520,1.369,521,1.369,522,1.369,523,1.369,524,1.369,525,1.369,526,2.142,527,0.85,528,1.369,529,1.369,530,1.369,531,1.369,532,2.142,533,1.369,534,1.369,535,1.369,536,1.369,537,2.142,538,1.369,539,1.369,540,1.369,541,1.369,542,1.369,543,1.369,544,2.142,545,1.369,546,1.369,547,1.369,548,1.369,549,1.369,550,1.369,551,1.369,552,1.369,553,1.369,554,1.369,555,1.056,556,1.369,557,1.369,558,1.369,559,2.035,560,1.056,561,1.369]],["title/interfaces/Publisher.html",[184,0.66,243,0.528]],["body/interfaces/Publisher.html",[3,0.594,4,0.475,9,0.594,13,1.034,14,1.034,19,0.87,22,1.08,23,1.08,24,0.889,41,0.827,46,0.369,47,1.508,55,0.475,68,0.079,69,0.663,70,1.034,74,1.241,78,1.241,89,0.475,102,0.958,122,0.889,124,0.889,126,1.08,132,1.337,154,0.829,181,0.035,182,0.048,183,0.035,184,1.156,185,1.08,186,1.08,187,1.319,188,1.584,189,1.227,190,1.019,191,1.687,192,1.271,193,2.297,194,1.508,195,1.548,196,1.842,197,1.88,198,2.297,199,2.297,200,1.842,201,1.241,202,2.122,203,2.049,204,1.271,205,1.271,206,1.319,207,1.43,208,2.297,209,1.319,210,1.08,211,1.737,212,2.662,213,0.73,214,1.08,215,1.492,216,1.08,217,1.319,218,1.319,219,0.73,220,0.889,221,1.43,222,1.08,223,1.08,224,1.08,225,1.18,226,1.628,227,1.241,228,1.319,229,1.271,230,1.019,231,1.508,232,0.889,233,0.889,234,0.889,235,1.08,236,1.08,237,1.978,238,1.08,239,1.08,240,2.231,241,1.08,242,1.319,243,0.99,244,1.842,245,1.842,246,1.842,247,2.297,248,1.019,249,1.508,250,1.842,251,1.842,252,1.842,253,2.297,254,1.842,255,1.241,256,2.297,257,1.842,258,1.508,259,1.842,260,1.241,261,1.842,262,2.297,263,1.88,264,1.241,265,2.297,266,1.842,267,1.241,268,2.297,269,1.508,270,1.241,271,1.548,272,2.297,273,1.508,274,1.43,275,1.508,276,1.842,277,1.842,278,1.842,279,1.842,280,1.241,281,1.508,282,1.842,283,1.241,284,0.829,285,1.842,286,1.842,287,1.241,288,1.842,289,1.842,290,1.08,291,0.889,292,1.508,293,1.508,294,1.508,295,1.241,296,1.319,297,1.508,298,1.019,299,1.08,300,0.889,301,0.889,302,1.08,303,1.08,304,0.889,305,0.889,306,1.08,307,1.319]],["title/injectables/WebrtcService.html",[64,1.2,562,1.466]],["body/injectables/WebrtcService.html",[3,0.306,4,0.244,9,0.306,13,0.5,14,1.139,19,0.507,24,1.097,27,1.11,30,0.748,34,2.023,41,0.646,46,0.19,48,0.556,53,1.751,55,0.694,58,1.628,63,0.748,64,1.333,65,2.034,67,1.11,68,0.079,69,0.507,70,0.5,71,0.909,74,0.457,78,0.457,85,0.909,87,1.85,89,0.732,90,0.556,93,0.376,97,0.679,99,0.679,101,0.679,102,0.4,103,1.371,104,2.362,105,0.679,107,2.821,120,1.409,121,2.292,122,1.523,124,1.56,132,0.376,133,1.409,135,1.927,137,0.679,143,1.751,144,0.843,146,0.843,148,0.843,154,0.306,158,0.843,161,2.123,164,0.679,166,1.38,172,1.628,178,0.556,181,0.018,182,0.029,183,0.029,188,1.473,189,0.868,191,0.457,192,1.251,195,0.457,197,0.556,203,1.154,204,0.614,205,0.78,211,0.909,213,0.78,215,1.175,219,1.369,220,0.457,225,0.868,226,1.299,229,0.78,230,1.307,232,1.097,233,1.21,234,0.748,243,0.244,248,0.376,255,0.748,258,0.556,267,0.748,271,0.457,280,0.457,283,0.457,284,1.018,287,1.56,293,0.556,298,0.614,305,0.457,339,1.62,352,0.843,364,1.409,365,1.11,371,1.751,373,1.628,374,1.11,375,1.38,385,0.679,400,1.11,431,0.843,436,0.679,438,2.638,444,2.73,450,0.843,451,0.843,456,2.404,460,0.843,461,0.556,477,0.843,480,1.751,481,1.38,482,0.679,486,0.843,490,1.666,497,0.843,512,1.11,516,0.843,527,2.503,559,1.38,560,2.876,562,1.409,563,1.093,564,1.093,565,1.789,566,1.789,567,2.27,568,1.789,569,1.789,570,1.789,571,2.623,572,2.893,573,2.27,574,2.623,575,1.093,576,1.093,577,1.789,578,1.093,579,1.093,580,1.093,581,1.093,582,1.093,583,1.093,584,2.023,585,1.789,586,1.093,587,2.623,588,2.231,589,1.789,590,1.38,591,1.38,592,1.093,593,1.789,594,1.751,595,1.093,596,1.093,597,1.093,598,1.093,599,2.27,600,1.093,601,0.843,602,1.093,603,0.843,604,1.093,605,1.093,606,1.093,607,1.093,608,1.751,609,0.843,610,0.843,611,0.843,612,1.093,613,1.093,614,1.789,615,1.093,616,1.093,617,0.843,618,1.093,619,1.789,620,1.38,621,1.093,622,1.093,623,1.789,624,1.093,625,1.789,626,1.093,627,2.27,628,1.093,629,1.093,630,1.093,631,1.093,632,2.27,633,1.093,634,1.093,635,1.093,636,1.093,637,1.093,638,1.789,639,2.27,640,1.093,641,2.893,642,2.023,643,1.093,644,1.093,645,3.642,646,1.093,647,1.093,648,1.093,649,1.093,650,2.27,651,1.789,652,1.093,653,0.843,654,1.093,655,1.093,656,1.093,657,3.42,658,1.093,659,1.093,660,1.093,661,1.093,662,1.38,663,1.093,664,1.093,665,3.933,666,1.789,667,2.27,668,2.528,669,2.27,670,1.789,671,1.789,672,1.093,673,1.093,674,1.093,675,1.789,676,1.093,677,1.093,678,1.093,679,1.789,680,1.789,681,2.27,682,1.789,683,1.093,684,1.093,685,1.093,686,1.093,687,1.789,688,1.789,689,1.093,690,2.395,691,1.093,692,1.789,693,1.093,694,1.789,695,1.093,696,1.789,697,1.093,698,2.893,699,2.623,700,1.093,701,1.093,702,1.093,703,1.093,704,1.789,705,1.789,706,1.093,707,1.093,708,1.093,709,1.789,710,1.093,711,1.093,712,1.789,713,1.789,714,3.729,715,1.093,716,1.789,717,1.093,718,1.789,719,1.789,720,1.789,721,1.093,722,1.093,723,1.789,724,1.789,725,1.093,726,1.093,727,1.789,728,1.093,729,1.093,730,1.751,731,1.093,732,0.843,733,1.093,734,1.093,735,1.093,736,1.093,737,1.789,738,1.38,739,1.789,740,1.093,741,1.093,742,1.093,743,1.093,744,1.093,745,1.789,746,1.789,747,1.789,748,1.093,749,1.093,750,2.623,751,1.789,752,1.093,753,1.093,754,1.093,755,1.093,756,1.093,757,1.093,758,1.093,759,1.789,760,2.023,761,1.789,762,1.789,763,2.27,764,1.093,765,3.106,766,1.093,767,1.093,768,1.093,769,1.093,770,1.093,771,1.093,772,1.093,773,1.093,774,1.093,775,1.789,776,1.093,777,0.843,778,0.843,779,1.093,780,1.093,781,1.093,782,1.789,783,1.789,784,1.093,785,0.843,786,1.093,787,1.789,788,1.093,789,1.789,790,1.789,791,1.789,792,1.38,793,1.789,794,1.093,795,1.093,796,1.093,797,1.093,798,1.795,799,1.093,800,1.093,801,1.093,802,1.093,803,1.093,804,1.093,805,2.623,806,2.623,807,2.623,808,1.093,809,1.093,810,0.843,811,0.843,812,1.093,813,1.093,814,1.093,815,1.093,816,1.093,817,1.093,818,1.093,819,1.093,820,0.679,821,1.093,822,1.38,823,0.843,824,1.093,825,1.093,826,1.093,827,0.843,828,0.843,829,1.093,830,0.843,831,1.093,832,1.093,833,1.093,834,1.093,835,2.893,836,1.789,837,1.093,838,1.093,839,1.093,840,1.093,841,0.843,842,2.27,843,1.093,844,1.093,845,2.623,846,1.093,847,1.093,848,1.093,849,1.093,850,1.093,851,1.093,852,1.093,853,1.093,854,1.789,855,1.093,856,1.093,857,1.093,858,1.093,859,1.093,860,1.093,861,1.093,862,1.093,863,1.789,864,1.093,865,0.843,866,1.093,867,1.093,868,1.093,869,1.093,870,2.893,871,1.093,872,1.093,873,2.893,874,1.789,875,1.093,876,1.093,877,1.093,878,1.093,879,1.093,880,1.093,881,1.093,882,1.789,883,1.093,884,1.093,885,2.623,886,1.093,887,1.093,888,1.093,889,1.093,890,1.093,891,1.093,892,1.093,893,1.093,894,1.789,895,1.093,896,1.093,897,0.843,898,1.093,899,1.093,900,1.093,901,0.843,902,1.093,903,1.093,904,1.093,905,1.093,906,0.843,907,1.093,908,1.093,909,1.093,910,1.093,911,0.843,912,0.679,913,1.093,914,1.093,915,1.093,916,0.843,917,1.093,918,1.093,919,1.093,920,1.093,921,1.093,922,1.093,923,1.093,924,1.093,925,1.093,926,1.093,927,1.093,928,1.093,929,1.789,930,1.093,931,1.093,932,1.38,933,1.093,934,1.093,935,1.093,936,1.093,937,1.093,938,1.093,939,1.093,940,1.093,941,1.093,942,1.093,943,1.093,944,1.093,945,1.093,946,1.093,947,2.893,948,1.789,949,1.789,950,1.093,951,1.093,952,1.093]],["title/dependencies.html",[312,1.185,953,1.534]],["body/dependencies.html",[68,0.076,93,1.25,181,0.059,182,0.068,183,0.059,190,1.25,312,1.749,326,2.808,954,3.64,955,3.64,956,2.808,957,4.182,958,2.808,959,2.808,960,3.64,961,3.64]],["title/miscellaneous/enumerations.html",[962,1.011,963,2.184]],["body/miscellaneous/enumerations.html",[19,0.814,46,0.633,68,0.074,86,2.127,181,0.059,182,0.068,183,0.059,186,1.853,227,1.525,243,0.935,290,1.853,291,1.751,297,2.127,962,1.853,963,2.812,964,3.646]],["title/index.html",[46,0.345,359,1.235,965,1.989]],["body/index.html",[0,1.838,4,0.745,5,1.26,14,0.803,15,1.783,17,1.26,18,1.565,19,0.453,27,1.783,28,2.216,29,1.565,30,1.202,37,1.26,41,1.021,42,1.26,48,1.46,55,0.642,63,1.662,68,0.075,69,0.453,89,0.642,90,1.031,92,1.783,93,0.697,102,0.642,103,0.849,154,0.803,173,2.07,177,0.803,178,2.293,181,0.033,182,0.047,183,0.033,189,0.803,190,0.697,192,1.314,201,0.849,204,0.697,205,0.697,220,0.849,221,1.517,225,0.567,227,0.849,230,1.145,243,0.642,248,0.987,249,1.46,255,0.849,260,1.202,263,1.694,264,0.849,267,0.849,270,0.849,273,1.031,274,0.849,275,1.031,280,0.849,284,0.803,295,1.395,299,1.46,300,1.395,304,1.202,309,1.46,310,1.395,312,1.202,313,1.26,324,1.565,339,1.395,349,2.216,354,1.565,355,2.951,357,2.216,358,1.565,359,1.26,360,1.565,365,1.783,373,1.26,374,1.783,376,1.565,383,1.565,385,2.25,387,1.565,391,1.565,392,2.216,400,2.375,403,1.565,405,1.565,413,2.951,417,1.565,423,1.565,427,2.572,428,1.565,435,1.565,436,2.07,482,1.26,484,1.565,487,1.565,490,1.031,496,1.565,513,1.565,555,1.565,584,1.565,588,1.565,590,2.797,591,1.565,594,2.951,603,1.565,609,1.565,610,2.216,611,1.565,620,1.565,642,2.572,653,1.565,662,1.565,690,1.565,730,1.565,738,1.565,778,1.565,785,2.797,792,1.565,798,2.25,810,1.565,811,2.216,820,1.783,822,1.565,823,1.565,827,1.565,828,1.565,841,1.565,897,1.565,901,2.216,906,1.565,911,2.572,912,1.26,953,1.565,956,1.565,958,2.216,959,2.216,966,4.173,967,3.626,968,2.873,969,3.626,970,2.03,971,2.03,972,2.03,973,2.03,974,2.03,975,3.334,976,2.03,977,2.03,978,3.826,979,2.03,980,2.03,981,2.03,982,2.03,983,2.03,984,2.03,985,2.03,986,2.03,987,2.03,988,2.03,989,2.03,990,3.334,991,2.03,992,2.03,993,2.03,994,2.03,995,2.03,996,2.03,997,2.03,998,2.873,999,2.03,1000,2.03,1001,2.03,1002,2.03,1003,2.873,1004,2.03,1005,2.873,1006,2.873,1007,2.03,1008,2.873,1009,2.03,1010,2.03,1011,3.334,1012,3.334,1013,2.873,1014,3.626,1015,2.03,1016,3.826,1017,2.03,1018,2.03,1019,2.873,1020,2.03,1021,4.085,1022,2.03,1023,2.03,1024,2.873,1025,2.03,1026,2.03,1027,2.03,1028,2.03,1029,2.03,1030,3.626,1031,3.334,1032,2.873,1033,3.334,1034,2.03,1035,2.03,1036,2.03,1037,2.03,1038,2.03,1039,2.03,1040,2.03,1041,2.03,1042,2.03,1043,2.03,1044,2.873,1045,1.565,1046,2.03,1047,2.03,1048,2.03,1049,2.03,1050,2.03,1051,2.873,1052,2.873,1053,2.873,1054,2.03,1055,1.565,1056,2.03,1057,2.03,1058,2.873,1059,2.03,1060,2.03,1061,2.03,1062,2.03,1063,2.03,1064,2.03,1065,2.03,1066,2.03,1067,2.03,1068,2.03,1069,2.873,1070,2.03,1071,2.873,1072,2.03,1073,2.03,1074,2.03,1075,2.873,1076,2.03,1077,2.03,1078,2.03,1079,2.03,1080,2.03,1081,2.03,1082,2.03,1083,2.03,1084,2.03,1085,2.03,1086,2.03,1087,2.03,1088,2.03,1089,2.03,1090,2.03,1091,2.03,1092,2.03,1093,2.873,1094,2.873,1095,2.03,1096,2.03,1097,2.873,1098,2.03,1099,2.03,1100,2.03,1101,2.873,1102,2.873,1103,2.03,1104,3.626,1105,2.03,1106,2.03,1107,2.03,1108,2.03,1109,2.03,1110,2.03,1111,2.03,1112,2.03,1113,2.03,1114,2.03,1115,2.03,1116,2.03,1117,2.03,1118,2.03,1119,2.03,1120,2.03,1121,2.873,1122,2.03,1123,2.03,1124,2.03,1125,2.03,1126,2.03,1127,2.03,1128,2.03,1129,2.03,1130,2.03,1131,2.03,1132,2.873,1133,2.03,1134,2.03,1135,2.03,1136,2.03,1137,2.03,1138,2.03,1139,2.03,1140,2.03,1141,2.03,1142,2.03,1143,2.03,1144,2.03,1145,2.03,1146,3.334,1147,2.03,1148,1.565,1149,2.873,1150,2.03,1151,2.03]],["title/modules.html",[311,1.98]],["body/modules.html",[68,0.069,181,0.06,182,0.069,183,0.06,310,1.553,311,2.304,608,2.863,1148,2.863,1152,3.712,1153,3.712]],["title/overview.html",[1154,2.461]],["body/overview.html",[1,1.595,2,1.771,68,0.075,164,2.531,170,1.771,177,1.297,181,0.057,182,0.066,183,0.057,185,1.771,309,2.072,310,1.955,312,1.458,313,2.163,314,2.689,315,2.163,316,2.689,317,2.689,318,2.689,319,2.689,320,3.146,321,2.689,322,2.689,562,2.163,760,2.689,820,2.163,1154,2.689]],["title/miscellaneous/variables.html",[461,1.439,962,1.011]],["body/miscellaneous/variables.html",[1,0.769,2,1.923,13,0.982,41,0.687,46,0.389,63,1.287,68,0.079,69,0.5,70,1.305,85,2.387,86,2.387,87,1.786,103,0.937,121,1.564,161,2.182,177,0.626,181,0.036,182,0.05,183,0.036,188,1.593,189,0.982,191,1.714,207,1.287,213,0.769,214,1.564,215,0.769,216,1.564,219,1.057,222,1.564,223,1.564,224,1.564,225,0.982,229,1.469,233,0.937,234,0.937,235,1.138,236,1.138,237,1.138,238,1.138,239,1.138,240,1.138,241,1.138,284,0.626,301,1.287,333,1.728,337,1.728,339,0.937,342,1.728,346,1.728,364,1.39,456,1.39,457,1.728,461,1.138,490,2.083,512,1.39,514,1.728,527,2.654,601,1.728,617,2.373,668,1.728,732,2.373,777,1.728,798,1.39,830,1.728,865,1.728,912,1.39,916,1.728,932,1.728,962,1.138,1045,1.728,1055,1.728,1155,3.077,1156,4.608,1157,4.623,1158,3.077,1159,3.077,1160,3.515,1161,3.077,1162,2.24,1163,3.077,1164,3.077,1165,3.077,1166,3.077,1167,3.077,1168,3.077,1169,3.077,1170,3.077,1171,3.077,1172,3.077,1173,3.077,1174,2.24,1175,3.077,1176,3.077,1177,3.077,1178,3.077,1179,3.077,1180,3.077,1181,3.077,1182,3.077,1183,3.077,1184,3.077,1185,2.24,1186,2.24,1187,2.24,1188,3.077,1189,3.077,1190,3.077,1191,2.24,1192,2.24,1193,2.24,1194,2.24,1195,3.077,1196,3.077,1197,2.24,1198,2.24,1199,3.077,1200,2.24,1201,2.24,1202,2.24,1203,2.24,1204,2.24,1205,3.515,1206,2.24,1207,2.24,1208,3.077,1209,4.39,1210,4.276,1211,2.24,1212,2.24,1213,2.24]]],"invertedIndex":[["",{"_index":68,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":161,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["000",{"_index":768,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1",{"_index":164,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{},"overview.html":{}}}],["10.0.1",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":552,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["1000",{"_index":791,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1080",{"_index":628,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1234",{"_index":1112,"title":{},"body":{"index.html":{}}}],["127",{"_index":272,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["128000",{"_index":900,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["13",{"_index":636,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["15",{"_index":688,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["1920",{"_index":626,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["2",{"_index":760,"title":{},"body":{"injectables/WebrtcService.html":{},"overview.html":{}}}],["2.0.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["256000",{"_index":899,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["3",{"_index":820,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"overview.html":{}}}],["30",{"_index":167,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["3rdparty/janus.es",{"_index":615,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["4",{"_index":819,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["5px",{"_index":160,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["6",{"_index":596,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["60",{"_index":169,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["64",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64000",{"_index":902,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["9999",{"_index":553,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["_attachvideoroomhelper(subscriber",{"_index":689,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_createvideoelement(canvasid",{"_index":834,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_get_random_string",{"_index":686,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_mutevideo(videoelement",{"_index":797,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_setmuted(muted",{"_index":504,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["_sizecanvaselement(videowidth",{"_index":804,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["_videoelementsafarihacks(videoelement",{"_index":821,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["accept",{"_index":1150,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":378,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["actual_component",{"_index":180,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["adapter",{"_index":1102,"title":{},"body":{"index.html":{}}}],["add",{"_index":811,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["adding",{"_index":1130,"title":{},"body":{"index.html":{}}}],["addition",{"_index":1069,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1131,"title":{},"body":{"index.html":{}}}],["adopt",{"_index":1015,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":989,"title":{},"body":{"index.html":{}}}],["ahead",{"_index":262,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["alldevices",{"_index":136,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["alldevices.filter((device",{"_index":142,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["allow",{"_index":605,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["allows",{"_index":589,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["allremotefeeds",{"_index":522,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["already",{"_index":477,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["always",{"_index":827,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["and/or",{"_index":1035,"title":{},"body":{"index.html":{}}}],["android",{"_index":603,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["angular",{"_index":355,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["angular/common",{"_index":326,"title":{},"body":{"modules/JanusModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":93,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":95,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{}}}],["angularincluding",{"_index":1106,"title":{},"body":{"index.html":{}}}],["answerremotefeedjsep(jsep",{"_index":742,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["anyone",{"_index":1057,"title":{},"body":{"index.html":{}}}],["anything",{"_index":417,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["api",{"_index":1115,"title":{},"body":{"index.html":{}}}],["app",{"_index":969,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":1110,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1111,"title":{},"body":{"index.html":{}}}],["application",{"_index":1016,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1064,"title":{},"body":{"index.html":{}}}],["arg1",{"_index":711,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["arg2",{"_index":709,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["around",{"_index":588,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["array",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aspect",{"_index":1051,"title":{},"body":{"index.html":{}}}],["assign",{"_index":424,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["async",{"_index":133,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["attach",{"_index":512,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["attach_failed",{"_index":200,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attach_success",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attached",{"_index":199,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attaching",{"_index":198,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["attachmediastream(elemid",{"_index":918,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attachremotefeed",{"_index":922,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attachremotefeeds(remotefeeds",{"_index":511,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["attachvideoroom(url",{"_index":729,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["attribute",{"_index":856,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audio",{"_index":284,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["audio/video",{"_index":293,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["audio_codec",{"_index":238,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["audio_level_average",{"_index":265,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["audioboxcomponent",{"_index":333,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["audiocontext",{"_index":779,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiodevice",{"_index":110,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["audiodeviceid",{"_index":122,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["audiodevices",{"_index":631,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiodevices.length",{"_index":635,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audioinput",{"_index":144,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["audiooutput",{"_index":148,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["audiorecv",{"_index":891,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiosend",{"_index":746,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["audiotrack",{"_index":863,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["authentication",{"_index":1098,"title":{},"body":{"index.html":{}}}],["auto",{"_index":828,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["automatically",{"_index":423,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["available",{"_index":1032,"title":{},"body":{"index.html":{}}}],["availableaudiodevices",{"_index":49,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["availablespeakerdevices",{"_index":50,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["availablevideodevices",{"_index":51,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["average",{"_index":257,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["await",{"_index":137,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["back",{"_index":218,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["backend",{"_index":273,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["background",{"_index":258,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["bars",{"_index":813,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["based",{"_index":1065,"title":{},"body":{"index.html":{}}}],["before",{"_index":480,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["believe",{"_index":998,"title":{},"body":{"index.html":{}}}],["below",{"_index":361,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["better",{"_index":405,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["black",{"_index":812,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["body",{"_index":750,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["body.appendchild(videoelement",{"_index":825,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["boolean",{"_index":226,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["bootstrap",{"_index":314,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["box.component",{"_index":336,"title":{},"body":{"modules/JanusModule.html":{}}}],["box/audio",{"_index":335,"title":{},"body":{"modules/JanusModule.html":{}}}],["box/video",{"_index":348,"title":{},"body":{"modules/JanusModule.html":{}}}],["break",{"_index":503,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["broadcast",{"_index":416,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["browse",{"_index":1153,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":608,"title":{},"body":{"injectables/WebrtcService.html":{},"modules.html":{}}}],["browsers",{"_index":855,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["bug",{"_index":841,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["build",{"_index":976,"title":{},"body":{"index.html":{}}}],["builder",{"_index":61,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["building",{"_index":977,"title":{},"body":{"index.html":{}}}],["burden",{"_index":1083,"title":{},"body":{"index.html":{}}}],["button",{"_index":1082,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":1140,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":661,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["called",{"_index":653,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["calling",{"_index":842,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["camera",{"_index":22,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["camera/microphone",{"_index":1060,"title":{},"body":{"index.html":{}}}],["canvas",{"_index":836,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext",{"_index":788,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.canvas.height",{"_index":762,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.canvas.width",{"_index":759,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.drawimage",{"_index":772,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.drawimage(videoelement",{"_index":757,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.fillrect(0",{"_index":769,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.fillstyle",{"_index":767,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.restore",{"_index":773,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.save",{"_index":770,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvascontext.translate(centerx",{"_index":771,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement",{"_index":838,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.capturestream",{"_index":846,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.getcontext('2d",{"_index":789,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.height",{"_index":862,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaselement.width",{"_index":861,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasheight",{"_index":806,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasid",{"_index":873,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasstream",{"_index":845,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvasstream.addtrack(videostream.getaudiotracks()[0",{"_index":866,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["canvaswidth",{"_index":805,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["capture",{"_index":917,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["capturestream",{"_index":843,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["case",{"_index":283,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["catch((error",{"_index":903,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["center",{"_index":158,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["centerx",{"_index":758,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["centery",{"_index":761,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["change",{"_index":436,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["changed",{"_index":1067,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":39,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["changedetectionstrategy",{"_index":91,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":40,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["changedetector",{"_index":72,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["changedetectorref",{"_index":60,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["changes",{"_index":33,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["changes[key].firstchange",{"_index":501,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["changing",{"_index":29,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"index.html":{}}}],["chrome",{"_index":1073,"title":{},"body":{"index.html":{}}}],["class",{"_index":30,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["clean",{"_index":673,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["cleanup",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanuplocalstream",{"_index":683,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["clear",{"_index":579,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["clearmediastream",{"_index":570,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["clearmediastream(stream",{"_index":576,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["client",{"_index":1013,"title":{},"body":{"index.html":{}}}],["clients",{"_index":975,"title":{},"body":{"index.html":{}}}],["cluster_janusmodule",{"_index":317,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["cluster_janusmodule_declarations",{"_index":318,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["cluster_janusmodule_exports",{"_index":319,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["code",{"_index":1014,"title":{},"body":{"index.html":{}}}],["combinelatest",{"_index":445,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["comes",{"_index":217,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["common",{"_index":622,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["commonmodule",{"_index":325,"title":{},"body":{"modules/JanusModule.html":{}}}],["comms",{"_index":520,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["competitive",{"_index":988,"title":{},"body":{"index.html":{}}}],["complete",{"_index":881,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["component",{"_index":0,"title":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["component_template",{"_index":175,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["components/audio",{"_index":334,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/default",{"_index":338,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/self",{"_index":343,"title":{},"body":{"modules/JanusModule.html":{}}}],["components/video",{"_index":347,"title":{},"body":{"modules/JanusModule.html":{}}}],["condition",{"_index":913,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["conditions",{"_index":487,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["configuration",{"_index":274,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["configure",{"_index":894,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["configured",{"_index":972,"title":{},"body":{"index.html":{}}}],["connect",{"_index":555,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["connection",{"_index":393,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["connections",{"_index":1034,"title":{},"body":{"index.html":{}}}],["consent",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consent_dialog",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentdialog(on",{"_index":700,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["consider",{"_index":488,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["console.log('error",{"_index":754,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('ice",{"_index":710,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('warning",{"_index":652,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["console.log('would",{"_index":937,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["const",{"_index":121,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":624,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["constructor(changedetector",{"_index":59,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["constructor(janusstore",{"_index":379,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["containers/device",{"_index":331,"title":{},"body":{"modules/JanusModule.html":{}}}],["containers/janus",{"_index":328,"title":{},"body":{"modules/JanusModule.html":{}}}],["content",{"_index":157,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["core",{"_index":1026,"title":{},"body":{"index.html":{}}}],["coupled",{"_index":1123,"title":{},"body":{"index.html":{}}}],["create",{"_index":730,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["create/edit/delete",{"_index":1090,"title":{},"body":{"index.html":{}}}],["created",{"_index":582,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["createoffer",{"_index":884,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["credential",{"_index":307,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["crop",{"_index":817,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["cross",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":204,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["currently",{"_index":74,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["currentsubstream",{"_index":236,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":1070,"title":{},"body":{"index.html":{}}}],["customize",{"_index":1134,"title":{},"body":{"index.html":{}}}],["data",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":659,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["declarations",{"_index":313,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":85,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["defaultvideoroomcomponent",{"_index":337,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":65,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["demo",{"_index":1109,"title":{},"body":{"index.html":{}}}],["demos",{"_index":1007,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":312,"title":{"dependencies.html":{}},"body":{"modules/JanusModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":282,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["deploy",{"_index":403,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["deploying",{"_index":363,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["deployment",{"_index":1100,"title":{},"body":{"index.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["desired",{"_index":34,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["destroy",{"_index":105,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["destroyed",{"_index":734,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["detached",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details",{"_index":300,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["determines",{"_index":593,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["developer",{"_index":1024,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1003,"title":{},"body":{"index.html":{}}}],["development",{"_index":1149,"title":{},"body":{"index.html":{}}}],["device",{"_index":14,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["device.kind",{"_index":143,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["device.label",{"_index":150,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["deviceid",{"_index":625,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["devices",{"_index":55,"title":{"interfaces/Devices.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["devices.filter((device",{"_index":632,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["deviceselectorcomponent",{"_index":1,"title":{"components/DeviceSelectorComponent.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["devicesform",{"_index":52,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["deviceupdate",{"_index":57,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["dialog",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":1053,"title":{},"body":{"index.html":{}}}],["directive",{"_index":173,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["directives",{"_index":179,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["directly",{"_index":395,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["dispatch",{"_index":517,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["display",{"_index":154,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["displayname",{"_index":237,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["div.form",{"_index":152,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["docs",{"_index":304,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["document.createelement('video",{"_index":837,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["document.getelementbyid(canvasid",{"_index":839,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["document.getelementbyid(elemid",{"_index":919,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["document.getelementsbytagname('body')[0",{"_index":824,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["documentation",{"_index":1006,"title":{},"body":{"index.html":{}}}],["documented",{"_index":1114,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":782,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["doing",{"_index":906,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["don't",{"_index":267,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["donations",{"_index":1146,"title":{},"body":{"index.html":{}}}],["done",{"_index":876,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["draw(canvascontext",{"_index":756,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["drawing",{"_index":776,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["drawloopactive",{"_index":648,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["dropping",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":606,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["dynamically",{"_index":28,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"index.html":{}}}],["e.g",{"_index":602,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["each",{"_index":261,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["easily",{"_index":353,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["easy",{"_index":968,"title":{},"body":{"index.html":{}}}],["edit",{"_index":983,"title":{},"body":{"index.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["elementref",{"_index":439,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["elements",{"_index":1094,"title":{},"body":{"index.html":{}}}],["embed",{"_index":354,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["emitremotefeeds(remotefeeds",{"_index":506,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["emits",{"_index":430,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["emitted",{"_index":79,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["enabled",{"_index":973,"title":{},"body":{"index.html":{}}}],["encountered",{"_index":432,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["engineering",{"_index":994,"title":{},"body":{"index.html":{}}}],["enlarged",{"_index":1041,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":476,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["entire",{"_index":496,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["enum",{"_index":193,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["enumerations",{"_index":963,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":203,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["error(error",{"_index":698,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["errorcode",{"_index":222,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":431,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["estate",{"_index":1046,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1096,"title":{},"body":{"index.html":{}}}],["event",{"_index":78,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["eventemitter",{"_index":76,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["events",{"_index":277,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["example",{"_index":37,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["exhaustive",{"_index":1087,"title":{},"body":{"index.html":{}}}],["expect",{"_index":724,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["export",{"_index":102,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["exports",{"_index":316,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["factory.each(i",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.sync.makefactory",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback",{"_index":1037,"title":{},"body":{"index.html":{}}}],["false",{"_index":87,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["fatal",{"_index":433,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["features",{"_index":967,"title":{},"body":{"index.html":{}}}],["feed",{"_index":230,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["feed.id",{"_index":929,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feed.state",{"_index":508,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["feed.video_codec",{"_index":928,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feedid",{"_index":940,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["feeds",{"_index":513,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["feel",{"_index":1143,"title":{},"body":{"index.html":{}}}],["field",{"_index":1001,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["find",{"_index":912,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fire",{"_index":516,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["firefox",{"_index":840,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["first",{"_index":440,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["fixing",{"_index":1127,"title":{},"body":{"index.html":{}}}],["flex",{"_index":155,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["following",{"_index":1031,"title":{},"body":{"index.html":{}}}],["form",{"_index":16,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["format",{"_index":397,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["formbuilder",{"_index":62,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["found",{"_index":1124,"title":{},"body":{"index.html":{}}}],["framerate",{"_index":775,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels",{"_index":616,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.attach_success",{"_index":697,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.consent_dialog",{"_index":701,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.media_state",{"_index":703,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_cleanup",{"_index":728,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_local_stream",{"_index":721,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_message",{"_index":715,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_cleanup",{"_index":945,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_feed_message",{"_index":934,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_remote_stream",{"_index":944,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.on_remote_stream",{"_index":726,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.remote_feed_slow_link",{"_index":939,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.remote_feed_webrtc_state",{"_index":936,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["frommodels.webrtc_state",{"_index":707,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["fully",{"_index":1027,"title":{},"body":{"index.html":{}}}],["function",{"_index":792,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["functional",{"_index":1028,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":1138,"title":{},"body":{"index.html":{}}}],["functions",{"_index":567,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["fund",{"_index":1151,"title":{},"body":{"index.html":{}}}],["future",{"_index":911,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["fuzzy",{"_index":909,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["gateway",{"_index":1030,"title":{},"body":{"index.html":{}}}],["getcontext",{"_index":844,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["getdefaultdevices",{"_index":571,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["getdevices",{"_index":134,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["getting",{"_index":965,"title":{"index.html":{}},"body":{}}],["getusermedia",{"_index":572,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["getusermedia(audiodeviceid",{"_index":585,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["give",{"_index":1136,"title":{},"body":{"index.html":{}}}],["given",{"_index":799,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["gives",{"_index":987,"title":{},"body":{"index.html":{}}}],["goal",{"_index":810,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["good",{"_index":278,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["granted",{"_index":478,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["great",{"_index":1008,"title":{},"body":{"index.html":{}}}],["grow",{"_index":163,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["hack",{"_index":784,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle",{"_index":641,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle.createanswer",{"_index":744,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handle.send({message",{"_index":752,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handled",{"_index":1054,"title":{},"body":{"index.html":{}}}],["handleremotejsep(jsep",{"_index":740,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["handles",{"_index":644,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["happen",{"_index":725,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["happy",{"_index":1147,"title":{},"body":{"index.html":{}}}],["height",{"_index":627,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["help",{"_index":1002,"title":{},"body":{"index.html":{}}}],["helper",{"_index":566,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["helps",{"_index":982,"title":{},"body":{"index.html":{}}}],["here",{"_index":400,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["high",{"_index":352,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["highly",{"_index":401,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["http",{"_index":1033,"title":{},"body":{"index.html":{}}}],["http(s",{"_index":386,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":302,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["https://janus.conf.meetecho.com/docs/videoroom.html|janus",{"_index":452,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["https://janus.conf.meetecho.com/janus",{"_index":388,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["httpurl",{"_index":370,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["i'm",{"_index":905,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["i.tostring",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ice",{"_index":1068,"title":{},"body":{"index.html":{}}}],["iceserver",{"_index":298,"title":{"interfaces/IceServer.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["iceservers",{"_index":371,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["icestate(arg1",{"_index":708,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["id",{"_index":189,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":584,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["iff",{"_index":288,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["ignore",{"_index":281,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["implement",{"_index":1021,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":249,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["implements",{"_index":17,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["import",{"_index":89,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["imports",{"_index":349,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{}}}],["improvement",{"_index":1000,"title":{},"body":{"index.html":{}}}],["include",{"_index":1097,"title":{},"body":{"index.html":{}}}],["included",{"_index":591,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["includes",{"_index":974,"title":{},"body":{"index.html":{}}}],["incorporates",{"_index":979,"title":{},"body":{"index.html":{}}}],["index",{"_index":46,"title":{"index.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["information",{"_index":212,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["init",{"_index":654,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["init(iceservers",{"_index":649,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["initialize",{"_index":460,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["initialized",{"_index":197,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["initializing",{"_index":196,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["initialstate",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":562,"title":{"injectables/WebrtcService.html":{}},"body":{"injectables/WebrtcService.html":{},"overview.html":{}}}],["injectables",{"_index":563,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["input",{"_index":92,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["input/output",{"_index":382,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["inputs",{"_index":54,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["inputs/outputs",{"_index":1113,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1101,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1103,"title":{},"body":{"index.html":{}}}],["instance",{"_index":690,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["instance._attachvideoroomhelper(subscriber",{"_index":733,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance._createvideoelement(canvasid",{"_index":888,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance._get_random_string",{"_index":719,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.answerremotefeedjsep(jsep",{"_index":935,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.createoffer",{"_index":914,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.draw(canvascontext",{"_index":794,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.drawloopactive",{"_index":787,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handle",{"_index":695,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handle.send({message",{"_index":895,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.handleremotejsep(jsep",{"_index":717,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.janus",{"_index":731,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.janus.attach",{"_index":924,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.localstream",{"_index":887,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.opaqueid",{"_index":925,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.publishwebrtcstate",{"_index":706,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id",{"_index":926,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id].send({message",{"_index":933,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.remotehandles[feed.id].videocodec",{"_index":927,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.streams[streamid",{"_index":720,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.videoelement",{"_index":889,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["instance.webrtcservice.getusermedia(audiodeviceid",{"_index":886,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["interaction",{"_index":1095,"title":{},"body":{"index.html":{}}}],["interesting",{"_index":980,"title":{},"body":{"index.html":{}}}],["interface",{"_index":184,"title":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["interfaces",{"_index":185,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"overview.html":{}}}],["intermittent",{"_index":904,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["internal",{"_index":132,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["internally",{"_index":1144,"title":{},"body":{"index.html":{}}}],["interval",{"_index":612,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["interval(100).pipe",{"_index":880,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["intimate",{"_index":1025,"title":{},"body":{"index.html":{}}}],["ios",{"_index":1076,"title":{},"body":{"index.html":{}}}],["iphone",{"_index":595,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ismuted",{"_index":372,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ismuted(muted",{"_index":453,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["isn't",{"_index":266,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["issupporteddevice",{"_index":573,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["it's",{"_index":248,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["item",{"_index":865,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["item.tostring(36",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1088,"title":{},"body":{"index.html":{}}}],["itself",{"_index":1141,"title":{},"body":{"index.html":{}}}],["janus",{"_index":41,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["janus.attachmediastream(element",{"_index":920,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.attachmediastream(videoelement",{"_index":850,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.init",{"_index":658,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.iswebrtcsupported",{"_index":663,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janus.plugin.videoroom",{"_index":692,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["januserror",{"_index":377,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["januserrors",{"_index":449,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["januserrors[roominfo.errorcode].message",{"_index":536,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusmodule",{"_index":310,"title":{"modules/JanusModule.html":{}},"body":{"modules/JanusModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["janusrole",{"_index":291,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["janusrole.publisher",{"_index":411,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusserverurl",{"_index":458,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusservice",{"_index":637,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["janusstore",{"_index":367,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["janusvideoroomcomponent",{"_index":177,"title":{"components/JanusVideoroomComponent.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":738,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["joined",{"_index":202,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["joining",{"_index":201,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["jsep",{"_index":714,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["jsepbody",{"_index":753,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["justify",{"_index":156,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["keeping",{"_index":808,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["key",{"_index":500,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["know",{"_index":256,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["knowing",{"_index":279,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["knowledge",{"_index":1020,"title":{},"body":{"index.html":{}}}],["label",{"_index":165,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["landscape",{"_index":818,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["last",{"_index":289,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["leave",{"_index":667,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["led",{"_index":997,"title":{},"body":{"index.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{}}}],["less",{"_index":1005,"title":{},"body":{"index.html":{}}}],["level",{"_index":260,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["library",{"_index":966,"title":{},"body":{"index.html":{}}}],["link",{"_index":301,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":435,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["listdevices",{"_index":574,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["listener",{"_index":297,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["lives",{"_index":1121,"title":{},"body":{"index.html":{}}}],["load",{"_index":462,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["local",{"_index":223,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["localstream",{"_index":646,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["localstreamid",{"_index":224,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["look",{"_index":1142,"title":{},"body":{"index.html":{}}}],["loop",{"_index":777,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["lot",{"_index":484,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["low",{"_index":901,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["macos",{"_index":1075,"title":{},"body":{"index.html":{}}}],["majority",{"_index":993,"title":{},"body":{"index.html":{}}}],["make",{"_index":662,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["makes",{"_index":275,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["making",{"_index":1128,"title":{},"body":{"index.html":{}}}],["many",{"_index":357,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["match",{"_index":420,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["matching",{"_index":182,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(2",{"_index":687,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["maximum",{"_index":1043,"title":{},"body":{"index.html":{}}}],["mdn",{"_index":308,"title":{},"body":{"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{}}}],["meaningful",{"_index":251,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["media",{"_index":364,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["media_state",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediastate(medium",{"_index":702,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["mediastream",{"_index":577,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["medium",{"_index":704,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["message",{"_index":219,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":38,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["methods",{"_index":569,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["microphone",{"_index":23,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["minimal",{"_index":360,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["miscellaneous",{"_index":962,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":996,"title":{},"body":{"index.html":{}}}],["mode",{"_index":816,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["models/janus",{"_index":450,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["models/janus.models",{"_index":101,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["module",{"_index":309,"title":{"modules/JanusModule.html":{}},"body":{"modules/JanusModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":311,"title":{"modules.html":{}},"body":{"modules/JanusModule.html":{},"modules.html":{}}}],["moment",{"_index":190,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"dependencies.html":{},"index.html":{}}}],["moment.moment",{"_index":242,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["momentinstalling",{"_index":1105,"title":{},"body":{"index.html":{}}}],["more",{"_index":299,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["msg",{"_index":716,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["multiple",{"_index":1050,"title":{},"body":{"index.html":{}}}],["mute",{"_index":798,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mute(event",{"_index":800,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["muted",{"_index":225,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["muting",{"_index":1081,"title":{},"body":{"index.html":{}}}],["name",{"_index":69,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":1056,"title":{},"body":{"index.html":{}}}],["navigator.mediadevices.enumeratedevices",{"_index":599,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["navigator.mediadevices.getusermedia(constraints",{"_index":629,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["necessary",{"_index":610,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["need",{"_index":255,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["network",{"_index":1066,"title":{},"body":{"index.html":{}}}],["networks",{"_index":1129,"title":{},"body":{"index.html":{}}}],["never",{"_index":938,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["new",{"_index":103,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":324,"title":{},"body":{"modules/JanusModule.html":{},"index.html":{}}}],["ngonchanges(changes",{"_index":494,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ngondestroy",{"_index":129,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["ngoninit",{"_index":106,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["ngrx/component",{"_index":958,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["noise",{"_index":259,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["non",{"_index":1086,"title":{},"body":{"index.html":{}}}],["none",{"_index":660,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["note",{"_index":244,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["notes",{"_index":286,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["nothing",{"_index":399,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["null",{"_index":527,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":215,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["numeric",{"_index":422,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["numvideotracks",{"_index":234,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(remotefeeds).map(id",{"_index":529,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["observable",{"_index":444,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["of(true",{"_index":656,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["older",{"_index":597,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["on_cleanup",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_data",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_data_open",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_local_stream",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_message",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_cleanup",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_feed_message",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_local_stream",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_remote_stream",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on_remote_stream",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":970,"title":{},"body":{"index.html":{}}}],["onchanges",{"_index":366,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["oncleanup",{"_index":727,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ondestroy",{"_index":36,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["one",{"_index":387,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["oninit",{"_index":35,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["onlocalstream(stream",{"_index":718,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onmessage(msg",{"_index":713,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onpublishownfeed(payload",{"_index":556,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["onremotestream(stream",{"_index":723,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["onrequestsubstream(payload",{"_index":558,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["opaqueid",{"_index":639,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["open",{"_index":916,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["operations",{"_index":1091,"title":{},"body":{"index.html":{}}}],["option",{"_index":25,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["optional",{"_index":71,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["options",{"_index":20,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["order",{"_index":250,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["orientation",{"_index":1049,"title":{},"body":{"index.html":{}}}],["oscillator",{"_index":780,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["otherroomid",{"_index":216,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":483,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["out",{"_index":322,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["output",{"_index":90,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["outputs",{"_index":56,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["outside",{"_index":611,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["overlays",{"_index":1135,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1154,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":953,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":159,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["page",{"_index":1117,"title":{},"body":{"index.html":{}}}],["pain",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":623,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["part",{"_index":981,"title":{},"body":{"index.html":{}}}],["parts",{"_index":1080,"title":{},"body":{"index.html":{}}}],["passed",{"_index":394,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["payload",{"_index":560,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["peer",{"_index":956,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["per",{"_index":518,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["permissions",{"_index":479,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["phones",{"_index":604,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["pick",{"_index":1063,"title":{},"body":{"index.html":{}}}],["picking",{"_index":21,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["pin",{"_index":373,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["pin_required",{"_index":410,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["pins",{"_index":1038,"title":{},"body":{"index.html":{}}}],["platform",{"_index":601,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["platforms",{"_index":1071,"title":{},"body":{"index.html":{}}}],["play",{"_index":829,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["playing",{"_index":857,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["plugin",{"_index":642,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["pluginhandle",{"_index":696,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["portrait",{"_index":815,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["possible",{"_index":227,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["practical",{"_index":247,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["prefer",{"_index":1036,"title":{},"body":{"index.html":{}}}],["previously",{"_index":581,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["private",{"_index":104,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["private_id",{"_index":930,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["privateid",{"_index":214,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":978,"title":{},"body":{"index.html":{}}}],["promise",{"_index":135,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["properly",{"_index":971,"title":{},"body":{"index.html":{}}}],["properties",{"_index":47,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["provided",{"_index":383,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["providedin",{"_index":619,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["providers",{"_index":315,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"overview.html":{}}}],["ptype",{"_index":739,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["public",{"_index":48,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["publish",{"_index":205,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["published",{"_index":923,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["publisher",{"_index":243,"title":{"interfaces/Publisher.html":{}},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["publisher's",{"_index":268,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["publishers",{"_index":295,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["publishing",{"_index":211,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["publishownfeed",{"_index":872,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["publishownfeedpayload",{"_index":446,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishrequested",{"_index":209,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["publishstate",{"_index":207,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["publishstate.error",{"_index":535,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishstate.publishing",{"_index":533,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["publishstate.start",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publishwebrtcstate",{"_index":647,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["put",{"_index":1084,"title":{},"body":{"index.html":{}}}],["quality",{"_index":1062,"title":{},"body":{"index.html":{}}}],["querying",{"_index":568,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["race",{"_index":486,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["randomstring",{"_index":617,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["randomstring(16",{"_index":640,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["ratios",{"_index":1052,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":327,"title":{},"body":{"modules/JanusModule.html":{}}}],["read",{"_index":1058,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":459,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["ready",{"_index":208,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["real",{"_index":1045,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["recommended",{"_index":402,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["recvonly",{"_index":748,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["refer",{"_index":362,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["refresh",{"_index":495,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["register",{"_index":737,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["register(name",{"_index":736,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["release",{"_index":1145,"title":{},"body":{"index.html":{}}}],["reliability",{"_index":406,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remote",{"_index":229,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["remote_feed_slow_link",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remote_feed_webrtc_state",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remotefeed",{"_index":232,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["remotefeedfactory",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remotefeeds",{"_index":457,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"miscellaneous/variables.html":{}}}],["remotefeeds.filter((feed",{"_index":507,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeeds[id",{"_index":530,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeedsarray",{"_index":528,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotefeedstate",{"_index":231,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["remotefeedstate.initialized",{"_index":514,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"miscellaneous/variables.html":{}}}],["remotefeedstate.ready",{"_index":509,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["remotehandles",{"_index":643,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["repo",{"_index":1120,"title":{},"body":{"index.html":{}}}],["republish",{"_index":878,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["request",{"_index":668,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["request_substream",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestanimationframe",{"_index":781,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["requestanimationframe(step",{"_index":796,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["requested",{"_index":210,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["requestedsubstream",{"_index":235,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["requestsubstream(feed",{"_index":951,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["required",{"_index":419,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["requires",{"_index":823,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["requiring",{"_index":1023,"title":{},"body":{"index.html":{}}}],["reset",{"_index":321,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}],["resetkeys",{"_index":499,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["resize",{"_index":1039,"title":{},"body":{"index.html":{}}}],["resources",{"_index":580,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["response",{"_index":755,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["result",{"_index":181,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":183,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retry",{"_index":907,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["retrycount",{"_index":885,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["return",{"_index":456,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":438,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["role",{"_index":292,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["roles",{"_index":290,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["room",{"_index":192,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["room.component",{"_index":341,"title":{},"body":{"modules/JanusModule.html":{}}}],["room.id",{"_index":751,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["room.privateid",{"_index":931,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["room/default",{"_index":340,"title":{},"body":{"modules/JanusModule.html":{}}}],["room/user",{"_index":463,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roomid",{"_index":374,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["roominfo",{"_index":213,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["roominfo.errorcode",{"_index":538,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.muted",{"_index":531,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.publishstate",{"_index":532,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfo.state",{"_index":542,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfofactory",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roominfostate",{"_index":194,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["roominfostate.attach_failed",{"_index":550,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.attached",{"_index":545,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.initialized",{"_index":543,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["roominfostate.start",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooms",{"_index":1092,"title":{},"body":{"index.html":{}}}],["root",{"_index":620,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["rough",{"_index":1137,"title":{},"body":{"index.html":{}}}],["row",{"_index":153,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["rtcpeerconnection",{"_index":396,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["rxjs",{"_index":97,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["rxjs/operators",{"_index":99,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["safari",{"_index":822,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["same",{"_index":809,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["sample",{"_index":1012,"title":{},"body":{"index.html":{}}}],["save",{"_index":941,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["scratch",{"_index":498,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["screen",{"_index":1044,"title":{},"body":{"index.html":{}}}],["see",{"_index":285,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["see/hear",{"_index":294,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["select",{"_index":168,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selected",{"_index":75,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["selector'},{'name",{"_index":176,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["selector.component",{"_index":332,"title":{},"body":{"modules/JanusModule.html":{}}}],["selector.component.html",{"_index":45,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.scss",{"_index":43,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts",{"_index":12,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:36",{"_index":73,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:42",{"_index":77,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:44",{"_index":84,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":81,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:46",{"_index":83,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:47",{"_index":82,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:48",{"_index":88,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector.component.ts:49",{"_index":66,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["selector/device",{"_index":11,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"modules/JanusModule.html":{}}}],["self",{"_index":854,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["selfvideocomponent",{"_index":342,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":1059,"title":{},"body":{"index.html":{}}}],["server",{"_index":365,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["server(s",{"_index":404,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["server.models",{"_index":451,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["server.models.ts",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servers",{"_index":392,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["service",{"_index":1010,"title":{},"body":{"index.html":{}}}],["services/janus.service",{"_index":100,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["session",{"_index":497,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["set",{"_index":271,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["setismuted(muted",{"_index":437,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["setmute(mute",{"_index":950,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["settimeout",{"_index":551,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["settimeout(step",{"_index":795,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["setting",{"_index":481,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["setup",{"_index":270,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["setupjanusroom",{"_index":519,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["shared",{"_index":618,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["sharereplay",{"_index":442,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["sharereplay(1",{"_index":469,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["show",{"_index":18,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"index.html":{}}}],["shown",{"_index":26,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["sides",{"_index":814,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["signalling",{"_index":995,"title":{},"body":{"index.html":{}}}],["simple",{"_index":883,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["simulcast",{"_index":897,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["simulcastmaxbitrates",{"_index":898,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["site",{"_index":1116,"title":{},"body":{"index.html":{}}}],["size",{"_index":1048,"title":{},"body":{"index.html":{}}}],["slow",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slow_link",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slowlink",{"_index":241,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["slowlink(msg",{"_index":712,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["small",{"_index":1119,"title":{},"body":{"index.html":{}}}],["smoothly",{"_index":1055,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["solution",{"_index":910,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["someone",{"_index":1133,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["span.flex",{"_index":162,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["speaker",{"_index":24,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["speakerdevice",{"_index":115,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["speakerdeviceid",{"_index":126,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["speakerdevices",{"_index":634,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["speakers",{"_index":151,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["specifications",{"_index":187,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["specified",{"_index":264,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["specify",{"_index":590,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["specifying",{"_index":1029,"title":{},"body":{"index.html":{}}}],["spend",{"_index":1004,"title":{},"body":{"index.html":{}}}],["spent",{"_index":991,"title":{},"body":{"index.html":{}}}],["spirit",{"_index":1077,"title":{},"body":{"index.html":{}}}],["src/.../index.ts",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.actions.ts",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.factories.ts",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../janus.models.ts",{"_index":964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../janus.reducers.ts",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../random.ts",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/index.ts",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/containers/device",{"_index":10,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["src/lib/containers/index.ts",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/containers/janus",{"_index":350,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["src/lib/factories/janus.factories.ts",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/janus.module.ts",{"_index":323,"title":{},"body":{"modules/JanusModule.html":{}}}],["src/lib/models/janus",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/models/janus.models.ts",{"_index":186,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/services/janus.service.ts",{"_index":564,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:20",{"_index":575,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:31",{"_index":586,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:42",{"_index":598,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:49",{"_index":583,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:66",{"_index":600,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:76",{"_index":592,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/services/janus.service.ts:83",{"_index":578,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["src/lib/shared/random.ts",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/store/actions/janus.actions.ts",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/store/reducers/janus.reducers.ts",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":195,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["start/stop",{"_index":276,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["startdrawingloop(canvaselement",{"_index":774,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["started",{"_index":359,"title":{"index.html":{}},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["startwith",{"_index":441,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["state",{"_index":191,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["states",{"_index":228,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["status",{"_index":206,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["step",{"_index":793,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stepmilliseconds",{"_index":790,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["still",{"_index":296,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["storage",{"_index":1099,"title":{},"body":{"index.html":{}}}],["store",{"_index":959,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["store/actions/janus.actions",{"_index":447,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["store/janus.store",{"_index":448,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["stream",{"_index":490,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stream.getvideotracks",{"_index":942,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stream.getvideotracks().length",{"_index":943,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["stream_id",{"_index":722,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["streamid",{"_index":233,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["streams",{"_index":638,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["string",{"_index":188,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["stun",{"_index":398,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["stun/turn",{"_index":391,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["stun:stun2.l.google.com:19302",{"_index":389,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["style",{"_index":32,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["styleurls",{"_index":42,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["subclassed",{"_index":31,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["subject",{"_index":96,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["subscribe",{"_index":120,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["subscribe(({roominfo",{"_index":525,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["subscriber",{"_index":657,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.complete",{"_index":666,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.error('could",{"_index":915,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.error('webrtc",{"_index":664,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.error(error",{"_index":699,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.next",{"_index":665,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscriber.next(true",{"_index":896,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["subscribers",{"_index":414,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["substream",{"_index":932,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["substreamid",{"_index":559,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["success",{"_index":732,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["success(jsep",{"_index":893,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["success(jsepbody",{"_index":749,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["success(pluginhandle",{"_index":694,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["support",{"_index":1148,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":594,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["supports",{"_index":27,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["supportsspeakerselection",{"_index":53,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["sure",{"_index":220,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["svg",{"_index":1152,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":541,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["switches",{"_index":786,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["switchmap",{"_index":443,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["system",{"_index":269,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["tabs",{"_index":783,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["take",{"_index":1042,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":98,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["takeuntil(this.destroy",{"_index":119,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["takewhile",{"_index":614,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["talking",{"_index":253,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["talking/not",{"_index":252,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["tap",{"_index":613,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["templateurl",{"_index":44,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["tested",{"_index":1072,"title":{},"body":{"index.html":{}}}],["that's",{"_index":986,"title":{},"body":{"index.html":{}}}],["themselves",{"_index":1018,"title":{},"body":{"index.html":{}}}],["there's",{"_index":999,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1078,"title":{},"body":{"index.html":{}}}],["this._mutevideo(videoelement",{"_index":858,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this._setmuted(muted",{"_index":455,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this._setmuted(this.muted",{"_index":534,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this._sizecanvaselement(videosettings.width",{"_index":859,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this._videoelementsafarihacks(videoelement",{"_index":849,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.attachremotefeeds(remotefeedsarray",{"_index":539,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.availableaudiodevices",{"_index":141,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.availablespeakerdevices",{"_index":147,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.availablevideodevices",{"_index":145,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.builder.group",{"_index":109,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.changedetector.detectchanges",{"_index":149,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.cleanuplocalstream",{"_index":671,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.createoffer(subscriber",{"_index":882,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.destroy$.complete",{"_index":131,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["this.destroy$.next",{"_index":130,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["this.devices.audiodeviceid",{"_index":111,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devices.speakerdeviceid",{"_index":116,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devices.videodeviceid",{"_index":114,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform",{"_index":108,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform.get('audiodevice').value",{"_index":123,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform.get('speakerdevice').value",{"_index":127,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform.get('videodevice').value",{"_index":125,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.devicesform.valuechanges.pipe",{"_index":118,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.deviceupdate.emit(devices",{"_index":128,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.drawloopactive",{"_index":682,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.emitremotefeeds(remotefeedsarray",{"_index":540,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.getdevices",{"_index":117,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.handle",{"_index":669,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.createoffer",{"_index":890,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.handleremotejsep({jsep",{"_index":741,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.isaudiomuted",{"_index":947,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.muteaudio",{"_index":949,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.send",{"_index":871,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.send({message",{"_index":670,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.handle.unmuteaudio",{"_index":948,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.httpurl",{"_index":466,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.iceservers",{"_index":650,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.initialized",{"_index":651,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus",{"_index":675,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus.attach",{"_index":691,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.janus.destroy({unload",{"_index":672,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.januserror.emit({code",{"_index":537,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusserverurl",{"_index":464,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore",{"_index":475,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.attachremotefeed",{"_index":515,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.attachvideoroom(this.janusserverurl",{"_index":544,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.initialize(this.iceservers",{"_index":521,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.publishownfeed(payload",{"_index":557,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.readyremotefeeds$.pipe",{"_index":468,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.register",{"_index":546,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.remotefeeds$.pipe",{"_index":523,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.requestsubstream({feed",{"_index":561,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.reset(this.iceservers",{"_index":502,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.roominfo$.pipe",{"_index":471,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.setmute(muted",{"_index":505,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.janusstore.state$.pipe",{"_index":524,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.listdevices",{"_index":630,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.localstream",{"_index":680,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.muted",{"_index":454,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.opaqueid",{"_index":693,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.pin",{"_index":526,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.publishers.emit(publishers",{"_index":510,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.publishwebrtcstate",{"_index":681,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotefeeds",{"_index":467,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.remotehandles",{"_index":678,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotehandles[feed.id",{"_index":743,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.remotehandles[feed.id].send({message",{"_index":952,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.roomid",{"_index":549,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.roominfo",{"_index":470,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.server",{"_index":677,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.setupjanusroom",{"_index":493,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.startdrawingloop(canvaselement",{"_index":867,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.streams",{"_index":676,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.streams[streamid",{"_index":921,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.supportsspeakerselection",{"_index":139,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.unpublishownfeed",{"_index":879,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.userid",{"_index":548,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.username",{"_index":547,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.videoelement",{"_index":679,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.videoelement.remove",{"_index":684,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.webrtc.clearmediastream(stream",{"_index":492,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.webrtc.getdefaultdevices",{"_index":489,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.webrtc.getusermedia",{"_index":491,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["this.webrtc.listdevices",{"_index":138,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.webrtc.supportsspeakerselection",{"_index":140,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["this.webrtcservice.clearmediastream(this.localstream",{"_index":685,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["this.wsurl",{"_index":465,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["those",{"_index":609,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["through",{"_index":358,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["tightly",{"_index":1122,"title":{},"body":{"index.html":{}}}],["time",{"_index":263,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["times",{"_index":1139,"title":{},"body":{"index.html":{}}}],["tireless",{"_index":1126,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toggle_mute_success",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglemute",{"_index":946,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["touchpoints",{"_index":1132,"title":{},"body":{"index.html":{}}}],["transmit",{"_index":1061,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["trickle",{"_index":745,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["true",{"_index":287,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["ts",{"_index":472,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["tslib",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":655,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["type",{"_index":70,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1093,"title":{},"body":{"index.html":{}}}],["uint8array(bytes",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unable",{"_index":554,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["understand",{"_index":1019,"title":{},"body":{"index.html":{}}}],["understanding",{"_index":1009,"title":{},"body":{"index.html":{}}}],["unpublish",{"_index":870,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["unpublishing",{"_index":877,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["unpublishownfeed",{"_index":869,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["until",{"_index":875,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["up",{"_index":482,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["upon",{"_index":1047,"title":{},"body":{"index.html":{}}}],["url",{"_index":385,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["urls",{"_index":305,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["us/docs/web/api/rtciceserver|mdn",{"_index":303,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["use",{"_index":221,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"index.html":{}}}],["used",{"_index":674,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["user",{"_index":19,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user's",{"_index":408,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["userid",{"_index":375,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["username",{"_index":306,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"components/JanusVideoroomComponent.html":{},"interfaces/Publisher.html":{}}}],["users",{"_index":413,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["using",{"_index":778,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["ux",{"_index":1085,"title":{},"body":{"index.html":{}}}],["validators",{"_index":94,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["validators.required",{"_index":112,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["value",{"_index":86,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["variables",{"_index":461,"title":{"miscellaneous/variables.html":{}},"body":{"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":565,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["vast",{"_index":992,"title":{},"body":{"index.html":{}}}],["very",{"_index":246,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["video",{"_index":339,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["video.component",{"_index":345,"title":{},"body":{"modules/JanusModule.html":{}}}],["video/self",{"_index":344,"title":{},"body":{"modules/JanusModule.html":{}}}],["video_codec",{"_index":239,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["videoboxcomponent",{"_index":346,"title":{},"body":{"modules/JanusModule.html":{},"miscellaneous/variables.html":{}}}],["videodevice",{"_index":113,"title":{},"body":{"components/DeviceSelectorComponent.html":{}}}],["videodeviceid",{"_index":124,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{}}}],["videodevices",{"_index":633,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement",{"_index":645,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.addeventlistener('canplay",{"_index":832,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.addeventlistener('playing",{"_index":803,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.autoplay",{"_index":851,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.muted",{"_index":801,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.play",{"_index":833,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.removeeventlistener('playing",{"_index":802,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.setattribute('id",{"_index":853,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.setattribute('playsinline",{"_index":852,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.setattribute('style",{"_index":826,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.videoheight",{"_index":766,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoelement.videowidth",{"_index":764,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoheight",{"_index":765,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoinput",{"_index":146,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["videorecv",{"_index":892,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videoroom",{"_index":178,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["videoroom.component",{"_index":330,"title":{},"body":{"modules/JanusModule.html":{}}}],["videoroom.component.html",{"_index":369,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.scss",{"_index":368,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts",{"_index":351,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:105",{"_index":421,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:111",{"_index":381,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:120",{"_index":390,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:126",{"_index":407,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:140",{"_index":429,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:146",{"_index":434,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:155",{"_index":380,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:61",{"_index":418,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:69",{"_index":426,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:77",{"_index":384,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:83",{"_index":409,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:89",{"_index":425,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom.component.ts:98",{"_index":412,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["videoroom/janus",{"_index":329,"title":{},"body":{"modules/JanusModule.html":{},"components/JanusVideoroomComponent.html":{}}}],["videorooms",{"_index":985,"title":{},"body":{"index.html":{}}}],["videoroomstate",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["videos",{"_index":1040,"title":{},"body":{"index.html":{}}}],["videosend",{"_index":747,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings",{"_index":847,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings.framerate",{"_index":868,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videosettings.height",{"_index":860,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream",{"_index":835,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream.getaudiotracks().find((item",{"_index":864,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videostream.getvideotracks()[0].getsettings",{"_index":848,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["videowidth",{"_index":763,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["view",{"_index":984,"title":{},"body":{"index.html":{}}}],["void",{"_index":107,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["volume",{"_index":240,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"miscellaneous/variables.html":{}}}],["volume/mute",{"_index":245,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["wait",{"_index":874,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["want",{"_index":280,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{},"injectables/WebrtcService.html":{},"index.html":{}}}],["warm",{"_index":908,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["way",{"_index":830,"title":{},"body":{"injectables/WebrtcService.html":{},"miscellaneous/variables.html":{}}}],["we're",{"_index":807,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["webapp",{"_index":356,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["webapps",{"_index":1089,"title":{},"body":{"index.html":{}}}],["webrtc",{"_index":63,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["webrtc_state",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webrtcservice",{"_index":64,"title":{"injectables/WebrtcService.html":{}},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{},"injectables/WebrtcService.html":{}}}],["webrtcstate(on",{"_index":705,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["website",{"_index":1125,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":427,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["weird",{"_index":485,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["well",{"_index":1079,"title":{},"body":{"index.html":{}}}],["whenever",{"_index":80,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"components/JanusVideoroomComponent.html":{}}}],["width",{"_index":166,"title":{},"body":{"components/DeviceSelectorComponent.html":{},"injectables/WebrtcService.html":{}}}],["window.crypto.getrandomvalues(array",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.cypress",{"_index":473,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["window.janusstore",{"_index":474,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["window.location.reload",{"_index":735,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["windows",{"_index":1074,"title":{},"body":{"index.html":{}}}],["wish",{"_index":1107,"title":{},"body":{"index.html":{}}}],["within",{"_index":607,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["without",{"_index":1022,"title":{},"body":{"index.html":{}}}],["won't",{"_index":415,"title":{},"body":{"components/JanusVideoroomComponent.html":{}}}],["work",{"_index":785,"title":{},"body":{"injectables/WebrtcService.html":{},"index.html":{}}}],["working",{"_index":990,"title":{},"body":{"index.html":{}}}],["works",{"_index":1011,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":587,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["wrappers",{"_index":621,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["write",{"_index":1017,"title":{},"body":{"index.html":{}}}],["written",{"_index":1118,"title":{},"body":{"index.html":{}}}],["wss://janus.conf.meetecho.com/ws",{"_index":428,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["wsurl",{"_index":376,"title":{},"body":{"components/JanusVideoroomComponent.html":{},"index.html":{}}}],["yarn",{"_index":1104,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":831,"title":{},"body":{"injectables/WebrtcService.html":{}}}],["you'll",{"_index":254,"title":{},"body":{"interfaces/Devices.html":{},"interfaces/IceServer.html":{},"interfaces/Publisher.html":{}}}],["yourappmodule",{"_index":1108,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":320,"title":{},"body":{"modules/JanusModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/DeviceSelectorComponent.html":{"url":"components/DeviceSelectorComponent.html","title":"component - DeviceSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DeviceSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/containers/device-selector/device-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Device selector form. Implements a form that will show the user options for picking their camera,\nmicrophone, and speaker device. The speaker option is only shown if the device supports dynamically\nchanging the speaker. This class can be subclassed if style changes are desired.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                janus-device-selector\n            \n\n            \n                styleUrls\n                ./device-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./device-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableAudioDevices\n                            \n                            \n                                    Public\n                                availableSpeakerDevices\n                            \n                            \n                                    Public\n                                availableVideoDevices\n                            \n                            \n                                    Public\n                                devicesForm\n                            \n                            \n                                    Public\n                                supportsSpeakerSelection\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                devices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deviceUpdate\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef, builder: FormBuilder, webrtc: WebrtcService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/containers/device-selector/device-selector.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webrtc\n                                                  \n                                                        \n                                                                        WebrtcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        devices\n                    \n                \n                \n                    \n                        Type :         Devices\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:36\n                            \n                        \n                \n                    \n                        Currently selected devices\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deviceUpdate\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:42\n                            \n                        \n                \n                    \n                        Event emitted whenever the user changes the devices in the form\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableAudioDevices\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableSpeakerDevices\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableVideoDevices\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devicesForm\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportsSpeakerSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/containers/device-selector/device-selector.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, EventEmitter, OnDestroy, OnInit, Output, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { WebrtcService } from '../../services/janus.service';\nimport { Devices } from '../../models/janus.models';\n\n\n/**\n * Device selector form. Implements a form that will show the user options for picking their camera,\n * microphone, and speaker device. The speaker option is only shown if the device supports dynamically\n * changing the speaker. This class can be subclassed if style changes are desired.\n * @example\n * \n * \n */\n@Component({\n  selector: 'janus-device-selector',\n  templateUrl: './device-selector.component.html',\n  styleUrls: [\n    './device-selector.component.scss',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeviceSelectorComponent implements OnInit, OnDestroy {\n\n  /**\n   * Currently selected devices\n   */\n  @Input()\n  devices: Devices;\n\n  /**\n   * Event emitted whenever the user changes the devices in the form\n   */\n  @Output()\n  deviceUpdate = new EventEmitter();\n\n  public devicesForm;\n  public availableAudioDevices;\n  public availableVideoDevices;\n  public availableSpeakerDevices;\n  public supportsSpeakerSelection = false;\n  private destroy$ = new Subject();\n\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private builder: FormBuilder,\n    private webrtc: WebrtcService,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.devicesForm = this.builder.group({\n      audioDevice: [this.devices.audioDeviceId, [Validators.required]],\n      videoDevice: [this.devices.videoDeviceId, [Validators.required]],\n      speakerDevice: [this.devices.speakerDeviceId, [Validators.required]],\n    });\n    this.getDevices();\n\n    this.devicesForm.valueChanges.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      const devices = {\n        audioDeviceId: this.devicesForm.get('audioDevice').value,\n        videoDeviceId: this.devicesForm.get('videoDevice').value,\n        speakerDeviceId: this.devicesForm.get('speakerDevice').value,\n      };\n      this.deviceUpdate.emit(devices);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /** @internal */\n  async getDevices(): Promise {\n    const allDevices = await this.webrtc.listDevices();\n    this.supportsSpeakerSelection = this.webrtc.supportsSpeakerSelection();\n    this.availableAudioDevices = allDevices.filter((device) => device.kind === 'audioinput');\n    this.availableVideoDevices = allDevices.filter((device) => device.kind === 'videoinput');\n    this.availableSpeakerDevices = allDevices.filter((device) => device.kind === 'audiooutput');\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n    \n        \n    \n      Microphone\n      \n      \n        {{ device.label }}\n      \n    \n\n    \n      Camera\n      \n      \n        {{ device.label }}\n      \n    \n\n    \n      Speakers\n      \n      \n        {{ device.label }}\n      \n    \n\n\n    \n\n    \n                \n                    ./device-selector.component.scss\n                \n                div.form-row {\n    display: flex;\n    justify-content: center;\n    padding: 5px 0;\n\n    span.flex {\n        flex-grow: 1;\n    }\n\n    label {\n        width: 30%;\n    }\n\n    select {\n        width: 60%;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Microphone                    {{ device.label }}                    Camera                    {{ device.label }}                    Speakers                    {{ device.label }}          '\n    var COMPONENTS = [{'name': 'DeviceSelectorComponent', 'selector': 'janus-device-selector'},{'name': 'JanusVideoroomComponent', 'selector': 'janus-videoroom'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Devices.html":{"url":"interfaces/Devices.html","title":"interface - Devices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Devices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                Device specifications\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        audioDeviceId\n                                \n                                \n                                        speakerDeviceId\n                                \n                                \n                                        videoDeviceId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audioDeviceId\n                                    \n                                \n                                \n                                    \n                                        audioDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Microphone Device ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speakerDeviceId\n                                    \n                                \n                                \n                                    \n                                        speakerDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Speaker Device ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoDeviceId\n                                    \n                                \n                                \n                                    \n                                        videoDeviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Camera Device ID \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IceServer.html":{"url":"interfaces/IceServer.html","title":"interface - IceServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IceServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                IceServer configuration. More details are in the MDN Docs\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        credential\n                                \n                                \n                                        urls\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credential\n                                    \n                                \n                                \n                                    \n                                        credential:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urls\n                                    \n                                \n                                \n                                    \n                                        urls:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JanusModule.html":{"url":"modules/JanusModule.html","title":"module - JanusModule","body":"\n                   \n\n\n\n\n    Modules\n    JanusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JanusModule\n\n\n\ncluster_JanusModule_declarations\n\n\n\ncluster_JanusModule_exports\n\n\n\n\nDeviceSelectorComponent\n\nDeviceSelectorComponent\n\n\n\nJanusModule\n\nJanusModule\n\nJanusModule -->\n\nDeviceSelectorComponent->JanusModule\n\n\n\n\n\nJanusVideoroomComponent\n\nJanusVideoroomComponent\n\nJanusModule -->\n\nJanusVideoroomComponent->JanusModule\n\n\n\n\n\nDeviceSelectorComponent \n\nDeviceSelectorComponent \n\nDeviceSelectorComponent  -->\n\nJanusModule->DeviceSelectorComponent \n\n\n\n\n\nJanusVideoroomComponent \n\nJanusVideoroomComponent \n\nJanusVideoroomComponent  -->\n\nJanusModule->JanusVideoroomComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/janus.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DeviceSelectorComponent\n                        \n                        \n                            JanusVideoroomComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DeviceSelectorComponent\n                        \n                        \n                            JanusVideoroomComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { JanusVideoroomComponent } from './containers/janus-videoroom/janus-videoroom.component';\nimport { DeviceSelectorComponent } from './containers/device-selector/device-selector.component';\nimport { AudioBoxComponent } from './components/audio-box/audio-box.component';\nimport { DefaultVideoRoomComponent } from './components/default-video-room/default-video-room.component';\nimport { SelfVideoComponent } from './components/self-video/self-video.component';\nimport { VideoBoxComponent } from './components/video-box/video-box.component';\n\n\n@NgModule({\n  declarations: [\n    JanusVideoroomComponent,\n    DeviceSelectorComponent,\n    AudioBoxComponent,\n    DefaultVideoRoomComponent,\n    SelfVideoComponent,\n    VideoBoxComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n  ],\n  exports: [\n    JanusVideoroomComponent,\n    DeviceSelectorComponent,\n  ]\n})\nexport class JanusModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JanusVideoroomComponent.html":{"url":"components/JanusVideoroomComponent.html","title":"component - JanusVideoroomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JanusVideoroomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/containers/janus-videoroom/janus-videoroom.component.ts\n\n\n    \n        Description\n    \n    \n        Janus videoroom component. This is a high level component to easily embed a janus videoroom in any angular webapp.\nThere are many options that can be set through Inputs. However, you can get started with the minimal example below.\nRefer to the Janus Videoroom Docs for deploying your own\nJanus media server.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            JanusStore\n                \n            \n\n\n            \n                selector\n                janus-videoroom\n            \n\n            \n                styleUrls\n                ./janus-videoroom.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./janus-videoroom.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                devices\n                            \n                            \n                                httpUrl\n                            \n                            \n                                iceServers\n                            \n                            \n                                isMuted\n                            \n                            \n                                pin\n                            \n                            \n                                role\n                            \n                            \n                                roomId\n                            \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                            \n                                wsUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                janusError\n                            \n                            \n                                publishers\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isMuted\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(janusStore: JanusStore, webrtc: WebrtcService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:155\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        janusStore\n                                                  \n                                                        \n                                                                    JanusStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webrtc\n                                                  \n                                                        \n                                                                        WebrtcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        devices\n                    \n                \n                \n                    \n                        Type :         Devices\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:111\n                            \n                        \n                \n                    \n                        Input/output devices to use. If not provided, will use the default system devices\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        httpUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:77\n                            \n                        \n                \n                    \n                        URL for the http(s) interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\nExample: https://janus.conf.meetecho.com/janus\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        iceServers\n                    \n                \n                \n                    \n                        Type :         IceServer[]\n\n                    \n                \n                \n                    \n                        Default value : [{urls: 'stun:stun2.l.google.com:19302'}]\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:120\n                            \n                        \n                \n                    \n                        STUN/TURN servers to use for the connection. These are passed directly to RTCPeerConnection\nRefer to the MDN Docs for details on the format.\nThe component will use a public STUN server if nothing is specified here. However, it's highly recommended that the user\ndeploy and use their own STUN/TURN server(s) for better reliability.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isMuted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:126\n                            \n                        \n                \n                    \n                        When set to true, the user's audio is muted.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pin\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:83\n                            \n                        \n                \n                    \n                        PIN for joining room. Must be specified if pin_required is true for the requested roomId.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n                \n                    \n                        Type :         JanusRole\n\n                    \n                \n                \n                    \n                        Default value : JanusRole.publisher\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:98\n                            \n                        \n                \n                    \n                        Role for the user in the videoroom.\nUsers can either be publishers or subscribers. Publishers will publish their video and audio to the room.\nSubscribers will see/hear all publishers, but won't broadcast anything.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        roomId\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:61\n                            \n                        \n                \n                    \n                        Required Janus room id. Can be either a string or a number. This must match server configuration.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:105\n                            \n                        \n                \n                    \n                        Numeric or string Id of publisher. Type must match server configuration. If not provided,\njanus server will automatically assign an ID to the user.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n                \n                    \n                        Default value : 'janus user'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:89\n                            \n                        \n                \n                    \n                        Display name for the user in the videoroom\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        wsUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:69\n                            \n                        \n                \n                    \n                        URL for the websocket interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\nExample: wss://janus.conf.meetecho.com/ws\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        janusError\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:140\n                            \n                        \n                \n                    \n                        Emits errors encountered. These errors are fatal.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        publishers\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:146\n                            \n                        \n                \n                    \n                        Emits list of current publishers whenever there is a change to the publisher list\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isMuted\n                    \n                \n\n\n                \n                    \n                        setisMuted(muted: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/containers/janus-videoroom/janus-videoroom.component.ts:126\n                                \n                            \n                    \n                        \n                                When set to true, the user's audio is muted.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            muted\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import * as moment from 'moment';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { first, startWith, shareReplay, takeUntil, switchMap } from 'rxjs/operators';\nimport { Observable, Subject, combineLatest } from 'rxjs';\n\nimport {\n  Devices,\n  JanusRole,\n  PublishState,\n  Publisher,\n  RemoteFeed,\n  RemoteFeedState,\n  RoomInfo,\n  RoomInfoState,\n  IceServer,\n} from '../../models/janus.models';\n\nimport { PublishOwnFeedPayload } from '../../store/actions/janus.actions';\nimport { JanusStore } from '../../store/janus.store';\nimport { JanusErrors } from '../../models/janus-server.models';\nimport { WebrtcService } from '../../services/janus.service';\n\n/**\n * Janus videoroom component. This is a high level component to easily embed a janus videoroom in any angular webapp.\n * There are many options that can be set through Inputs. However, you can get started with the minimal example below.\n * Refer to the {@link https://janus.conf.meetecho.com/docs/videoroom.html|Janus Videoroom Docs} for deploying your own\n * Janus media server.\n * @example\n * \n * \n *\n */\n@Component({\n  selector: 'janus-videoroom',\n  templateUrl: './janus-videoroom.component.html',\n  styleUrls: ['./janus-videoroom.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [JanusStore],\n})\nexport class JanusVideoroomComponent implements OnInit, OnDestroy, OnChanges {\n\n  /**\n   * *Required* Janus room id. Can be either a string or a number. This must match server configuration.\n   */\n  @Input()\n  roomId: string | number;\n\n  /**\n   * URL for the websocket interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\n   *\n   * Example: `wss://janus.conf.meetecho.com/ws`\n   */\n  @Input()\n  wsUrl: string;\n\n  /**\n   * URL for the http(s) interface of the Janus server. At least one of wsUrl or httpUrl must be specified.\n   *\n   * Example: `https://janus.conf.meetecho.com/janus`\n   */\n  @Input()\n  httpUrl: string;\n\n  /**\n   * PIN for joining room. Must be specified if `pin_required` is true for the requested roomId.\n   */\n  @Input()\n  pin?: string;\n\n  /**\n   * Display name for the user in the videoroom\n   */\n  @Input()\n  userName = 'janus user';\n\n  /**\n   * Role for the user in the videoroom.\n   *\n   * Users can either be publishers or subscribers. Publishers will publish their video and audio to the room.\n   * Subscribers will see/hear all publishers, but won't broadcast anything.\n   */\n  @Input()\n  role: JanusRole = JanusRole.publisher;\n\n  /**\n   * Numeric or string Id of publisher. Type must match server configuration. If not provided,\n   * janus server will automatically assign an ID to the user.\n   */\n  @Input()\n  userId?: string;\n\n  /**\n   * Input/output devices to use. If not provided, will use the default system devices\n   */\n  @Input()\n  devices?: Devices;\n\n  /**\n   * STUN/TURN servers to use for the connection. These are passed directly to `RTCPeerConnection`\n   * Refer to the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs} for details on the format.\n   * The component will use a public STUN server if nothing is specified here. However, it's highly recommended that the user\n   * deploy and use their own STUN/TURN server(s) for better reliability.\n   */\n  @Input()\n  iceServers: IceServer[] = [{urls: 'stun:stun2.l.google.com:19302'}];\n\n  /**\n   * When set to true, the user's audio is muted.\n   */\n  @Input()\n  set isMuted(muted: boolean) {\n    this.muted = muted;\n    this._setMuted(muted);\n  }\n\n  /**\n   * @ignore\n   */\n  get isMuted(): boolean { return this.muted; }\n\n  /**\n   * Emits errors encountered. These errors are fatal.\n   */\n  @Output()\n  janusError = new EventEmitter();\n\n  /**\n   * Emits list of current publishers whenever there is a change to the publisher list\n   */\n  @Output()\n  publishers = new EventEmitter();\n\n  /** @internal */\n  roomInfo$: Observable;\n  /** @internal */\n  remoteFeeds$: Observable;\n\n  private muted = false;\n  private destroy$ = new Subject();\n  private janusServerUrl: string;\n\n  constructor(\n    private readonly janusStore: JanusStore,\n    private webrtc: WebrtcService,\n  ) { }\n\n  async ngOnInit(): Promise {\n    // Initialize variables and load the room/user\n\n    this.janusServerUrl = this.wsUrl ? this.wsUrl : this.httpUrl;\n\n    this.remoteFeeds$ = this.janusStore.readyRemoteFeeds$.pipe(\n      shareReplay(1),\n    );\n\n    this.roomInfo$ = this.janusStore.roomInfo$.pipe(\n      shareReplay(1)\n    );\n\n    // @ts-ignore\n    if (window.Cypress) {\n      // @ts-ignore\n      window.janusStore = this.janusStore;\n    }\n\n    // This ensures that the user has already granted all permissions before we\n    // start setting up the videoroom. Otherwise there are a lot of weird race\n    // conditions to consider\n    // const devices = await this.webrtc.getDefaultDevices();\n    const stream = await this.webrtc.getUserMedia('', '');\n    this.webrtc.clearMediaStream(stream);\n    this.setupJanusRoom();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges(changes): void {\n    // For some changes, we refresh the entire session from scratch\n\n    const resetKeys = [\n      'roomId',\n      'wsUrl',\n      'httpUrl',\n      'iceServers',\n      'pin',\n      'role',\n      'userName',\n      'userId',\n    ];\n\n    for (const key of resetKeys) {\n      if (\n        key in changes\n        && !changes[key].firstChange\n      ) {\n        this.janusServerUrl = this.wsUrl ? this.wsUrl : this.httpUrl;\n        this.janusStore.reset(this.iceServers);\n        break;\n      }\n    }\n  }\n\n  /** @internal */\n  _setMuted(muted: boolean): void {\n    this.janusStore.setMute(muted);\n  }\n\n  /** @internal */\n  emitRemoteFeeds(remoteFeeds: RemoteFeed[]): void {\n    const publishers: Publisher[] = remoteFeeds.filter((feed) => feed.state === RemoteFeedState.ready);\n    this.publishers.emit(publishers);\n  }\n\n  /** @internal */\n  attachRemoteFeeds(remoteFeeds: RemoteFeed[], roomInfo: RoomInfo, pin: string): void {\n    // Attach remote feeds\n\n    for (const feed of remoteFeeds) {\n      if (feed.state === RemoteFeedState.initialized) {\n\n        this.janusStore.attachRemoteFeed({\n          roomInfo,\n          feed,\n          pin,\n        });\n        // Only fire one dispatch per subscribe\n        break;\n      }\n    }\n  }\n\n  /** @internal */\n  setupJanusRoom(): void {\n    // Setup comms with janus server\n\n    this.janusStore.initialize(this.iceServers);\n\n    const allRemoteFeeds$: Observable = this.janusStore.remoteFeeds$.pipe(\n      startWith([])\n    );\n    this.janusStore.state$.pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(({roomInfo, remoteFeeds}) => {\n\n      const pin = this.pin ? this.pin : null;\n      const remoteFeedsArray = Object.keys(remoteFeeds).map(id => remoteFeeds[id]);\n      if (roomInfo.muted !== this.muted && roomInfo.publishState === PublishState.publishing) {\n        this._setMuted(this.muted);\n      }\n      if (roomInfo.publishState === PublishState.error) {\n        const message = JanusErrors[roomInfo.errorCode].message;\n        this.janusError.emit({code: roomInfo.errorCode, message});\n      }\n\n      this.attachRemoteFeeds(remoteFeedsArray, roomInfo, pin);\n      this.emitRemoteFeeds(remoteFeedsArray);\n\n      switch (roomInfo.state) {\n        case RoomInfoState.initialized: {\n          this.janusStore.attachVideoRoom(this.janusServerUrl);\n          break;\n        }\n        case RoomInfoState.attached: {\n          this.janusStore.register({\n            name: this.userName,\n            userId: this.userId,\n            roomId: this.roomId,\n            pin,\n          });\n          break;\n        }\n        case RoomInfoState.attach_failed: {\n          if (this.janusServerUrl !== this.httpUrl) {\n            this.janusServerUrl = this.httpUrl;\n            setTimeout(() => {\n              this.janusStore.attachVideoRoom(this.janusServerUrl);\n            }, 100);\n          } else {\n            this.janusError.emit({code: 9999, message: 'Unable to connect to media server'});\n          }\n          break;\n        }\n      }\n    });\n  }\n\n  /** @internal */\n  onPublishOwnFeed(payload: PublishOwnFeedPayload): void {\n    this.janusStore.publishOwnFeed(payload);\n  }\n\n  /** @internal */\n  onRequestSubstream(payload: {feed: RemoteFeed, substreamId: number}): void {\n    const {feed, substreamId} = payload;\n    this.janusStore.requestSubstream({feed, substreamId});\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./janus-videoroom.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DeviceSelectorComponent', 'selector': 'janus-device-selector'},{'name': 'JanusVideoroomComponent', 'selector': 'janus-videoroom'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JanusVideoroomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Publisher.html":{"url":"interfaces/Publisher.html","title":"interface - Publisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Publisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/janus.models.ts\n        \n\n            \n                Description\n            \n            \n                Information for a publisher. Note that the volume/mute information is not\nvery practical in how it's implemented in janus currently. In order to get\nmeaningful information about talking/not talking, you'll need to know the\naverage background noise level of each publisher ahead of time. This is\nspecified at audio_level_average in the room. This isn't practical if you\ndon't know the publisher's system setup ahead of time. We set the\naudio_level_average to 127 in the backend configuration. That makes the\nstart/stop talking events good for knowing if the remote user has muted.\nYou might want to ignore this information depending on your use case.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        id\n                                \n                                \n                                        muted\n                                \n                                \n                                        volume\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display name of the publisher \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Janus ID of the publisher \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                    \n                                \n                                \n                                    \n                                        muted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Set to true iff the last volume event had the volume at 127 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        volume\n                                    \n                                \n                                \n                                    \n                                        volume:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current volume of the publisher's audio. See notes in the interface description.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Device specifications\n */\nexport interface Devices {\n\n  /** Microphone Device ID */\n  audioDeviceId: string;\n\n  /** Camera Device ID */\n  videoDeviceId: string;\n\n  /** Speaker Device ID */\n  speakerDeviceId: string;\n}\n\n/**\n * @internal\n * State for a room\n */\nexport enum RoomInfoState {\n  start = 'start',\n  initializing = 'initializing',\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  attach_failed = 'attach_failed',\n  joining = 'joining',\n  joined = 'joined',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current publish status\n */\nexport enum PublishState {\n  start = 'start',\n  ready = 'ready',\n  publishRequested = 'publish requested',\n  publishing = 'publishing',\n  error = 'error',\n}\n\n/**\n * @internal\n * State information for a room\n */\nexport interface RoomInfo {\n  state: RoomInfoState;\n  id: string;\n  description: string;\n  privateId: number;\n  otherRoomId: number;  // This comes back in the \"joined\" message. Not sure what to use it for\n\n  errorCode: number;\n\n  // Local publishing state\n  publishState: PublishState;\n  localStreamId: string;\n  muted: boolean;\n}\n\n/**\n * @internal\n * Possible states for a remote feed\n */\nexport enum RemoteFeedState {\n  initialized = 'initialized',\n  attaching = 'attaching',\n  attached = 'attached',\n  ready = 'ready',\n  error = 'error',\n}\n\n/**\n * @internal\n * Current state of a remote feed\n */\nexport interface RemoteFeed {\n  state: RemoteFeedState;\n  id: string;\n  streamId: string;\n  numVideoTracks: number;\n  requestedSubstream: number;\n  currentSubstream: number;\n  displayName: string;\n  audio_codec: string;\n  video_codec: string;\n  volume: number;\n  muted: boolean;\n  slowLink: moment.Moment;\n}\n\n/**\n * Information for a publisher. Note that the volume/mute information is not\n * very practical in how it's implemented in janus currently. In order to get\n * meaningful information about talking/not talking, you'll need to know the\n * average background noise level of each publisher ahead of time. This is\n * specified at `audio_level_average` in the room. This isn't practical if you\n * don't know the publisher's system setup ahead of time. We set the\n * `audio_level_average` to 127 in the backend configuration. That makes the\n * start/stop talking events good for knowing if the remote user has muted.\n * You might want to ignore this information depending on your use case.\n */\nexport interface Publisher {\n\n  /** Janus ID of the publisher */\n  id: string;\n\n  /** Display name of the publisher */\n  displayName: string;\n\n  /**\n   * Current volume of the publisher's audio. See notes in the interface description.\n   */\n  volume: number;\n\n  /** Set to true iff the last volume event had the volume at 127 */\n  muted: boolean;\n}\n\n/**\n * Possible roles for a user.\n */\nexport enum JanusRole {\n  /** A user in this role will publish their audio/video and see/hear all other publishers */\n  publisher = 'publisher',\n\n  /** A user in this role will *not* publish their audio/video. They will still see/hear all other publishers */\n  listener = 'listener',\n}\n\n/**\n * IceServer configuration. More details are in the {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer|MDN Docs}\n */\nexport interface IceServer {\n  urls: string;\n  username?: string;\n  credential?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebrtcService.html":{"url":"injectables/WebrtcService.html","title":"injectable - WebrtcService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebrtcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/janus.service.ts\n        \n\n            \n                Description\n            \n            \n                Various helper functions for querying devices\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearMediaStream\n                            \n                            \n                                    Async\n                                getDefaultDevices\n                            \n                            \n                                getUserMedia\n                            \n                            \n                                isSupportedDevice\n                            \n                            \n                                listDevices\n                            \n                            \n                                supportsSpeakerSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/janus.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearMediaStream\n                        \n                        \n                    \n                \n            \n            \n                \nclearMediaStream(stream: MediaStream)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:83\n                \n            \n\n\n            \n                \n                    Clear all resources for a previously created media stream\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stream\n                                    \n                                            MediaStream\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getDefaultDevices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:49\n                \n            \n\n\n            \n                \n                    Returns the device IDs for the default audio, video, and speaker device\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserMedia\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserMedia(audioDeviceId: string | null, videoDeviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:31\n                \n            \n\n\n            \n                \n                    Wrapper around getUserMedia that allows the user to specify the audio and video device ids\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    audioDeviceId\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Device ID of the desired audio device. If null, audio will not be included\n\n                                    \n                                \n                                \n                                    videoDeviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Device ID of the desired video device.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupportedDevice\n                        \n                        \n                    \n                \n            \n            \n                \nisSupportedDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:76\n                \n            \n\n\n            \n                \n                    Determines if the current device is supported. Currently, iPhone 6 and older are not supported.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listDevices\n                        \n                        \n                    \n                \n            \n            \n                \nlistDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:42\n                \n            \n\n\n            \n                \n                    Wrapper around navigator.mediaDevices.enumerateDevices\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supportsSpeakerSelection\n                        \n                        \n                    \n                \n            \n            \n                \nsupportsSpeakerSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/services/janus.service.ts:66\n                \n            \n\n\n            \n                \n                    Determines if the current platform supports setting the speaker. Some devices, e.g., most android\nphones, do not allow the dynamic setting of the speaker from within the browser. For those devices,\nit's necessary to change the output device outside of the browser.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable, of, interval } from 'rxjs';\nimport { tap, takeWhile } from 'rxjs/operators';\n\nimport Janus from '../3rdparty/janus.es';\n\nimport * as fromModels from '../models/janus-server.models';\nimport { RemoteFeed, RoomInfo, IceServer } from '../models/janus.models';\n\n\nimport { randomString } from '../shared';\n\n/**\n * Various helper functions for querying devices\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebrtcService {\n  // Wrappers around some common webrtc functions\n\n  constructor() { }\n\n  /**\n   * Wrapper around getUserMedia that allows the user to specify the audio and video device ids\n   *\n   * @param audioDeviceId Device ID of the desired audio device. If null, audio will not be included\n   * @param videoDeviceId Device ID of the desired video device.\n   */\n  getUserMedia(audioDeviceId: string | null, videoDeviceId: string): Promise {\n    const constraints = {\n      audio: audioDeviceId !== null ? {deviceId: audioDeviceId} : false,\n      video: {deviceId: videoDeviceId, width: 1920, height: 1080},\n    };\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  /**\n   * Wrapper around `navigator.mediaDevices.enumerateDevices`\n   */\n  listDevices(): Promise {\n    return navigator.mediaDevices.enumerateDevices();\n  }\n\n  /**\n   * Returns the device IDs for the default audio, video, and speaker device\n   */\n  async getDefaultDevices(): Promise {\n    const devices = await this.listDevices();\n    const audioDevices = devices.filter((device) => device.kind === 'audioinput');\n    const videoDevices = devices.filter((device) => device.kind === 'videoinput');\n    const speakerDevices = devices.filter((device) => device.kind === 'audiooutput');\n    const audioDeviceId = audioDevices.length = 13;\n  }\n}\n\n/** @internal */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JanusService {\n  private streams = {};\n  private initialized = false;\n  private janus: any;\n  private server: string;\n  private opaqueId: string = randomString(16);\n  public handle;   // Handle to the videoroom plugin\n  private remoteHandles: { [id: number]: any } = {};   // Handles to remote streams\n\n  private videoElement: any;\n  private localStream: any;\n  private publishWebrtcState = false;\n\n  private drawLoopActive: boolean;\n  private iceServers: {urls: string}[];\n\n  constructor(\n    private webrtcService: WebrtcService,\n  ) {}\n\n  init(iceServers: IceServer[]): Observable {\n    // Initialize Janus\n    this.iceServers = iceServers;\n\n    if (this.initialized) {\n      console.log('Warning: called janus init twice');\n      return of(true);\n    }\n\n    return new Observable(\n      subscriber => {\n        Janus.init({\n          debug: 'none',\n          callback(): void {\n            // Make sure the browser supports WebRTC\n            if (!Janus.isWebrtcSupported()) {\n              subscriber.error('WebRTC is not supported');\n            }\n            subscriber.next();\n            subscriber.complete();\n          }\n        });\n      }\n    );\n  }\n\n  destroy(): void {\n    const leave = { request: 'leave' };\n\n    if (this.handle) {\n      this.handle.send({message: leave});\n    }\n    this.cleanupLocalStream();\n    this.janus.destroy({unload: true});\n\n    // Clean up all variables used\n    this.janus = null;\n    this.handle = null;\n    this.streams = {};\n    this.initialized = false;\n    this.janus = null;\n    this.server = null;\n    this.handle = null;\n    this.remoteHandles = {};\n    this.videoElement = null;\n    this.localStream = null;\n    this.publishWebrtcState = false;\n    this.drawLoopActive = null;\n    this.iceServers = [];\n  }\n\n  cleanupLocalStream(): void {\n    if (this.videoElement) {\n      this.videoElement.remove();\n    }\n    if (this.localStream) {\n      this.webrtcService.clearMediaStream(this.localStream);\n    }\n    this.drawLoopActive = false;\n  }\n\n  _get_random_string(): string {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  }\n\n  _attachVideoRoomHelper(subscriber): void {\n    const instance = this;\n    this.janus.attach({\n      plugin: 'janus.plugin.videoroom',\n      opaqueId: this.opaqueId,\n      success(pluginHandle): void {\n        instance.handle = pluginHandle;\n        subscriber.next({\n          message: fromModels.ATTACH_SUCCESS\n        });\n      },\n      error(error): void {\n        subscriber.error(error);\n      },\n      consentDialog(on): void {\n        subscriber.next({\n          message: fromModels.CONSENT_DIALOG,\n          payload: {on},\n        });\n      },\n      mediaState(medium, on): void {\n        subscriber.next({\n          message: fromModels.MEDIA_STATE,\n          payload: {medium, on},\n        });\n      },\n      webrtcState(on): void {\n        instance.publishWebrtcState = on;\n        subscriber.next({\n          message: fromModels.WEBRTC_STATE,\n          payload: {on},\n        });\n      },\n      iceState(arg1, arg2): void {\n        // console.log('ICE STATE', arg1, arg2);\n      },\n      slowLink(msg): void {\n      },\n      onmessage(msg, jsep): void {\n        subscriber.next({\n          message: fromModels.ON_MESSAGE,\n          payload: {msg, jsep},\n        });\n        if (!!jsep) {\n          instance.handleRemoteJsep(jsep);\n        }\n      },\n      onlocalstream(stream): void {\n        const streamId = instance._get_random_string();\n        instance.streams[streamId] = stream;\n        subscriber.next({\n          message: fromModels.ON_LOCAL_STREAM,\n          payload: {stream_id: streamId},\n        });\n      },\n      onremotestream(stream): void {\n        // Don't expect this to ever happen\n        subscriber.next({\n          message: fromModels.ON_REMOTE_STREAM,\n          payload: {stream},\n        });\n      },\n      oncleanup(): void {\n        subscriber.next({\n          message: fromModels.ON_CLEANUP,\n        });\n      }\n    });\n  }\n\n  attachVideoRoom(url): Observable {\n    // Create session\n    const instance = this;\n    return new Observable(\n      subscriber => {\n        instance.janus = new Janus({\n          server: url,\n          iceServers: this.iceServers,\n          success: () => {\n            instance._attachVideoRoomHelper(subscriber);\n          },\n          error(error): void {\n            subscriber.error(error);\n          },\n          destroyed(): void {\n            // window.location.reload();\n          }\n        });\n      }\n    );\n  }\n\n  register(name: string, userId: string, roomId: string | number, pin: string): void {\n    const register = {\n      request: 'join',\n      room: roomId,\n      ptype: 'publisher',\n      display: name,\n      id: userId,\n      pin,\n    };\n    this.handle.send({message: register});\n  }\n\n  handleRemoteJsep(jsep): void {\n    this.handle.handleRemoteJsep({jsep});\n  }\n\n  answerRemoteFeedJsep(jsep, feed: RemoteFeed, room: RoomInfo): void {\n    // Handle a jsep message for a remote feed\n\n    const handle = this.remoteHandles[feed.id];\n    handle.createAnswer({\n      jsep,\n      trickle: true,\n      media: { audioSend: false, videoSend: false },  // We want recvonly audio/video\n      success(jsepBody): void {\n        const body = { request: 'start', room: room.id };\n        handle.send({message: body, jsep: jsepBody});\n      },\n      error(error): void {\n        console.log('ERROR in JSEP RESPONSE', error);\n      }\n    });\n  }\n\n  draw(canvasContext, videoElement): void {\n    canvasContext.drawImage(videoElement, 0, 0);\n    const centerX = canvasContext.canvas.width / 2;\n    const centerY = canvasContext.canvas.height / 2;\n    const videoWidth = videoElement.videoWidth;\n    const videoHeight = videoElement.videoHeight;\n\n    canvasContext.fillStyle = '#000';\n    canvasContext.fillRect(0, 0, canvasContext.canvas.width, canvasContext.canvas.height);\n\n    canvasContext.save();\n    canvasContext.translate(centerX, centerY);\n    canvasContext.drawImage(\n      videoElement,\n      -videoWidth / 2,\n      -videoHeight / 2,\n      videoWidth,\n      videoHeight,\n    );\n    canvasContext.restore();\n  }\n\n  startDrawingLoop(canvasElement, videoElement, frameRate: number): void {\n    // Drawing loop using AudioContext oscillator. requestAnimationFrame doesn't fire\n    // on background tabs, so this is a hack to make this work when the user switches tabs\n\n    const instance = this;\n    instance.drawLoopActive = true;\n    const canvasContext = canvasElement.getContext('2d');\n\n    const stepMilliSeconds = 1000 / frameRate;\n\n    function step(): void {\n      if (instance.drawLoopActive) {\n        instance.draw(canvasContext, videoElement);\n        setTimeout(step, stepMilliSeconds);\n        // requestAnimationFrame(step);\n      }\n    }\n    step();\n  }\n\n  _muteVideo(videoElement): void {\n    // Mute a given video element\n\n    const instance = this;\n    function mute(event): void {\n      videoElement.muted = 'muted';\n      videoElement.removeEventListener('playing', mute);\n    }\n\n    videoElement.addEventListener('playing', mute);\n  }\n\n  _sizeCanvasElement(videoWidth: number, videoHeight: number): {canvasWidth: number, canvasHeight: number} {\n    // We're keeping the height the same. Goal is to add black bars to the sides\n    // if we're in portrait mode and crop to the center if we're in landscape.\n    return {\n      canvasWidth: videoHeight * 4 / 3,\n      canvasHeight: videoHeight,\n    };\n  }\n\n  _videoElementSafariHacks(videoElement): void {\n    // safari requires that the video element be in the body\n    const body = document.getElementsByTagName('body')[0];\n    body.appendChild(videoElement);\n    videoElement.setAttribute('style', 'width: 0; height: 0;');\n\n    // safari doesn't always auto-play the way you'd like it to\n    videoElement.addEventListener('canplay', () => videoElement.play());\n  }\n\n  _createVideoElement(canvasId: string, videoStream: any): any {\n    // Create the video element and attach it to the canvas\n\n    const videoElement = document.createElement('video');\n    const canvasElement: any = document.getElementById(canvasId);\n\n    // Firefox has a bug where calling captureStream before calling getContext results in an error.\n    canvasElement.getContext('2d');\n\n    const canvasStream = canvasElement.captureStream();\n    const videoSettings = videoStream.getVideoTracks()[0].getSettings();\n\n    this._videoElementSafariHacks(videoElement);\n\n    Janus.attachMediaStream(videoElement, videoStream);\n    videoElement.autoplay = true;\n    videoElement.setAttribute('playsinline', 'true');\n    videoElement.setAttribute('id', 'self-video');\n\n    // Some browsers don't like it if we set the muted attribute before the video is playing\n    this._muteVideo(videoElement);\n\n    const { canvasWidth, canvasHeight } = this._sizeCanvasElement(videoSettings.width, videoSettings.height);\n    canvasElement.width = canvasWidth;\n    canvasElement.height = canvasHeight;\n\n    const audioTrack = videoStream.getAudioTracks().find((item) => item);\n    if (!!audioTrack) {\n        canvasStream.addTrack(videoStream.getAudioTracks()[0]);\n    }\n\n    this.startDrawingLoop(canvasElement, videoElement, videoSettings.frameRate);\n\n    return {\n      videoElement,\n      canvasStream,\n    };\n  }\n\n  unPublishOwnFeed(): void {\n    // Unpublish your own feed\n    const unpublish = { request: 'unpublish' };\n    this.handle.send({ message: unpublish });\n    this.cleanupLocalStream();\n  }\n\n  publishOwnFeed(\n    audioDeviceId: string | null,\n    videoDeviceId: string,\n    canvasId: string = 'canvas-self',\n  ): Observable {\n    // Publish our own feed\n    return new Observable(\n      subscriber => {\n        if (this.publishWebrtcState) {\n          // Already publishing. Need to unpublish, wait until we're done unpublishing, and then republish\n          this.unPublishOwnFeed();\n          interval(100).pipe(\n            takeWhile(() => this.publishWebrtcState)\n          ).subscribe({\n            complete: () => {\n              this.createOffer(subscriber, audioDeviceId, videoDeviceId, canvasId);\n            }\n          });\n        } else {\n          // Simple case. Not publishing yet\n          this.createOffer(subscriber, audioDeviceId, videoDeviceId, canvasId);\n        }\n      }\n    );\n  }\n\n  createOffer(\n    subscriber,\n    audioDeviceId: string | null,\n    videoDeviceId: string,\n    canvasId: string,\n    retryCount = 0,\n  ): void {\n    const instance = this;\n    instance.webrtcService.getUserMedia(audioDeviceId, videoDeviceId)\n    .then(\n      (videoStream) => {\n        instance.localStream = videoStream;\n        const {videoElement, canvasStream} = instance._createVideoElement(canvasId, videoStream);\n        instance.videoElement = videoElement;\n        this.handle.createOffer({\n          media: { audioRecv: false, videoRecv: false, audioSend: true, videoSend: true },\n          success(jsep): void {\n            const publish = { request: 'configure', audio: true, video: true };\n            instance.handle.send({message: publish, jsep});\n            subscriber.next(true);\n            subscriber.complete();\n          },\n          error(error): void {\n            subscriber.error(error);\n          },\n          simulcast: true,\n          simulcastMaxBitrates: {\n            high: 256000,\n            medium: 128000,\n            low: 64000,\n          },\n          stream: canvasStream,\n          trickle: true,\n        });\n      }\n    ).catch((error) => {\n      // Some devices get intermittent errors. I'm doing a retry here. Not a warm-fuzzy solution. Future would might\n      // find a race condition where we need to wait for an event before calling getUserMedia\n      if (retryCount  {\n          instance.createOffer(\n            subscriber,\n            audioDeviceId,\n            videoDeviceId,\n            canvasId,\n            retryCount = retryCount + 1,\n          );\n        }, 1000);\n      } else {\n        subscriber.error('Could not open capture device', error);\n      }\n    });\n  }\n\n  attachMediaStream(elemId: string, streamId: string): void {\n    const element: any = document.getElementById(elemId);\n    Janus.attachMediaStream(element, this.streams[streamId]);\n  }\n\n  attachRemoteFeed(\n    feed: RemoteFeed,\n    room: RoomInfo,\n    pin: string,\n  ): Observable {\n    // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n\n    const instance = this;\n\n    return new Observable(\n      subscriber => {\n        instance.janus.attach({\n          plugin: 'janus.plugin.videoroom',\n          opaqueId: instance.opaqueId,\n          success(pluginHandle): void {\n            instance.remoteHandles[feed.id] = pluginHandle;\n            instance.remoteHandles[feed.id].videoCodec = feed.video_codec;\n\n            const subscribe = {\n              request: 'join',\n              room: room.id,\n              ptype: 'subscriber',\n              feed: feed.id,\n              private_id: room.privateId,\n              substream: 0,\n              pin,\n            };\n            instance.remoteHandles[feed.id].send({message: subscribe});\n          },\n\n          error(error): void {\n            subscriber.error(error);\n          },\n\n          onmessage(msg, jsep): void {\n            subscriber.next({\n              message: fromModels.ON_REMOTE_FEED_MESSAGE,\n              payload: {\n                msg,\n                jsep,\n                feed,\n                room,\n              },\n            });\n            if (!!jsep) {\n              instance.answerRemoteFeedJsep(jsep, feed, room);\n            }\n          },\n\n          webrtcState(on): void {\n            subscriber.next({\n              message: fromModels.REMOTE_FEED_WEBRTC_STATE,\n              payload: {\n                on,\n                feed,\n                room,\n              },\n            });\n          },\n\n          onlocalstream(stream): void {\n            console.log('Would never expect to get here');\n          },\n\n          slowLink(msg): void {\n            subscriber.next({\n              message: fromModels.REMOTE_FEED_SLOW_LINK,\n              payload: {\n                feedId: feed.id,\n              },\n            });\n          },\n\n          onremotestream(stream): void {\n            // Save off remote stream\n\n            const streamId = instance._get_random_string();\n            instance.streams[streamId] = stream;\n\n            const numVideoTracks = stream.getVideoTracks() ? stream.getVideoTracks().length : 0;\n            subscriber.next({\n              message: fromModels.ON_REMOTE_REMOTE_STREAM,\n              payload: {\n                streamId,\n                numVideoTracks,\n                feed,\n                room,\n              },\n            });\n          },\n          oncleanup(): void {\n            subscriber.next({\n              message: fromModels.ON_REMOTE_CLEANUP,\n              payload: {\n                feed,\n                room,\n              },\n            });\n          }\n        });\n      }\n    );\n  }\n\n  toggleMute(): boolean {\n    const muted = this.handle.isAudioMuted();\n    if (muted) {\n        this.handle.unmuteAudio();\n    } else {\n        this.handle.muteAudio();\n    }\n    return this.handle.isAudioMuted();\n  }\n\n  setMute(mute: boolean): boolean {\n    const muted = this.handle.isAudioMuted();\n    if (muted === mute) {\n      return this.handle.isAudioMuted();\n    }\n\n    if (mute) {\n        this.handle.muteAudio();\n    } else {\n        this.handle.unmuteAudio();\n    }\n    return this.handle.isAudioMuted();\n  }\n\n  requestSubstream(feed: RemoteFeed, substreamId: number): void {\n    this.remoteHandles[feed.id].send({message: {request: 'configure', substream: substreamId}});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^10.1.1\n        \n            @angular/core : ^10.1.1\n        \n            @ngrx/component-store : ^10.0.1\n        \n            moment : ^2.29.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JanusRole   (src/.../janus.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/janus.models.ts\n    \n        \n            \n                \n                    \n                        \n                        JanusRole\n                    \n                \n                    \n                        \n                            Possible roles for a user.\n\n                        \n                    \n                        \n                            \n                                 publisher\n                            \n                        \n                        \n                            \n                                Value : publisher\n                            \n                        \n                        \n                            \n                                 listener\n                            \n                        \n                        \n                            \n                                Value : listener\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJanus Videoroom Component\nThis is an angular library with features to make it easy to embed a videoroom\ninto any angular app. Once you have a properly configured, public instance of a\njanus server with the videoroom plugin enabled, this library includes a\ndirective that will connect clients in a videoroom.\nWhy build this?\nWhen building a product that incorporates a videoroom, the interesting part of\nthe product is how it helps users find, create, edit, join, and view\nvideorooms. That's what gives the product it's competitive advantage. However,\nwhen we started working on our own product, we spent the vast majority of our\nengineering time working with low level webrtc signalling. This mismatch led us\nto believe there's room for improvement in this field. Our goal is to help\nother developers spend more time on their app and less time on webrtc details.\nThe Janus documentation and demos are great for understanding how the service\nworks. However, the sample client code is not easy to adopt into your own\napplication. This makes it so that developers need to write a lot of the low\nlevel code themselves and understand many of the details of the videoroom\nplugin. While more knowledge is always better than less, we believe it's\npossible to implement a videoroom without requiring the developer to understand\nintimate details of webrtc.\nWhat does this implement?\nThe core function provided by this library is a component called JanusVideoroomComponent that implements a videoroom. The selector for the component is janus-videoroom. You can have a fully functional videoroom only specifying the URL of the janus gateway and the room ID. The videoroom supports the following features:\n\nRoom ID You can specify any roomId that is available on the janus gateway.\nhttp and websocket connections You can specify an http and/or websocket URL. The component will prefer the websocket URL and fallback to the http URL.\nPINs You can specify a PIN for any room that requires it.\nAuto Resize Videos are automatically enlarged to take up the maximum screen real estate upon changing the size or orientation of the screen.\nMultiple Aspect Ratios Different source video aspect ratios are handled smoothly.\nDisplay Names You can specify the display name for anyone joining a videoroom.\nPublishers or Read Only Users Users can be publishers, who will send a feed from their camera/microphone, or they can be read only users that don't transmit anything.\nSimulcast Supported clients will publish 3 different quality video feeds and clients will dynamically pick the appropriate stream based on current network conditions\nDevices Device IDs can be input and dynamically changed so that users can change which input or output devices to use.\nICE Servers In addition the the janus gateway, custom STUN/TURN servers can be specified.\nMute Audio Audio can be muted for publishers.\nSupported Platforms Tested and works on Chrome (Windows, macOS, and android) and Safari (macOS and iOS).\n\nWhat does this not implement?\nIn the spirit of doing one thing well, the janus-videoroom component does not\nimplement many necessary parts of an application. For example, the component\nsupports muting the feed of a publisher. However, it does not implement a mute\nbutton. The burden is put on the developer to implement the UX around how to\nmute a feed.\nThe following is a non-exhaustive list of necessary items for most webapps that\nare not implemented by JanusVideoroomComponent. These will have to be\nimplemented by the application outside of this library.\n\nJanus room configuration Create/edit/delete operations on janus rooms are not supported\nUI elements for interaction Mute, change device, etc. are supported by the component, but it does not include UI elements for these.\nUser Authentication\nBackend Storage\nJanus gateway deployment\n\nHow to use\nInstallation\nDependencies\njanus-angular has 3 peer dependencies: webrtc-adapter, @ngrx/component-store, and moment. These can be installed by yarn\nyarn add webrtc-adapter @ngrx/component-store momentInstalling janus-angular\nInstallation is available through yarn\nyarn add janus-angularIncluding the module\nThe JanusModule must be included in your imports for the module in which you wish to use the directive\nimport { JanusModule } from 'janus-angular';\n...\n@NgModule({\n  declarations: [\n    ...\n  ],\n  imports: [\n    ...\n    JanusModule,\n  ],\n})\nexport class YourAppModule { }Using the directive\nThe following minimal component will work with the demo deploy of janus.\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  styleUrls: ['./app.component.scss'],\n  template: `\n    \n    \n  `\n})\nexport class AppComponent {\n  roomId = 1234;\n  wsUrl = 'wss://janus.conf.meetecho.com/ws';\n}Inputs/Outputs for the component are documented in the API docs on this site. Page for the\ncomponent docs is here\nSample Application\nWe have written a small, sample application to show how to use the library. The\nrepo lives here.\nJanus setup\nThis is a client library tightly coupled with a Janus webrtc Server with the\nvideoroom plugin.  The documentation for that can be found on that Janus\nwebsite here.\nFuture Work\nIn addition to tireless bug fixing and making sure it works on all platforms\nand networks, future work will include adding additional touchpoints in which\nsomeone can customize the videoroom. Overlays work great to give rough\nfunctionality to all supported features. However, there are often times when an\napp wants to implement buttons on a publisher video itself, or change the\nentire look and feel of the videoroom. We do this internally, and are working\nto release those touchpoints to the public package.\nDonations\nAre you happy with the product and want to support future development? We\naccept donations\nhere. Donations\nfund development of new features on the library.\nSource Code\nSource code for this library lives here\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        JanusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JanusModule\n\n\n\ncluster_JanusModule_declarations\n\n\n\ncluster_JanusModule_exports\n\n\n\n\nDeviceSelectorComponent\n\nDeviceSelectorComponent\n\n\n\nJanusModule\n\nJanusModule\n\nJanusModule -->\n\nDeviceSelectorComponent->JanusModule\n\n\n\n\n\nJanusVideoroomComponent\n\nJanusVideoroomComponent\n\nJanusModule -->\n\nJanusVideoroomComponent->JanusModule\n\n\n\n\n\nDeviceSelectorComponent \n\nDeviceSelectorComponent \n\nDeviceSelectorComponent  -->\n\nJanusModule->DeviceSelectorComponent \n\n\n\n\n\nJanusVideoroomComponent \n\nJanusVideoroomComponent \n\nJanusVideoroomComponent  -->\n\nJanusModule->JanusVideoroomComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ATTACH_SUCCESS   (src/.../janus-server.models.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            CONSENT_DIALOG   (src/.../janus-server.models.ts)\n                        \n                        \n                            DETACHED   (src/.../janus-server.models.ts)\n                        \n                        \n                            initialState   (src/.../janus.reducers.ts)\n                        \n                        \n                            MEDIA_STATE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_CLEANUP   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_DATA   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_DATA_OPEN   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_LOCAL_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_MESSAGE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_CLEANUP   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_FEED_MESSAGE   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_LOCAL_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_REMOTE_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            ON_REMOTE_STREAM   (src/.../janus-server.models.ts)\n                        \n                        \n                            randomString   (src/.../random.ts)\n                        \n                        \n                            REMOTE_FEED_SLOW_LINK   (src/.../janus-server.models.ts)\n                        \n                        \n                            REMOTE_FEED_WEBRTC_STATE   (src/.../janus-server.models.ts)\n                        \n                        \n                            RemoteFeedFactory   (src/.../janus.factories.ts)\n                        \n                        \n                            REQUEST_SUBSTREAM   (src/.../janus.actions.ts)\n                        \n                        \n                            RoomInfoFactory   (src/.../janus.factories.ts)\n                        \n                        \n                            SLOW_LINK   (src/.../janus-server.models.ts)\n                        \n                        \n                            TOGGLE_MUTE_SUCCESS   (src/.../janus.actions.ts)\n                        \n                        \n                            WEBRTC_STATE   (src/.../janus-server.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/janus-server.models.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ATTACH_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'attach success'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CONSENT_DIALOG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consent dialog'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DETACHED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'detached'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MEDIA_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'media state'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_CLEANUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cleanup'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_DATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_DATA_OPEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'data open'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_LOCAL_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'local stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'message'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_CLEANUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] cleanup'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_FEED_MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] message'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_LOCAL_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] local stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_REMOTE_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] remote stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_REMOTE_STREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'remote stream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REMOTE_FEED_SLOW_LINK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] slow link'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REMOTE_FEED_WEBRTC_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[remote] webrtc state'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SLOW_LINK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'slow link'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WEBRTC_STATE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'webrtc state'\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  AudioBoxComponent,\n  VideoBoxComponent,\n  DefaultVideoRoomComponent,\n  SelfVideoComponent,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  JanusVideoroomComponent,\n  DeviceSelectorComponent,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/store/reducers/janus.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VideoroomState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  roomInfo: {\n    state: RoomInfoState.start,\n    id: null,\n    description: null,\n    privateId: null,\n    otherRoomId: null,\n\n    errorCode: null,\n\n    publishState: PublishState.start,\n    localStreamId: null,\n    muted: false,\n  },\n  remoteFeeds: {},\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/shared/random.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            randomString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ((bytes: number) => {\n  const array = new Uint8Array(bytes);\n  window.crypto.getRandomValues(array);\n\n  // Real pain to find a cross platform way to do this smoothly. Dropping into a for loop\n  let ret = '';\n  for (const item of array) {\n    ret += item.toString(36);\n  }\n\n  return ret;\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/factories/janus.factories.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RemoteFeedFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Factory.Sync.makeFactory({\n  state: RemoteFeedState.initialized,\n  id: Factory.each(i => i.toString()),\n  streamId: Factory.each(i => 'stream' + i.toString()),\n  numVideoTracks: 0,\n  requestedSubstream: 0,\n  currentSubstream: 0,\n  displayName: Factory.each(i => 'name' + i.toString()),\n  audio_codec: Factory.each(i => 'audio' + i.toString()),\n  video_codec: Factory.each(i => 'video' + i.toString()),\n  muted: false,\n  volume: 64,\n  slowLink: null,\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RoomInfoFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Factory.Sync.makeFactory({\n  state: RoomInfoState.start,\n  id: Factory.each(i => i.toString()),\n  description: Factory.each(i => 'description' + i.toString()),\n  privateId: Factory.each(i => i),\n  otherRoomId: Factory.each(i => i),\n  errorCode: null,\n  publishState: PublishState.start,\n  localStreamId: Factory.each(i => 'stream' + i.toString()),\n  muted: false,\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/store/actions/janus.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_SUBSTREAM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Janus] Request Substream'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOGGLE_MUTE_SUCCESS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Janus] Toggle Mute Success'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
